************ Start Display Current Environment ************
WebSphere Platform 9.0.5.2 [BASE 9.0.5.2 f5021945.04] [JAVA8 8.0.6.6 pxa6480sr6fp6-20200303_01] running with process name DefaultCell01\DefaultNode01\server1 and process id 697
Full server name is DefaultCell01\DefaultNode01\server1-697
Host Operating System is Linux, version 4.19.76-linuxkit
Java version = 1.8.0_241, Java Runtime Version = 8.0.6.6 - pxa6480sr6fp6-20200303_01(SR6 FP6), Java Compiler = j9jit29, Java VM name = IBM J9 VM
was.install.root = /opt/IBM/WebSphere/AppServer
user.install.root = /opt/IBM/WebSphere/AppServer/profiles/AppSrv01
Java Home = /opt/IBM/WebSphere/AppServer/java/8.0/jre
ws.ext.dirs = /opt/IBM/WebSphere/AppServer/java/8.0/lib:/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/classes:/opt/IBM/WebSphere/AppServer/classes:/opt/IBM/WebSphere/AppServer/lib:/opt/IBM/WebSphere/AppServer/installedChannels:/opt/IBM/WebSphere/AppServer/lib/ext:/opt/IBM/WebSphere/AppServer/web/help:/opt/IBM/WebSphere/AppServer/deploytool/itp/plugins/com.ibm.etools.ejbdeploy/runtime
Classpath = /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/properties:/opt/IBM/WebSphere/AppServer/properties:/opt/IBM/WebSphere/AppServer/lib/startup.jar:/opt/IBM/WebSphere/AppServer/lib/bootstrap.jar:/opt/IBM/WebSphere/AppServer/lib/jsf-nls.jar:/opt/IBM/WebSphere/AppServer/lib/lmproxy.jar:/opt/IBM/WebSphere/AppServer/lib/urlprotocols.jar:/opt/IBM/WebSphere/AppServer/deploytool/itp/batchboot.jar:/opt/IBM/WebSphere/AppServer/deploytool/itp/batch2.jar:/opt/IBM/WebSphere/AppServer/java/8.0/lib/tools.jar
Java Library path = /opt/IBM/WebSphere/AppServer/lib/native/linux/x86_64/:/opt/IBM/WebSphere/AppServer/java/8.0/jre/lib/amd64/compressedrefs:/opt/IBM/WebSphere/AppServer/java/8.0/jre/lib/amd64:/opt/IBM/WebSphere/AppServer/bin:/opt/IBM/WebSphere/AppServer/nulldllsdir:/usr/lib64:/usr/lib:
Orb Version = IBM Java ORB build orbdev-userlvl-20200106.1711
Max file descriptor count = 1048576
Current trace specification = *=info:com.ibm.ws.security.*=all:com.ibm.websphere.security.*=all
************* End Display Current Environment *************
[5/10/20 3:17:01:401 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:406 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:01:407 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:407 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:408 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:408 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:409 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:409 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:410 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:410 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:411 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:412 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:412 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:413 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:414 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:414 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:415 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:01:416 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:416 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:386 UTC] 000000a1 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:01:417 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:418 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:418 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:418 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:419 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:419 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:420 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:420 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:421 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:422 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:422 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:423 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:423 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:417 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:01:424 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:425 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:425 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:426 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:427 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:427 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:428 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:428 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:429 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:424 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:430 UTC] 000000a1 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:01:431 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:431 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:432 UTC] 000000a1 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:01:432 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:433 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:433 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:434 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:434 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:435 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:436 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:436 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:437 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:437 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:438 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:438 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:439 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:439 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:440 UTC] 000000a1 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:01:440 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:441 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:441 UTC] 000000a1 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:01:442 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:442 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:443 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:443 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:444 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:444 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:445 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:445 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:446 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:446 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:447 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:447 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:448 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:448 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:449 UTC] 000000a1 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:01:449 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:450 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:450 UTC] 000000a1 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:01:451 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:451 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:452 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:452 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:453 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:453 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:454 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:454 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:455 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:455 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:456 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:456 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:457 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:458 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:458 UTC] 000000a1 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:01:458 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:459 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:460 UTC] 000000a1 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:01:460 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:461 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:461 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:461 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:462 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:463 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:463 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:464 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:464 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:430 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:465 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:466 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:466 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:467 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:468 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:01:468 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:469 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:470 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:01:470 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:471 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:471 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:472 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:465 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:473 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:474 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:474 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:474 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:475 UTC] 000000a1 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:01:475 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:476 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:476 UTC] 000000a1 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:01:477 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:477 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:478 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:479 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:479 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:480 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:480 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:481 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:481 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:482 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:482 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:483 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:483 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:484 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:484 UTC] 000000a1 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:01:485 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:485 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:486 UTC] 000000a1 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:01:486 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:487 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:487 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:488 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:488 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:489 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:489 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:490 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:490 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:491 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:491 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:492 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:492 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:493 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:493 UTC] 000000a1 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:01:494 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:473 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:495 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:495 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:496 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:494 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:497 UTC] 000000a1 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:01:498 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:498 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:499 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:499 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:499 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:500 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:500 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:501 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:501 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:502 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:502 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:503 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:503 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:504 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:504 UTC] 000000a1 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:01:497 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:505 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:506 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:506 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:507 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:505 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:508 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:508 UTC] 000000a1 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:01:509 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:509 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:510 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:510 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:511 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:511 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:512 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:512 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:513 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:513 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:514 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:514 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:515 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:515 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:516 UTC] 000000a1 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:01:516 UTC] 000000a1 WebResourceCo <  no match Exit
[5/10/20 3:17:01:517 UTC] 000000a1 WebConstraint <  getConstraints not null Exit
[5/10/20 3:17:01:508 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:518 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:01:519 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:519 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:520 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:01:520 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:521 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:521 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:522 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:523 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:523 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:517 UTC] 000000a1 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /LibertyAdvisorSummary
                                 GET
                                 REQUEST
[5/10/20 3:17:01:524 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:525 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:525 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:526 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:526 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:527 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:528 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:528 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:529 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:01:529 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:530 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:530 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:01:531 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:531 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:532 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:533 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:533 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:534 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:524 UTC] 000000a1 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/LibertyAdvisorSummary]
[5/10/20 3:17:01:535 UTC] 000000a1 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:01:535 UTC] 000000a1 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:01:536 UTC] 000000a1 WebCollaborat 3    List of required roles for uri /LibertyAdvisorSummary is: 
[5/10/20 3:17:01:537 UTC] 000000a1 WebCollaborat 3    required role: administrator
[5/10/20 3:17:01:537 UTC] 000000a1 WebCollaborat 3    required role: operator
[5/10/20 3:17:01:538 UTC] 000000a1 WebCollaborat 3    required role: configurator
[5/10/20 3:17:01:538 UTC] 000000a1 WebCollaborat 3    required role: monitor
[5/10/20 3:17:01:539 UTC] 000000a1 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:01:539 UTC] 000000a1 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:01:540 UTC] 000000a1 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:01:535 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:541 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:540 UTC] 000000a1 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:01:542 UTC] 000000a1 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /LibertyAdvisorSummary
[5/10/20 3:17:01:543 UTC] 000000a1 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:01:543 UTC] 000000a1 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:01:542 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:544 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:545 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:546 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:546 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:547 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:01:544 UTC] 000000a1 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:01:548 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:548 UTC] 000000a1 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:01:549 UTC] 000000a1 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:01:550 UTC] 000000a1 WebConstraint >  existsExactMatchURI Entry
                                 /LibertyAdvisorSummary
[5/10/20 3:17:01:550 UTC] 000000a1 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:01:549 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:551 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:01:552 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:552 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:553 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:554 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:554 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:555 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:555 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:556 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:557 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:557 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:558 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:558 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:560 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:560 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:01:561 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:561 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:562 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:01:562 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:563 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:563 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:564 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:565 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:565 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:566 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:566 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:567 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:551 UTC] 000000a1 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:01:568 UTC] 000000a1 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:01:568 UTC] 000000a1 WebCollaborat 3   isURIBound for uri: /LibertyAdvisorSummary: false
[5/10/20 3:17:01:569 UTC] 000000a1 WebCollaborat 3   securityConstraints for uri /LibertyAdvisorSummary are: com.ibm.ws.security.web.WebResourceCollectionConstraints@6562c431
[5/10/20 3:17:01:568 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:570 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:571 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:571 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:572 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:572 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:01:573 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:570 UTC] 000000a1 WebCollaborat 3   URI -  /LibertyAdvisorSummary.GET is protected
[5/10/20 3:17:01:574 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:01:575 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:575 UTC] 000000a1 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:574 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:576 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:01:575 UTC] 000000a1 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:01:577 UTC] 000000a1 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:01:577 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:578 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:579 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:579 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:580 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:580 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:581 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:581 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:582 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:582 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:583 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:585 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:585 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:01:586 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:586 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:587 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:01:587 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:588 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:578 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:01:589 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:01:589 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:01:590 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:01:590 UTC] 000000a1 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:01:591 UTC] 000000a1 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:01:591 UTC] 000000a1 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:01:592 UTC] 000000a1 WebCollaborat 3   required roles: operator
[5/10/20 3:17:01:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:593 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:594 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:594 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:595 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:596 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:596 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:597 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:597 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:598 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:599 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:593 UTC] 000000a1 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:01:600 UTC] 000000a1 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:01:601 UTC] 000000a1 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:01:601 UTC] 000000a1 WebCollaborat 3   http method: GET
[5/10/20 3:17:01:602 UTC] 000000a1 WebCollaborat 3   http method: POST
[5/10/20 3:17:01:602 UTC] 000000a1 WebCollaborat 3   http method: PUT
[5/10/20 3:17:01:600 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:01:603 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:604 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:604 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:01:605 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:606 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:606 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:607 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:607 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:608 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:608 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:609 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:610 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:610 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:611 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:611 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:612 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:613 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:613 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:01:614 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:614 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:615 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:01:603 UTC] 000000a1 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:01:616 UTC] 000000a1 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:01:617 UTC] 000000a1 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@cff9343c
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@1c034a94
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:617 UTC] 000000a1 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:01:618 UTC] 000000a1 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

[5/10/20 3:17:01:618 UTC] 000000a1 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
[5/10/20 3:17:01:619 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:619 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:01:616 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:620 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:621 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:622 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:622 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:623 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:620 UTC] 000000a1 ContextManage 3   Returning: 
[5/10/20 3:17:01:624 UTC] 000000a1 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:01:624 UTC] 000000a1 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:01:625 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:623 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:626 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:626 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:627 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:628 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:628 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:630 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:630 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:01:631 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:631 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:632 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:01:633 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:633 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:635 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:635 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:636 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:636 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:637 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:638 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:638 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:640 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:641 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:01:641 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:642 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:643 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:01:643 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:644 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:645 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:645 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:646 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:647 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:647 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:648 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:648 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:649 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:625 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:01:651 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:01:651 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:652 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:01:653 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:653 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:654 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:01:654 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:655 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:656 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:656 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:657 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:658 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:658 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:658 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:659 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:660 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:660 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:661 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:661 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:662 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:662 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:01:663 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:663 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:664 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:01:664 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:665 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:666 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:666 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:667 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:667 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:668 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:669 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:669 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:670 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:670 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:671 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:672 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:672 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:673 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:01:673 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:674 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:674 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:01:675 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:652 UTC] 000000a1 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:01:676 UTC] 000000a1 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:01:677 UTC] 000000a1 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:01:677 UTC] 000000a1 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:01:678 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:678 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:676 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:679 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:679 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:681 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:01:681 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:682 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:683 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:683 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:684 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:684 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:685 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:686 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:686 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:687 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:688 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:01:688 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:689 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:689 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:01:690 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:690 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:691 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:691 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:692 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:693 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:693 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:694 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:695 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:695 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:696 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:698 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:699 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:01:700 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:701 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:701 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:01:702 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:703 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:703 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:704 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:704 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:705 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:705 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:706 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:707 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:707 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:708 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:709 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:709 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:710 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:711 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:01:711 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:712 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:712 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:01:682 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:01:714 UTC] 000000a1 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:01:714 UTC] 000000a1 RoleBasedSubj 3   server allowed
[5/10/20 3:17:01:713 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:715 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:716 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:715 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:01:717 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:01:718 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:717 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:719 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:720 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:720 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:721 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:721 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:722 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:722 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:723 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:718 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:724 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:724 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:725 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:726 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:01:726 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:727 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:725 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:728 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:01:729 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:729 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:730 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:730 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:731 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:732 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:732 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:733 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:734 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:734 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:735 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:737 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:737 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:01:738 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:739 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:739 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:01:740 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:740 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:742 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:743 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:743 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:744 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:745 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:745 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:746 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:746 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:747 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:748 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:748 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:01:749 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:749 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:750 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:01:750 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:751 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:728 UTC] 000000a1 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:01:752 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:752 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:753 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:754 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:754 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:755 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:756 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:756 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:757 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:757 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:758 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:753 UTC] 000000a1 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:01:759 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:759 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:760 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:761 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:01:760 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:762 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:762 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:763 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:764 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:01:764 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:765 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:765 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:766 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:767 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:767 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:768 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:769 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:769 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:770 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:770 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:772 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:763 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:01:773 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:01:774 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:01:774 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:01:773 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:01:775 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:776 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:776 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:01:777 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:778 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:778 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:779 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:775 UTC] 000000a1 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:01:780 UTC] 000000a1 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:01:781 UTC] 000000a1 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:01:781 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:781 UTC] 000000a1 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:01:782 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:01:780 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:783 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:784 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:784 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:785 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:785 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:786 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:787 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:787 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:788 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:789 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:01:789 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:790 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:790 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:01:791 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:791 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:792 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:793 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:793 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:794 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:794 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:795 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:796 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:796 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:797 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:798 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:782 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:01:799 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:800 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:01:800 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:801 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:802 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:01:802 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:803 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:804 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:804 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:805 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:805 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:806 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:806 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:807 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:807 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:808 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:799 UTC] 000000a1 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:01:808 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:810 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:810 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:811 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:01:812 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:812 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:813 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:01:813 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:814 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:814 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:815 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:816 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:816 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:817 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:809 UTC] 000000a1 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:01:818 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:819 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:819 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:820 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:820 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:821 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:821 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:822 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:01:823 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:823 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:824 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:01:824 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:825 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:826 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:826 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:827 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:828 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:829 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:829 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:830 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:831 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:831 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:833 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:834 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:01:834 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:835 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:01:835 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:01:836 UTC] 00000098 WebResourceCo >  matches Entry
                                 /LibertyAdvisorSummary
                                 GET
                                 true
[5/10/20 3:17:01:836 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:818 UTC] 000000a1 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:01:838 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:839 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:840 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:01:840 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:01:841 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:01:842 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:01:842 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:01:843 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:01:844 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:01:844 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:01:845 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:01:845 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:01:846 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:01:847 UTC] 00000098 WebConstraint <  getConstraints not null Exit
[5/10/20 3:17:01:839 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:848 UTC] 000000a1 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:847 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /LibertyAdvisorSummary
                                 GET
                                 REQUEST
[5/10/20 3:17:01:849 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/LibertyAdvisorSummary]
[5/10/20 3:17:01:850 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:01:849 UTC] 000000a1 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:01:851 UTC] 000000a1 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:01:852 UTC] 000000a1 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:01:852 UTC] 000000a1 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:01:853 UTC] 000000a1 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:01:851 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:01:854 UTC] 00000098 WebCollaborat 3    List of required roles for uri /LibertyAdvisorSummary is: 
[5/10/20 3:17:01:854 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:01:853 UTC] 000000a1 WebCollaborat 3   Authorization check for uri: /LibertyAdvisorSummary succeeded. 
[5/10/20 3:17:01:855 UTC] 000000a1 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@49243dd2
[5/10/20 3:17:01:856 UTC] 000000a1 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@49243dd2
[5/10/20 3:17:01:856 UTC] 000000a1 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:01:855 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:01:858 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:01:858 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:01:857 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:01:859 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:01:860 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:01:861 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:01:861 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:01:862 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /LibertyAdvisorSummary
[5/10/20 3:17:01:863 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:01:860 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:863 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:01:864 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:01:865 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:01:864 UTC] 000000a1 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@2fe02a4c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 LibertyAdvisorSummaryServlet
                                 isclite
[5/10/20 3:17:01:866 UTC] 000000a1 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:01:867 UTC] 000000a1 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:01:867 UTC] 000000a1 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:01:866 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:01:869 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /LibertyAdvisorSummary
[5/10/20 3:17:01:868 UTC] 000000a1 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:01:870 UTC] 000000a1 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:01:870 UTC] 000000a1 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:01:869 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:01:871 UTC] 000000a1 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:01:872 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:872 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:01:873 UTC] 000000a1 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:01:873 UTC] 000000a1 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:01:871 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:01:874 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:01:875 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /LibertyAdvisorSummary: false
[5/10/20 3:17:01:876 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /LibertyAdvisorSummary are: com.ibm.ws.security.web.WebResourceCollectionConstraints@6562c431
[5/10/20 3:17:01:876 UTC] 00000098 WebCollaborat 3   URI -  /LibertyAdvisorSummary.GET is protected
[5/10/20 3:17:01:874 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:878 UTC] 000000a1 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@35c78ace
[5/10/20 3:17:01:878 UTC] 000000a1 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@35c78ace
[5/10/20 3:17:01:879 UTC] 000000a1 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@542e3448
                                 LibertyAdvisorSummaryServlet
[5/10/20 3:17:01:879 UTC] 000000a1 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@542e3448
                                 LibertyAdvisorSummaryServlet
[5/10/20 3:17:01:877 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:01:880 UTC] 000000a1 MethodDelegat 3   servletMap :null
[5/10/20 3:17:01:881 UTC] 000000a1 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:01:882 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:881 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:883 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:882 UTC] 000000a1 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:884 UTC] 000000a1 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:883 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:01:885 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:01:886 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:01:886 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:01:887 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:01:887 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:01:885 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:01:888 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:889 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:01:889 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:01:890 UTC] 000000a1 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@8eca2b1e
[5/10/20 3:17:01:888 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:01:891 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:01:891 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:01:892 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:01:893 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:01:893 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:01:890 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:895 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:895 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:896 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:896 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:897 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:897 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:898 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:898 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:899 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:899 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:894 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:01:900 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:01:901 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:01:901 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:01:902 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:01:900 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:903 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:903 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:01:904 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:905 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:905 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:906 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:906 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:907 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:907 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:908 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:908 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:904 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@34666020
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@1c034a94
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:910 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:01:909 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:911 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:910 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

[5/10/20 3:17:01:911 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:912 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
[5/10/20 3:17:01:913 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:914 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:01:914 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:01:912 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:915 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:916 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:916 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:917 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:917 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:918 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:918 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:915 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:01:919 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:01:920 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:919 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:921 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:922 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:922 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:921 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:01:923 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:01:923 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:924 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:925 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:925 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:926 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:926 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:927 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:924 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:01:927 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:928 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:01:929 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:01:930 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:01:930 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:931 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:931 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:932 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:01:929 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:933 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:933 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:934 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:935 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:935 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:935 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:936 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:936 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:937 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:932 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:01:938 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:01:939 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:01:940 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:01:940 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:01:941 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:941 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:942 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:942 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:938 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:943 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:944 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:944 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:945 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:945 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:943 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:01:947 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:947 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:01:948 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:948 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:949 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:950 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:01:950 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:01:946 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:951 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:952 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:952 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:953 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:951 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:01:954 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:01:954 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:01:955 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:01:953 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:956 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:01:957 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:01:958 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:01:958 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:01:959 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:01:959 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:01:960 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:01:960 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:01:956 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:01:961 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:962 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:01:962 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:01:961 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:963 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:963 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:01:965 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:01:965 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:01:965 UTC] 000000a1 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:01:966 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:967 UTC] 000000a1 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:01:966 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:01:968 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:969 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:969 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:970 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:01:970 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:01:968 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:971 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:01:972 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:01:973 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:01:973 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /LibertyAdvisorSummary succeeded. 
[5/10/20 3:17:01:974 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@2d619ff8
[5/10/20 3:17:01:974 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@2d619ff8
[5/10/20 3:17:01:975 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:01:972 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:01:976 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:01:976 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:977 UTC] 000000a1 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:978 UTC] 000000a1 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:01:976 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:01:978 UTC] 000000a1 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:01:979 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:980 UTC] 000000a1 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:01:981 UTC] 000000a1 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:01:981 UTC] 000000a1 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:01:980 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@252db91b[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 LibertyAdvisorSummaryServlet
                                 isclite
[5/10/20 3:17:01:982 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:01:983 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:984 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:01:984 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:01:983 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:01:986 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:01:986 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:01:986 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:01:987 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:01:988 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:01:988 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:985 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:01:989 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:01:989 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:01:990 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:01:991 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:01:992 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:992 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@2a20148d
[5/10/20 3:17:01:993 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@2a20148d
[5/10/20 3:17:01:993 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@a0780011
                                 LibertyAdvisorSummaryServlet
[5/10/20 3:17:01:994 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@a0780011
                                 LibertyAdvisorSummaryServlet
[5/10/20 3:17:01:990 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:01:994 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:01:995 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:01:996 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:01:996 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:995 UTC] 000000a1 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@d56afe4c
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@312516bf
                                 /ibm/console
                                 admin_host
                                 <null>
                                 false
[5/10/20 3:17:01:997 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:01:998 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:01:999 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:000 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:000 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:001 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@94aaa28b
[5/10/20 3:17:01:998 UTC] 000000a1 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[image/webp,*/*]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/collectionButton.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]

[5/10/20 3:17:02:002 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:003 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:003 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:004 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:004 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:005 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:002 UTC] 000000a1 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/LibertyAdvisorSummary, Path Info=null
[5/10/20 3:17:02:006 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:006 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:007 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:02:008 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:008 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:02:005 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:009 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:010 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:009 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:011 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:009 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:02:010 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:013 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:012 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:014 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:014 UTC] 000000a1 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:02:015 UTC] 000000a1 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ce6d25b7
[5/10/20 3:17:02:013 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:016 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:017 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:017 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:018 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:016 UTC] 000000a1 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:02:019 UTC] 000000a1 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:02:019 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:020 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:021 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:021 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:022 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:023 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:020 UTC] 000000a1 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:02:024 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:02:024 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:025 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:026 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:026 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:027 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:028 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:028 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:029 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:029 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:030 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:025 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:031 UTC] 000000a1 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ce6d25b7
[5/10/20 3:17:02:031 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:032 UTC] 000000a1 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@d56afe4c
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@312516bf
                                 /ibm/console
                                 admin_host
                                 <null>
                                 false
[5/10/20 3:17:02:033 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:034 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:035 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:035 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:036 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:037 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:037 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:034 UTC] 000000a1 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[image/webp,*/*]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/collectionButton.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]

[5/10/20 3:17:02:038 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:039 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:039 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:040 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:038 UTC] 000000a1 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/LibertyAdvisorSummary, Path Info=null
[5/10/20 3:17:02:041 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:042 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:042 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:02:041 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:043 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:044 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:02:045 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:045 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:045 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:02:046 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:047 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:048 UTC] 000000a1 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:02:049 UTC] 000000a1 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a95bae1a
[5/10/20 3:17:02:044 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:050 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:050 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:051 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:049 UTC] 000000a1 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:02:052 UTC] 000000a1 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:02:051 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:053 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:054 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:054 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:055 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:056 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:053 UTC] 000000a1 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:02:057 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:058 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:059 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:059 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:060 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:060 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:061 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:061 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:062 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:063 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:063 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:057 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:02:065 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:065 UTC] 000000a1 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a95bae1a
[5/10/20 3:17:02:064 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:066 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@a95bae1a
[5/10/20 3:17:02:067 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:067 UTC] 000000a1 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:02:068 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:02:069 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:070 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:070 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:071 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:02:071 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:072 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:072 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:02:073 UTC] 000000a1 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:074 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:068 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:074 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:074 UTC] 000000a1 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:02:076 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:02:077 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:077 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:02:078 UTC] 000000a1 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:075 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:079 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:080 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:080 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:081 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:082 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:082 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:083 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:079 UTC] 000000a1 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@a95bae1a
[5/10/20 3:17:02:085 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:084 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:02:086 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:087 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:02:086 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@ce6d25b7
[5/10/20 3:17:02:087 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:089 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:089 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:090 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:090 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:088 UTC] 000000a1 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:02:092 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:02:091 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:02:092 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:093 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:094 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:095 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:02:095 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:096 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:096 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:02:097 UTC] 000000a1 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:097 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:098 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:097 UTC] 000000a1 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:02:099 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:02:100 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:101 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:02:101 UTC] 000000a1 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:093 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:02:102 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:02:103 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:02:104 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:02:102 UTC] 000000a1 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@ce6d25b7
[5/10/20 3:17:02:105 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:105 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:106 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:107 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:108 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:108 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:106 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:02:110 UTC] 000000a1 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:110 UTC] 000000a1 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:111 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:111 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:112 UTC] 000000a1 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:109 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:112 UTC] 000000a1 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:115 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:116 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:116 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:117 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:114 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:118 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:02:119 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:02:119 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:120 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:120 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:02:121 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:02:122 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:122 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:123 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:123 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:118 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@8eca2b1e
[5/10/20 3:17:02:125 UTC] 000000a1 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:02:125 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:02:126 UTC] 000000a1 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:02:127 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:127 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:128 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:02:128 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:02:129 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:130 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:17:02:131 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:02:131 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:132 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:02:124 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@94aaa28b
[5/10/20 3:17:02:133 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:02:134 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:02:134 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:02:135 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:136 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:136 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:02:137 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:02:137 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:138 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:138 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:02:139 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:140 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:02:133 UTC] 000000a1 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@8eca2b1e
[5/10/20 3:17:02:141 UTC] 000000a1 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:02:142 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:140 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@94aaa28b
[5/10/20 3:17:02:143 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:02:144 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:143 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:02:145 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:144 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:02:146 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:02:160 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:17:02:161 UTC] 00000098 ContextManage >  clearCallerContext Entry
[5/10/20 3:17:02:162 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:163 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:164 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:02:165 UTC] 00000098 ContextManage <  clearCallerContext Exit
[5/10/20 3:17:02:166 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:17:02:167 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 /ibm/console
                                 admin_host
                                 /secure/javascriptToSession.jsp
                                 true
[5/10/20 3:17:02:168 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[*/*]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
csrfid=[Yzn-ElDoEaywpPldxqBgcRA]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/collectionButton.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=373395383; com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]

[5/10/20 3:17:02:168 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/javascriptToSession.jsp, Path Info=null
[5/10/20 3:17:02:170 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:170 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:171 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:171 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:17:02:172 UTC] 00000098 ContextManage 3   Returning: true
[5/10/20 3:17:02:173 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:174 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:02:174 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:17:02:175 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:02:176 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:17:02:176 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:17:02:177 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@bd6df40e
[5/10/20 3:17:02:177 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:02:178 UTC] 00000098 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:17:02:179 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:179 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:02:180 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:17:02:181 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:181 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:02:182 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:17:02:183 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:02:183 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:02:184 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:02:184 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@bcb76bd[isclite#isclite.war#/secure/javascriptToSession.jsp]
[5/10/20 3:17:02:185 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:186 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:02:186 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:17:02:187 UTC] 00000098 EJSWebCollabo 3   preInvoke pushing admin
[5/10/20 3:17:02:188 UTC] 00000098 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@bd6df40e
[5/10/20 3:17:02:188 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:02:189 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:02:190 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:02:190 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:02:191 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:02:192 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:193 UTC] 00000098 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@2f36eb5f[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:02:193 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:02:194 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:02:195 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:02:195 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:02:196 UTC] 00000098 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 admin_host:/ibm/console
                                 true
                                 isclite
[5/10/20 3:17:02:196 UTC] 00000098 URLHandler    3   URI requested: /secure/javascriptToSession.jsp
[5/10/20 3:17:02:197 UTC] 00000098 URLHandler    3   URI returned: /secure/javascriptToSession.jsp
[5/10/20 3:17:02:198 UTC] 00000098 LRUCache      >  get Entry
                                 isclite
[5/10/20 3:17:02:198 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:02:199 UTC] 00000098 PermissionRol 3   App permission cache found for isclite
[5/10/20 3:17:02:200 UTC] 00000098 LRUCache      >  get Entry
                                 com.ibm.ws.security.web.WebAccessPermission@4ae3be18
[5/10/20 3:17:02:200 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:02:201 UTC] 00000098 PermissionRol 3   isclite, /secure/javascriptToSession.jsp:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:02:202 UTC] 00000098 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:17:02:202 UTC] 00000098 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@b16c6e17
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@684f7749
[5/10/20 3:17:02:203 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:02:203 UTC] 00000098 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 
  Authorization Table [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AuthorizationTableImpl@8bef5cf4 ]
  Authorization Table contains [ 4 ] role assignments
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@535bf73f ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 1 ] special subjects
          Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.ServerImpl@93671b63 ]
            Name      [ Server ]
            Access ID [ Server ]
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@a26b0e0 ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@8feb60dd ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@9212975a ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects

                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@684f7749
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:17:02:204 UTC] 00000098 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:17:02:205 UTC] 00000098 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:17:02:205 UTC] 00000098 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:17:02:206 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /secure/javascriptToSession.jsp
                                 GET
[5/10/20 3:17:02:206 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:02:207 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:02:207 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:02:208 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:209 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:209 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:210 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:02:210 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:211 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:211 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:212 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:212 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:213 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:214 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:215 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:215 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:216 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:216 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:217 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:217 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:218 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:219 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:02:219 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:220 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:220 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:02:221 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:221 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:222 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:223 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:223 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:224 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:224 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:225 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:225 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:226 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:227 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:227 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:228 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:228 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:229 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:02:230 UTC] 00000098 WebResourceCo <  matches (PathName) : /secure/* Exit
[5/10/20 3:17:02:230 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:231 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:02:231 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:232 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:232 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:233 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:234 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:234 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:235 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:235 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:236 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:237 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:237 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:238 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:238 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:239 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:239 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:02:240 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:241 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:241 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:02:242 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:242 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:243 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:243 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:244 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:244 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:245 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:246 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:246 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:247 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:247 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:248 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:249 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:250 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:02:250 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:251 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:251 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:02:252 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:253 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:253 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:254 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:255 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:256 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:256 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:257 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:257 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:258 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:259 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:260 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:260 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:02:261 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:261 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:262 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:02:263 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:263 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:264 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:264 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:265 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:266 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:266 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:267 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:267 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:268 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:269 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:269 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:270 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:270 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:271 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:02:271 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:272 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:272 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:02:273 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:273 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:274 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:274 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:275 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:276 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:276 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:277 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:277 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:278 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:278 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:279 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:280 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:280 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:281 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:02:281 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:282 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:283 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:02:283 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:284 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:284 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:285 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:285 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:286 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:287 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:287 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:288 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:288 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:289 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:290 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:291 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:291 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:02:292 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:292 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:293 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:02:293 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:294 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:295 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:295 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:296 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:296 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:297 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:298 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:298 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:299 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:299 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:300 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:300 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:301 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:302 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:02:302 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:303 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:303 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:02:304 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:305 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:305 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:306 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:306 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:307 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:307 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:308 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:309 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:309 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:310 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:310 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:311 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:311 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:312 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:02:312 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:313 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:314 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:02:314 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:315 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:315 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:316 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:317 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:317 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:318 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:318 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:319 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:320 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:320 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:322 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:322 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:02:323 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:324 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:324 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:02:325 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:325 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:326 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:326 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:327 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:327 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:328 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:329 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:329 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:330 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:330 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:331 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:332 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:332 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:333 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:02:333 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:334 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:335 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:02:335 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:336 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:336 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:337 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:337 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:338 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:339 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:339 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:340 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:341 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:341 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:342 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:342 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:343 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:343 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:02:344 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:345 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:345 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:02:346 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:346 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:347 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:347 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:348 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:349 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:349 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:350 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:350 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:351 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:351 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:352 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:353 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:353 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:354 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:02:354 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:355 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:356 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:02:356 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:357 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:357 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:358 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:359 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:359 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:360 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:360 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:361 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:362 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:362 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:363 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:363 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:364 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:364 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:02:365 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:366 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:366 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:02:367 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:367 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:368 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:368 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:369 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:369 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:370 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:371 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:371 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:372 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:372 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:373 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:373 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:374 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:375 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:02:375 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:376 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:376 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:02:377 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:378 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:378 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:379 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:380 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:380 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:381 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:382 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:382 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:383 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:384 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:384 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:385 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:386 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:02:386 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:387 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:388 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:02:388 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:389 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:389 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:390 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:390 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:391 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:391 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:392 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:393 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:393 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:394 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:394 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:396 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:396 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:02:397 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:397 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:398 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:02:399 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:399 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:401 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:401 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:402 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:403 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:403 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:404 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:404 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:406 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:406 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:407 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:02:407 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:408 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:408 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:02:409 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:410 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:411 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:411 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:412 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:412 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:413 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:413 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:414 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:414 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:415 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:416 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:416 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:417 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:02:417 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:418 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:418 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:02:419 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:420 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:420 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:421 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:421 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:422 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:422 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:423 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:423 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:424 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:424 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:425 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:426 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:426 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:427 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:02:427 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:428 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:428 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:02:429 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:430 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:430 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:431 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:431 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:432 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:433 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:433 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:434 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:434 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:435 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:435 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:436 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:436 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:437 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:02:438 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:438 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:439 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:02:439 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:440 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:441 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:441 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:442 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:443 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:443 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:444 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:444 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:445 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:446 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:446 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:447 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:447 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:448 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:02:448 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:449 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:450 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:02:450 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:451 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:452 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:452 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:453 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:453 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:454 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:455 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:455 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:456 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:456 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:457 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:457 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:458 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:459 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:02:459 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:460 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:460 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:02:461 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:462 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:462 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:463 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:463 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:464 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:465 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:465 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:466 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:466 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:467 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:467 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:468 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:469 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:469 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:02:470 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:470 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:471 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:02:472 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:472 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:473 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:473 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:474 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:474 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:475 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:475 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:476 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:477 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:477 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:478 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:478 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:479 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:480 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:02:480 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:481 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:481 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:02:482 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:483 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:483 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:484 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:484 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:485 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:485 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:486 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:486 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:487 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:488 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:488 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:489 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:489 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:490 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:02:490 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:491 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:491 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:02:492 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:493 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:493 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:494 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:494 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:495 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:496 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:496 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:497 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:497 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:498 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:498 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:499 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:499 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:500 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:02:500 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:501 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:502 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:02:502 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:503 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:503 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:504 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:505 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:505 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:506 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:506 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:507 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:507 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:508 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:508 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:509 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:509 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:510 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:02:510 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:511 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:512 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:02:512 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:513 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:513 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:514 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:514 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:515 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:515 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:516 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:516 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:517 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:518 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:518 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:519 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:519 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:520 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:02:520 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:521 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:522 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:02:522 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:523 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:523 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:524 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:524 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:525 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:525 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:526 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:526 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:527 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:528 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:528 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:529 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:529 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:530 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:02:530 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:531 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:531 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:02:532 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:532 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:533 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:533 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:534 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:534 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:535 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:536 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:536 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:537 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:537 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:538 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:538 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:539 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:539 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:02:540 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:541 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:541 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:02:542 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:542 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:543 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:543 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:544 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:544 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:545 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:546 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:546 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:547 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:547 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:548 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:549 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:549 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:550 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:02:550 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:551 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:551 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:02:552 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:553 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:553 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:554 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:554 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:555 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:555 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:556 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:557 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:557 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:558 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:560 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:561 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:02:562 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:562 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:563 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:02:564 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:564 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:566 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:566 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:567 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:568 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:568 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:569 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:569 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:570 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:571 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:572 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:572 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:02:573 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:573 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:574 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:02:574 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:575 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:576 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:576 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:577 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:577 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:578 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:578 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:579 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:579 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:580 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:580 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:581 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:581 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:582 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:02:583 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:583 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:584 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:02:584 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:585 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:585 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:586 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:587 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:587 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:588 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:588 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:589 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:589 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:590 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:591 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:591 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:592 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:02:593 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:593 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:594 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:02:595 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:595 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:596 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:597 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:597 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:598 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:598 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:599 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:600 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:600 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:601 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:601 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:602 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:602 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:603 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:02:604 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:604 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:605 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:02:605 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:606 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:606 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:607 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:608 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:608 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:609 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:609 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:610 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:611 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:611 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:612 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:612 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:613 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:613 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:02:614 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:615 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:615 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:02:616 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:617 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:617 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:618 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:618 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:619 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:620 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:620 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:621 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:621 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:622 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:623 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:623 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:624 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:624 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:02:625 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:625 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:626 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:02:627 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:627 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:628 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:629 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:630 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:630 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:631 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:631 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:632 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:633 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:633 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:634 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:635 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:02:636 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:636 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:637 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:02:637 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:638 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:638 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:640 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:640 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:641 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:641 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:642 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:642 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:643 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:645 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:646 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:02:646 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:647 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:648 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:02:649 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:649 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:651 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:652 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:652 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:653 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:654 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:654 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:655 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:655 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:656 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:656 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:657 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:02:658 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:658 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:659 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:02:659 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:660 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:661 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:661 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:662 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:663 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:663 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:664 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:664 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:665 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:666 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:666 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:667 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:667 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:668 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:02:669 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:669 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:670 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:02:670 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:671 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:671 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:672 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:672 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:673 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:673 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:674 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:675 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:675 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:676 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:677 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:677 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:678 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:678 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:02:679 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:679 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:680 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:02:680 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:681 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:682 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:682 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:683 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:683 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:684 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:684 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:685 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:685 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:686 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:687 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:687 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:688 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:688 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:02:689 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:690 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:690 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:02:691 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:691 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:692 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:692 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:693 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:694 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:694 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:695 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:695 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:696 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:696 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:698 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:699 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:02:699 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:700 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:700 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:02:701 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:701 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:703 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:703 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:704 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:704 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:705 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:706 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:706 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:707 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:707 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:708 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:708 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:02:709 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:710 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:710 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:02:711 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:711 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:712 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:713 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:713 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:714 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:714 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:715 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:716 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:716 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:717 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:717 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:718 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:719 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:719 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:02:720 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:720 UTC] 00000098 WebConstraint <  getConstraints not null Exit
[5/10/20 3:17:02:721 UTC] 00000098 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@5d32bc20
[5/10/20 3:17:02:721 UTC] 00000098 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:17:02:722 UTC] 00000098 WebCollaborat >  invokeTAI Entry
[5/10/20 3:17:02:722 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:17:02:723 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:17:02:724 UTC] 00000098 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:17:02:724 UTC] 00000098 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:17:02:725 UTC] 00000098 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:17:02:725 UTC] 00000098 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:17:02:726 UTC] 00000098 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:17:02:727 UTC] 00000098 WebCollaborat >  shouldPerformLogin Entry
                                 isclite
                                 true
                                 false
[5/10/20 3:17:02:727 UTC] 00000098 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:17:02:728 UTC] 00000098 WebCollaborat 3   webSecAttr=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:17:02:728 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /secure/javascriptToSession.jsp
                                 GET
                                 REQUEST
[5/10/20 3:17:02:729 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/secure/javascriptToSession.jsp]
[5/10/20 3:17:02:729 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:02:730 UTC] 00000098 TrustAssociat >  getInstance Entry
[5/10/20 3:17:02:731 UTC] 00000098 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:17:02:731 UTC] 00000098 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:17:02:732 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:17:02:732 UTC] 00000098 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@2f36eb5f[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:02:733 UTC] 00000098 WebAuthentica 3   challengeType = FORM Authorization header = null
[5/10/20 3:17:02:734 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:02:734 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:02:735 UTC] 00000098 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:17:02:736 UTC] 00000098 WebAuthentica >  handleSSO Entry
[5/10/20 3:17:02:737 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:17:02:737 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:17:02:738 UTC] 00000098 WebAuthentica 3   Attempting primary cookie validation for: LtpaToken2
[5/10/20 3:17:02:738 UTC] 00000098 WebAuthentica >  validateCookie Entry
                                 [Ljavax.servlet.http.Cookie;@2793dc91
                                 LtpaToken2
[5/10/20 3:17:02:739 UTC] 00000098 CookieHelper  >  getCookieValues Entry
                                 LtpaToken2
[5/10/20 3:17:02:739 UTC] 00000098 CookieHelper  <  getCookieValues Exit
                                 [acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==]
[5/10/20 3:17:02:740 UTC] 00000098 WebAuthentica >  validate Entry
[5/10/20 3:17:02:740 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:02:741 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:02:742 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:742 UTC] 00000098 ContextManage >  login Entry
                                 defaultWIMFileBasedRealm
                                 [B@b1f8bdec
                                 system.WEB_INBOUND
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
                                 <null>
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:17:02:743 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:743 UTC] 00000098 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:17:02:744 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:744 UTC] 00000098 ContextManage 3   Web inbound login config: system.WEB_INBOUND
[5/10/20 3:17:02:745 UTC] 00000098 ContextManage 3   Looking for opaque token on the thread before Subject cache lookup.
[5/10/20 3:17:02:745 UTC] 00000098 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 [B@b1f8bdec
                                 <null>
[5/10/20 3:17:02:746 UTC] 00000098 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:17:02:746 UTC] 00000098 ContextManage 3   Looking for subject from cache using token as lookup.
[5/10/20 3:17:02:747 UTC] 00000098 AuthCache     >  getSubject Entry
                                     69c020d5 729db5de 912b6d15 04965053 42d78026 c921f5f0 c6925a39 97a38ff4 
    b0734e79 0cb65c85 e0d348bf 3f505529 c1c49842 7b4560f2 9d00a7ad 10b6465a 
    ad8fc2e7 22ddb609 39575683 805946a5 151bcd15 4c359985 6ed1739c 8f79e0bd 
    c1509104 98661ec3 7b3cc7e3 ae518af1 1de892e7 8a0f7752 c0f41b90 4124efff 
    2f76eff6 14dfe87f 531c179e 8694c2ac cea813c2 80482c98 f1a2f191 d93f7e12 
    acb5f67a 2c5262ce 1c2f1426 2a858026 76e2da06 95faf81d 4dc14eed 449bf1e3 
    bbc8dc8b 6da0b373 a6da1fd2 3a461774 27a6e650 75e902e8 ad6369b1 a1695d73 
    be25a3a7 a1d7aee6 25df500e 055af3d2 1f5024ed 9530d079 d84f3a42 03b227e2 
    676d2dbc 09b5d0cf c376ed37 67ca5676 8f031a6d 3a715e6f c6bcc02a d907c2d3 
    87ad87d7 3af0053d a38fb47c 8ca29802 6ad7c611 00e17c13 5d7d66cf 9fb66176 
    552794e6 377a7a9a f5b53d1d 521a9f30 d01c6b35 5e3e0402 dbfe66c1 df18860c 
    c0b439e9 0a3197e5 0d41ccab 4db573f5 1edf6ad2 40d3d01a 913cc154 b39dcf91 
    3d7d8682 6e6cdac2 2a4fb7c6 890f9fe3 adfc23d8 7c32278a 12c1392f 94e08b58 
    f8bbf189 a3c03722 d364fdd1 1288dc1b e63c146f 30bf70d5 18064c14 64a102a6 
    2677ebfe cd07c178 4e52c8f8 282e6a9f a95e62ad e9b87b7c ea4a0bf1 93405858 
    a4ca9142 8e769219 90516b63 2fe5b56c
[5/10/20 3:17:02:748 UTC] 00000098 AuthCache     >  getSubject Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:02:748 UTC] 00000098 Cache         >  get Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:02:749 UTC] 00000098 Cache         <  get Exit
                                 com.ibm.ws.security.auth.CacheObject@93d7ea30
[5/10/20 3:17:02:750 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:750 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:751 UTC] 00000098 ContextManage >  isTokenMatch Entry
[5/10/20 3:17:02:751 UTC] 00000098 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:17:02:752 UTC] 00000098 SubjectHelper 3   Found default SSO token.
[5/10/20 3:17:02:753 UTC] 00000098 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:17:02:753 UTC] 00000098 ContextManage <  isTokenMatch: true Exit
[5/10/20 3:17:02:754 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:02:754 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:02:755 UTC] 00000098 AuthCache     >  getInstance Entry
[5/10/20 3:17:02:755 UTC] 00000098 AuthCache     3   getInstance SecurityConfigManager instance com.ibm.ws.security.config.SecurityConfigManagerImpl@dec4f4c1
[5/10/20 3:17:02:756 UTC] 00000098 AuthCache     3   getInstance using domainId admin
[5/10/20 3:17:02:756 UTC] 00000098 AuthCache     3   getInstance found AuthCache in instanceCache AuthCache: -1328712432 domainId: admin
[5/10/20 3:17:02:757 UTC] 00000098 AuthCache     <  getInstance AuthCache: -1328712432 domainId: admin Exit
[5/10/20 3:17:02:758 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:02:758 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:02:759 UTC] 00000098 WSCredentialT >  checkCushionValidityOfAllTokens Entry
                                 600000
                                 false
[5/10/20 3:17:02:759 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:02:760 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087520000
[5/10/20 3:17:02:761 UTC] 00000098 WSCredentialI >  isForwardable Entry
[5/10/20 3:17:02:761 UTC] 00000098 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:17:02:762 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:02:762 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:02:763 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:763 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:764 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:02:765 UTC] 00000098 WSCredentialT 3   Total number of Subject tokens to check: 3
[5/10/20 3:17:02:765 UTC] 00000098 WSCredentialT 3   Time remaining is 6297 seconds, for token: com.ibm.ws.security.token.AuthenticationTokenImpl
[5/10/20 3:17:02:766 UTC] 00000098 WSCredentialT 3   Time remaining is 6293 seconds, for token: com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:17:02:767 UTC] 00000098 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:12:00 UTC 2020
[5/10/20 3:17:02:767 UTC] 00000098 WSCredentialT 3   Time remaining is 6297 seconds, for token: com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:17:02:768 UTC] 00000098 WSCredentialT <  checkCushionValidityOfAllTokens -> true Exit
[5/10/20 3:17:02:769 UTC] 00000098 ContextManage 3   login(realm, token, . . .): is subject valid? true
[5/10/20 3:17:02:769 UTC] 00000098 ContextManage <  login(realm, token, authMech, . . .) Exit
[5/10/20 3:17:02:770 UTC] 00000098 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:17:02:770 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:771 UTC] 00000098 WebAuthentica >  checkSubject  Entry
[5/10/20 3:17:02:771 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:772 UTC] 00000098 WebAuthentica <  checkSubject : true Exit
[5/10/20 3:17:02:772 UTC] 00000098 WebAuthentica <  validate Exit
[5/10/20 3:17:02:773 UTC] 00000098 WebAuthentica 3   validateCookie the LTPA token was valid.
[5/10/20 3:17:02:774 UTC] 00000098 WebAuthentica <  validateCookie successful ltpa token validation of acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA== Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:02:774 UTC] 00000098 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 FORM
[5/10/20 3:17:02:775 UTC] 00000098 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: FORM
[5/10/20 3:17:02:775 UTC] 00000098 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:17:02:776 UTC] 00000098 WebAuthentica <  handleSSO: found cookie Exit
[5/10/20 3:17:02:776 UTC] 00000098 WebAuthentica >  restorePostParams Entry
[5/10/20 3:17:02:777 UTC] 00000098 WebAuthentica 3    method : GET URL:/ibm/console/secure/javascriptToSession.jsp
[5/10/20 3:17:02:778 UTC] 00000098 WebAuthentica 3   postParamSaveMethod string: Cookie
[5/10/20 3:17:02:778 UTC] 00000098 WebAuthentica 3   postParamSaveMethod value: 0
[5/10/20 3:17:02:779 UTC] 00000098 WebAuthentica <  restorePostParams Exit
[5/10/20 3:17:02:779 UTC] 00000098 WebAuthentica <  authenticate 1 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:02:780 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:17:02:781 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:781 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:02:782 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:782 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:02:783 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:783 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:02:784 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:02:785 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:02:785 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:02:786 UTC] 00000098 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:02:786 UTC] 00000098 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:02:787 UTC] 00000098 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:17:02:788 UTC] 00000098 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:17:02:788 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:02:789 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:17:02:789 UTC] 00000098 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:02:790 UTC] 00000098 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:17:02:791 UTC] 00000098 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:17:02:791 UTC] 00000098 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:02:792 UTC] 00000098 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:17:02:792 UTC] 00000098 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:17:02:792 UTC] 00000098 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:17:02:793 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:02:794 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:02:795 UTC] 00000098 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:17:02:795 UTC] 00000098 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:17:02:796 UTC] 00000098 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:17:02:796 UTC] 00000098 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:17:02:797 UTC] 00000098 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:17:02:797 UTC] 00000098 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:17:02:798 UTC] 00000098 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:17:02:799 UTC] 00000098 AuthzPropToke 3   Expiration set to: Sun May 10 05:17:02 UTC 2020
[5/10/20 3:17:02:799 UTC] 00000098 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:17:02:800 UTC] 00000098 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:17:02:800 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:801 UTC] 00000098 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:17:02:802 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:800 UTC] 00000098 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:02:803 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:02:803 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:02:803 UTC] 00000098 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:02:805 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:17:02:805 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:02:806 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:02:806 UTC] 00000098 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:17:02:807 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:02:807 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:02:808 UTC] 00000098 WebCollaborat >  validSecAttrs Entry
                                 admin_host:/ibm/console
                                 /secure/javascriptToSession.jsp
                                 GET
                                 false
                                 isclite
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 admin_host
                                 false
[5/10/20 3:17:02:809 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:02:809 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:02:810 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:02:810 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:02:811 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:02:811 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /secure/javascriptToSession.jsp
                                 GET
[5/10/20 3:17:02:812 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:02:813 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:02:813 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:02:814 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:814 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:815 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:816 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:02:816 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:817 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:817 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:818 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:819 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:819 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:820 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:820 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:821 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:821 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:822 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:822 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:823 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:824 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:824 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:02:825 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:825 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:826 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:02:826 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:827 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:829 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:829 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:830 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:831 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:831 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:832 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:833 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:833 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:834 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:834 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:835 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:02:836 UTC] 00000098 WebResourceCo <  matches (PathName) : /secure/* Exit
[5/10/20 3:17:02:836 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:837 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:02:837 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:838 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:839 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:839 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:840 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:841 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:841 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:842 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:842 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:843 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:843 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:844 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:844 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:845 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:02:846 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:846 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:847 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:02:847 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:848 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:848 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:849 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:850 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:850 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:851 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:852 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:852 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:853 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:853 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:854 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:854 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:855 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:855 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:02:856 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:857 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:857 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:02:858 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:858 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:859 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:860 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:860 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:861 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:861 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:862 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:862 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:863 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:863 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:864 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:864 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:865 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:866 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:02:866 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:867 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:867 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:02:868 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:868 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:869 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:869 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:870 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:871 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:871 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:872 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:872 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:873 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:874 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:874 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:875 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:875 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:876 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:02:876 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:877 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:877 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:02:878 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:879 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:879 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:880 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:880 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:881 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:881 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:882 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:883 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:883 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:884 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:884 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:885 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:886 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:886 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:02:887 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:888 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:888 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:02:889 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:890 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:890 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:891 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:891 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:892 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:892 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:893 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:893 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:894 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:894 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:895 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:896 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:896 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:897 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:02:897 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:898 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:898 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:02:899 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:900 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:900 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:901 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:901 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:902 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:902 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:903 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:903 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:904 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:904 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:905 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:905 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:906 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:906 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:02:907 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:908 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:908 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:02:909 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:909 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:910 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:910 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:911 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:912 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:912 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:913 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:913 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:914 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:914 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:915 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:915 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:916 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:916 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:02:917 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:917 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:918 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:02:918 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:919 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:919 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:920 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:921 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:921 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:922 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:922 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:923 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:923 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:924 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:924 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:925 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:925 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:926 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:02:927 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:927 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:928 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:02:928 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:929 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:929 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:930 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:931 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:931 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:932 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:932 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:933 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:934 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:934 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:935 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:935 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:936 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:936 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:02:937 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:937 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:938 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:02:939 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:939 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:940 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:940 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:941 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:941 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:942 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:942 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:943 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:944 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:944 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:945 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:945 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:946 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:946 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:02:947 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:947 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:948 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:02:949 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:949 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:950 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:950 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:951 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:951 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:952 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:952 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:953 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:953 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:954 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:955 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:955 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:956 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:956 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:02:957 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:958 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:958 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:02:959 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:959 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:960 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:960 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:961 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:961 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:962 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:962 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:963 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:963 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:964 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:965 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:965 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:966 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:966 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:02:967 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:967 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:968 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:02:968 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:969 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:969 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:970 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:970 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:971 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:972 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:972 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:973 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:973 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:974 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:974 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:975 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:975 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:976 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:02:976 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:977 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:977 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:02:978 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:979 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:979 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:980 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:980 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:981 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:981 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:982 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:982 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:983 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:984 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:984 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:985 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:985 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:986 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:02:986 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:987 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:987 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:02:988 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:988 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:989 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:990 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:990 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:991 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:02:991 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:02:992 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:02:992 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:02:993 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:02:993 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:994 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:995 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:02:995 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:02:996 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:02:996 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:02:997 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:02:997 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:02:998 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:02:998 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:02:999 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:02:999 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:000 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:001 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:001 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:002 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:002 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:003 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:003 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:004 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:004 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:005 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:005 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:03:006 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:006 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:007 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:03:007 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:008 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:009 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:009 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:010 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:011 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:011 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:012 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:012 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:013 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:014 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:014 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:015 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:015 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:016 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:03:016 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:017 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:018 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:03:018 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:019 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:019 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:020 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:020 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:021 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:022 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:022 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:023 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:024 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:024 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:025 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:025 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:026 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:026 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:03:027 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:027 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:028 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:03:029 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:029 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:030 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:030 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:031 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:032 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:032 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:033 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:033 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:034 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:035 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:035 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:036 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:036 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:037 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:03:037 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:038 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:039 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:03:039 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:040 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:040 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:041 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:041 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:042 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:043 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:043 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:044 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:044 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:045 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:047 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:047 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:03:048 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:048 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:049 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:03:049 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:050 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:051 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:051 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:052 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:052 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:053 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:054 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:054 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:055 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:055 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:056 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:057 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:057 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:058 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:03:058 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:059 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:059 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:03:060 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:060 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:061 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:062 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:062 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:063 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:063 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:064 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:064 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:065 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:065 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:066 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:067 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:067 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:068 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:03:068 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:069 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:069 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:03:070 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:070 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:071 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:071 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:072 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:073 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:073 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:074 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:074 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:075 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:075 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:076 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:076 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:077 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:078 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:03:078 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:079 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:079 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:03:080 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:080 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:081 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:082 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:082 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:083 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:083 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:084 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:084 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:085 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:085 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:086 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:087 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:087 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:088 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:03:088 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:089 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:089 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:03:090 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:091 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:091 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:092 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:092 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:093 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:093 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:094 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:095 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:095 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:096 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:096 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:097 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:097 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:098 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:03:098 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:099 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:100 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:03:100 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:101 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:101 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:102 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:102 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:103 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:103 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:104 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:105 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:105 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:106 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:106 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:107 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:107 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:108 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:03:109 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:109 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:110 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:03:110 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:111 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:112 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:112 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:113 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:113 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:114 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:114 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:115 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:116 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:116 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:117 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:117 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:118 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:118 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:03:119 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:120 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:120 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:03:121 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:121 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:122 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:122 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:123 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:124 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:124 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:125 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:125 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:126 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:126 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:127 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:127 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:128 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:128 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:03:129 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:130 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:131 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:03:132 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:132 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:133 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:133 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:134 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:134 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:135 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:135 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:136 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:136 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:137 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:138 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:138 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:139 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:140 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:03:140 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:141 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:141 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:03:142 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:143 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:143 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:144 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:145 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:146 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:146 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:147 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:148 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:149 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:150 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:150 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:151 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:152 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:152 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:03:153 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:154 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:154 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:03:155 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:155 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:156 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:157 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:157 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:158 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:158 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:159 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:160 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:160 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:161 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:161 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:162 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:162 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:163 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:03:164 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:164 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:165 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:03:165 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:166 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:166 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:167 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:168 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:168 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:169 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:170 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:170 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:171 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:172 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:172 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:173 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:173 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:174 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:03:175 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:176 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:176 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:03:177 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:177 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:178 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:178 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:179 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:180 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:180 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:181 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:182 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:182 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:183 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:184 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:184 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:185 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:186 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:03:187 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:187 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:188 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:03:189 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:190 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:191 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:192 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:192 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:193 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:193 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:194 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:195 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:195 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:196 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:197 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:198 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:198 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:199 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:03:200 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:201 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:202 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:03:202 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:203 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:205 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:206 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:206 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:207 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:207 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:208 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:209 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:209 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:210 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:210 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:211 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:03:211 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:212 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:213 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:03:213 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:214 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:214 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:215 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:215 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:216 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:217 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:217 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:218 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:218 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:219 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:220 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:220 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:221 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:221 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:03:222 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:223 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:223 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:03:224 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:224 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:225 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:226 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:226 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:227 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:227 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:228 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:228 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:229 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:230 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:230 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:231 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:232 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:232 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:03:233 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:233 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:234 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:03:235 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:235 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:236 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:236 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:237 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:238 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:239 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:241 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:241 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:242 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:243 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:245 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:246 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:03:247 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:248 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:249 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:03:250 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:250 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:251 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:251 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:252 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:253 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:253 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:254 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:254 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:255 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:256 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:256 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:257 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:257 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:258 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:03:258 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:259 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:259 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:03:260 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:260 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:261 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:262 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:262 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:263 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:264 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:264 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:265 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:266 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:266 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:267 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:267 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:268 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:269 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:03:269 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:270 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:270 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:03:271 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:272 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:272 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:273 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:274 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:274 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:275 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:275 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:276 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:276 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:277 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:278 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:278 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:279 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:280 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:03:280 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:281 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:281 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:03:282 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:283 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:283 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:284 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:284 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:285 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:286 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:286 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:287 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:288 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:289 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:290 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:291 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:291 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:03:292 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:293 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:293 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:03:294 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:294 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:295 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:296 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:297 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:297 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:298 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:299 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:300 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:300 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:301 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:301 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:302 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:303 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:304 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:03:305 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:305 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:306 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:03:306 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:307 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:308 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:308 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:309 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:309 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:310 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:311 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:311 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:312 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:312 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:313 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:314 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:314 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:315 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:03:315 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:316 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:317 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:03:317 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:318 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:318 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:319 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:319 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:320 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:321 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:321 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:322 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:322 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:323 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:323 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:324 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:324 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:325 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:03:326 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:326 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:03:327 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:03:327 UTC] 00000098 WebResourceCo >  matches Entry
                                 /secure/javascriptToSession.jsp
                                 GET
                                 true
[5/10/20 3:17:03:328 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:328 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:329 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:330 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:330 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:03:331 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:03:331 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:03:332 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:03:333 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:03:333 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:03:334 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:03:335 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:03:335 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:03:336 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:03:337 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:03:338 UTC] 00000098 WebConstraint <  getConstraints not null Exit
[5/10/20 3:17:03:339 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /secure/javascriptToSession.jsp
                                 GET
                                 REQUEST
[5/10/20 3:17:03:340 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/secure/javascriptToSession.jsp]
[5/10/20 3:17:03:341 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:03:341 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:03:342 UTC] 00000098 WebCollaborat 3    List of required roles for uri /secure/javascriptToSession.jsp is: 
[5/10/20 3:17:03:343 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:03:343 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:03:344 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:03:345 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:03:346 UTC] 00000098 WebCollaborat 3    required role: nobody
[5/10/20 3:17:03:347 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:03:347 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:03:348 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:03:349 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:03:350 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /secure/javascriptToSession.jsp
[5/10/20 3:17:03:350 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:03:351 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:03:352 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:03:352 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:03:353 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:03:354 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /secure/javascriptToSession.jsp
[5/10/20 3:17:03:354 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:03:355 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:03:356 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:03:356 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /secure/javascriptToSession.jsp: false
[5/10/20 3:17:03:357 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /secure/javascriptToSession.jsp are: com.ibm.ws.security.web.WebResourceCollectionConstraints@5d32bc20
[5/10/20 3:17:03:357 UTC] 00000098 WebCollaborat 3   URI -  /secure/javascriptToSession.jsp.GET is protected
[5/10/20 3:17:03:358 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:03:359 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:359 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:360 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:03:361 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:03:361 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:03:362 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:03:362 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:03:363 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:03:364 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:03:364 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:03:365 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:03:366 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:03:366 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:03:367 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:03:367 UTC] 00000098 WebCollaborat 3   required roles: nobody
[5/10/20 3:17:03:368 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:03:369 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:03:369 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:03:370 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:03:371 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:03:371 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:03:372 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@b16c6e17
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@684f7749
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:372 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:03:373 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:03:374 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
                                 nobody
[5/10/20 3:17:03:374 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:375 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:03:375 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:03:376 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:03:376 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:03:377 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:378 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:03:378 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:03:379 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:03:379 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:03:380 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:03:381 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:03:381 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:382 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:383 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:383 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:03:384 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:03:385 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:03:385 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:03:386 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:03:387 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:03:388 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:389 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:389 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:390 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:391 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:03:391 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:392 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:03:393 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:393 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:394 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:395 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:03:396 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:03:397 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:03:397 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:03:398 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:03:398 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:03:399 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:03:400 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:400 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:03:401 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:03:402 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:03:402 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:03:403 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:03:404 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:03:404 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:405 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:406 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:406 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:03:407 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:03:408 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:03:408 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:03:409 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:03:409 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /secure/javascriptToSession.jsp succeeded. 
[5/10/20 3:17:03:410 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@25e0a86f
[5/10/20 3:17:03:410 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@25e0a86f
[5/10/20 3:17:03:411 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:03:412 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:03:412 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:413 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@2f36eb5f[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/javascriptToSession.jsp
                                 isclite
[5/10/20 3:17:03:414 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:03:414 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:03:415 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:03:415 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:03:416 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:03:416 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:03:417 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:03:418 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:418 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:03:419 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:03:420 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:03:420 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:421 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@4cd864ec
[5/10/20 3:17:03:421 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@4cd864ec
[5/10/20 3:17:03:422 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@46236d17
                                 /secure/javascriptToSession.jsp
[5/10/20 3:17:03:423 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@46236d17
                                 /secure/javascriptToSession.jsp
[5/10/20 3:17:03:423 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:03:424 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:03:424 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:425 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:426 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:426 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:03:427 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:03:428 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:03:428 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:03:429 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@bd6df40e
[5/10/20 3:17:03:430 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:430 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:431 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:432 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:432 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:433 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:433 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:434 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:435 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:435 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:436 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:437 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:438 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:438 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:439 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:440 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:440 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:441 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:441 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:442 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:442 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:443 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:444 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:445 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:445 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:446 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:447 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:447 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:448 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:449 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:450 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:450 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:451 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:452 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:452 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:453 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:454 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:454 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:455 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:455 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:456 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:456 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:457 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:458 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:458 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:459 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:459 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:460 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:461 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:461 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:462 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:462 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:463 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:463 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:464 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:465 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:465 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:466 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:467 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:467 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:468 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:468 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:469 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:469 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:470 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:471 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:471 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:472 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:472 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:474 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:474 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:475 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:475 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:476 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:477 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:477 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:478 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:478 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:479 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:480 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:480 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:481 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:481 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:482 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:482 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:483 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:484 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:484 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:485 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:485 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:486 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:487 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:487 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:488 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:488 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:489 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:489 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:490 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:491 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:491 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:492 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:492 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:493 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:494 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:494 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:495 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:496 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:496 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:497 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:497 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:499 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:500 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:03:501 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:03:502 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:03:503 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:03:503 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:03:504 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:03:504 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:03:505 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:03:505 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:03:506 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:03:507 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@bd6df40e
[5/10/20 3:17:03:507 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:03:508 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:03:508 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:03:509 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:03:509 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:03:510 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:03:511 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:03:511 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:03:512 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:03:512 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:03:513 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:03:513 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:03:514 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@bd6df40e
[5/10/20 3:17:03:515 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:03:515 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:03:516 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:03:516 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:05:721 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:17:05:723 UTC] 00000098 ContextManage >  clearCallerContext Entry
[5/10/20 3:17:05:724 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:05:725 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:05:725 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:05:726 UTC] 00000098 ContextManage <  clearCallerContext Exit
[5/10/20 3:17:05:727 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:17:05:728 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@c9910149
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@7a25d299
                                 /ibm/console
                                 admin_host
                                 action
                                 true
[5/10/20 3:17:05:729 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:05:730 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/navigatorCmd.do, Path Info=null
[5/10/20 3:17:05:731 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:05:731 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:05:732 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:05:733 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:17:05:734 UTC] 00000098 ContextManage 3   Returning: true
[5/10/20 3:17:05:735 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:05:736 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:05:736 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:17:05:737 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:05:738 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:17:05:739 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:17:05:740 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3dfb11dc
[5/10/20 3:17:05:740 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:05:741 UTC] 00000098 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:17:05:742 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:05:742 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:05:743 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:17:05:744 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:05:745 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:05:745 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:17:05:746 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:05:747 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:05:747 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:05:748 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@3ce90e9c[isclite#isclite.war#action]
[5/10/20 3:17:05:748 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:05:749 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:05:750 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:17:05:750 UTC] 00000098 EJSWebCollabo 3   preInvoke pushing admin
[5/10/20 3:17:05:751 UTC] 00000098 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@3dfb11dc
[5/10/20 3:17:05:752 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:05:752 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:05:753 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:05:754 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:05:754 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:05:755 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:05:755 UTC] 00000098 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@61d20ff2[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:05:756 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:05:757 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:05:757 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:05:758 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:05:759 UTC] 00000098 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@c9910149
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@7a25d299
                                 admin_host:/ibm/console
                                 true
                                 isclite
[5/10/20 3:17:05:759 UTC] 00000098 URLHandler    3   URI requested: /navigatorCmd.do
[5/10/20 3:17:05:760 UTC] 00000098 URLHandler    3   URI returned: /navigatorCmd.do
[5/10/20 3:17:05:760 UTC] 00000098 LRUCache      >  get Entry
                                 isclite
[5/10/20 3:17:05:761 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:05:762 UTC] 00000098 PermissionRol 3   App permission cache found for isclite
[5/10/20 3:17:05:762 UTC] 00000098 LRUCache      >  get Entry
                                 com.ibm.ws.security.web.WebAccessPermission@b8b96aef
[5/10/20 3:17:05:763 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:05:764 UTC] 00000098 PermissionRol 3   isclite, /navigatorCmd.do:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:05:764 UTC] 00000098 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:17:05:765 UTC] 00000098 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@75ff790e
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@66a6f989
[5/10/20 3:17:05:766 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:05:766 UTC] 00000098 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 
  Authorization Table [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AuthorizationTableImpl@8bef5cf4 ]
  Authorization Table contains [ 4 ] role assignments
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@535bf73f ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 1 ] special subjects
          Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.ServerImpl@93671b63 ]
            Name      [ Server ]
            Access ID [ Server ]
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@a26b0e0 ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@8feb60dd ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@9212975a ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects

                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@66a6f989
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:17:05:768 UTC] 00000098 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:17:05:768 UTC] 00000098 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:17:05:769 UTC] 00000098 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:17:05:769 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /navigatorCmd.do
                                 GET
[5/10/20 3:17:05:770 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:05:771 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:05:771 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:05:772 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:772 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:773 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:774 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:05:774 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:775 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:775 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:776 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:777 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:777 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:778 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:778 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:779 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:779 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:780 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:781 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:781 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:782 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:782 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:05:783 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:784 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:784 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:05:785 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:785 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:786 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:786 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:787 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:788 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:788 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:789 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:790 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:790 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:791 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:791 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:792 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:793 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:794 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:05:794 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:795 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:795 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:05:796 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:796 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:798 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:799 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:799 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:800 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:801 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:801 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:802 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:803 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:803 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:804 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:804 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:805 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:05:806 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:806 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:807 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:05:807 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:808 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:808 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:809 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:809 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:810 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:811 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:812 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:812 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:813 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:813 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:814 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:814 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:815 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:815 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:05:816 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:816 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:817 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:05:817 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:818 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:818 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:819 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:819 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:820 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:821 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:821 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:822 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:822 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:823 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:823 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:824 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:824 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:825 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:05:825 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:05:826 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:826 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:05:827 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:828 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:829 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:829 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:830 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:830 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:831 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:831 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:832 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:833 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:833 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:834 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:834 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:835 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:05:835 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:836 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:836 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:05:837 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:837 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:839 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:839 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:840 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:840 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:841 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:841 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:842 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:843 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:843 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:844 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:844 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:845 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:05:846 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:846 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:847 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:05:848 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:849 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:849 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:850 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:851 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:852 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:853 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:853 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:854 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:854 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:855 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:856 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:856 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:857 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:857 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:05:858 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:858 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:859 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:05:859 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:860 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:861 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:861 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:862 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:862 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:863 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:863 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:864 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:864 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:865 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:865 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:866 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:867 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:867 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:05:868 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:868 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:869 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:05:869 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:870 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:870 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:871 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:872 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:872 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:873 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:873 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:874 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:874 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:875 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:875 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:876 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:876 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:877 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:05:877 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:878 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:878 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:05:879 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:880 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:880 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:881 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:881 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:882 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:882 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:883 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:883 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:884 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:884 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:885 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:886 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:886 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:887 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:05:887 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:888 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:888 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:05:889 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:889 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:890 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:891 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:892 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:892 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:893 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:893 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:894 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:895 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:895 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:896 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:896 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:897 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:897 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:05:898 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:898 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:899 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:05:899 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:900 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:901 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:901 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:902 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:903 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:904 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:904 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:905 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:905 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:906 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:906 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:907 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:908 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:908 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:05:909 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:909 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:910 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:05:911 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:911 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:912 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:913 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:913 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:914 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:914 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:915 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:915 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:916 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:916 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:917 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:917 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:918 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:918 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:05:919 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:920 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:920 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:05:921 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:921 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:922 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:923 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:923 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:924 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:924 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:925 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:925 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:926 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:926 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:928 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:929 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:05:929 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:930 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:930 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:05:931 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:931 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:932 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:933 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:933 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:934 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:935 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:935 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:936 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:936 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:937 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:937 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:938 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:939 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:939 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:05:940 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:940 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:941 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:05:941 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:942 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:943 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:943 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:944 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:945 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:945 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:946 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:947 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:948 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:948 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:949 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:949 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:950 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:950 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:05:951 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:951 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:952 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:05:953 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:954 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:954 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:955 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:956 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:956 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:957 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:957 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:958 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:958 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:959 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:959 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:960 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:960 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:961 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:05:961 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:962 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:963 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:05:963 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:964 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:964 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:965 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:965 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:966 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:966 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:967 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:967 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:968 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:969 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:969 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:970 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:970 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:971 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:05:971 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:972 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:972 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:05:973 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:974 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:975 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:975 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:976 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:976 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:977 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:977 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:978 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:979 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:979 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:980 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:980 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:981 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:981 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:05:982 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:982 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:983 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:05:983 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:984 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:984 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:985 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:986 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:986 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:987 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:987 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:988 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:988 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:989 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:989 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:990 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:991 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:991 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:05:992 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:05:992 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:05:993 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:05:993 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:05:994 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:05:995 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:05:995 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:05:996 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:05:997 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:05:997 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:05:998 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:05:998 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:05:999 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:05:999 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:000 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:001 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:001 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:002 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:06:003 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:003 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:004 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:06:005 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:005 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:006 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:007 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:007 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:008 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:009 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:009 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:010 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:010 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:011 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:011 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:012 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:012 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:013 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:06:013 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:014 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:014 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:06:016 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:016 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:017 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:017 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:018 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:018 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:019 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:019 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:020 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:020 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:021 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:022 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:022 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:023 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:023 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:06:024 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:024 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:025 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:06:025 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:026 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:026 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:027 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:027 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:028 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:029 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:029 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:030 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:030 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:031 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:031 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:032 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:032 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:033 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:06:034 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:034 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:035 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:06:035 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:036 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:037 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:037 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:038 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:038 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:039 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:039 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:040 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:040 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:041 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:042 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:042 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:043 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:043 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:06:044 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:044 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:045 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:06:045 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:046 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:047 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:047 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:048 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:049 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:049 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:050 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:050 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:051 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:052 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:052 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:053 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:054 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:06:055 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:055 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:056 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:06:057 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:058 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:058 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:059 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:059 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:060 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:061 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:061 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:062 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:062 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:063 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:063 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:064 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:064 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:065 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:06:065 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:066 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:067 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:06:067 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:068 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:068 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:069 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:069 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:070 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:070 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:071 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:071 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:072 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:073 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:073 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:074 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:074 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:075 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:06:075 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:076 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:076 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:06:077 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:077 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:078 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:078 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:079 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:080 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:080 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:081 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:081 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:082 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:082 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:083 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:083 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:084 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:084 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:06:085 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:085 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:086 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:06:087 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:087 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:088 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:088 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:089 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:089 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:090 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:091 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:091 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:092 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:092 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:093 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:093 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:094 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:094 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:06:095 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:096 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:096 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:06:097 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:097 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:098 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:098 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:099 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:100 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:100 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:101 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:101 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:102 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:102 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:103 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:103 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:104 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:104 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:06:105 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:106 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:106 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:06:107 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:107 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:108 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:108 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:109 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:109 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:110 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:110 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:111 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:111 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:112 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:113 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:113 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:114 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:114 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:06:115 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:115 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:116 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:06:116 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:117 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:118 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:118 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:119 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:119 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:120 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:120 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:121 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:121 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:122 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:122 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:123 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:123 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:124 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:06:125 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:125 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:126 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:06:126 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:127 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:127 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:128 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:128 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:129 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:129 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:130 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:130 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:131 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:131 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:132 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:132 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:133 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:133 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:06:135 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:135 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:136 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:06:136 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:137 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:137 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:138 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:138 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:139 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:139 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:140 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:140 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:141 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:141 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:142 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:142 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:143 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:143 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:06:144 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:145 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:145 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:06:146 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:146 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:147 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:147 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:148 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:149 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:149 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:150 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:150 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:151 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:152 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:152 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:153 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:153 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:154 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:06:155 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:155 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:156 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:06:157 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:157 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:158 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:158 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:159 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:159 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:160 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:161 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:161 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:162 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:162 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:163 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:163 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:164 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:164 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:06:165 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:165 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:166 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:06:166 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:167 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:167 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:168 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:168 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:169 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:169 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:170 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:171 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:171 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:172 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:172 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:173 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:173 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:175 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:06:175 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:176 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:176 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:06:177 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:177 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:178 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:178 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:179 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:179 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:180 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:180 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:181 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:182 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:182 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:183 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:183 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:184 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:184 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:06:185 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:185 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:186 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:06:186 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:187 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:187 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:188 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:189 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:189 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:190 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:191 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:191 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:192 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:193 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:193 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:194 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:194 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:195 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:06:196 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:196 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:197 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:06:197 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:198 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:198 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:199 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:200 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:200 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:201 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:201 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:202 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:202 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:203 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:205 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:206 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:06:206 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:207 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:207 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:06:208 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:209 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:209 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:210 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:211 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:211 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:212 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:212 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:213 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:213 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:214 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:214 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:215 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:217 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:218 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:06:218 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:220 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:220 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:06:221 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:221 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:222 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:223 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:223 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:224 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:224 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:225 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:226 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:226 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:227 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:227 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:228 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:228 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:229 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:06:229 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:230 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:231 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:06:231 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:232 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:232 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:233 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:233 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:234 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:234 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:235 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:235 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:236 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:236 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:237 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:238 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:238 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:239 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:06:239 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:240 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:240 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:06:241 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:242 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:242 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:243 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:243 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:244 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:245 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:245 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:246 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:246 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:247 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:247 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:248 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:248 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:249 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:06:250 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:250 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:251 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:06:251 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:252 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:252 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:253 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:254 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:254 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:255 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:256 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:256 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:257 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:257 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:259 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:259 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:260 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:06:261 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:261 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:262 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:06:262 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:263 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:263 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:264 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:265 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:265 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:266 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:266 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:267 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:267 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:268 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:269 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:269 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:270 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:270 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:06:271 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:271 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:272 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:06:273 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:273 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:274 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:274 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:275 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:275 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:276 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:277 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:277 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:278 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:278 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:279 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:279 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:280 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:280 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:06:281 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:282 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:06:282 UTC] 00000098 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:06:283 UTC] 00000098 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:17:06:283 UTC] 00000098 WebCollaborat >  invokeTAI Entry
[5/10/20 3:17:06:284 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:17:06:285 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:17:06:285 UTC] 00000098 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:17:06:286 UTC] 00000098 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:17:06:286 UTC] 00000098 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:17:06:287 UTC] 00000098 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:17:06:287 UTC] 00000098 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:17:06:288 UTC] 00000098 WebCollaborat >  shouldPerformLogin Entry
                                 isclite
                                 true
                                 false
[5/10/20 3:17:06:289 UTC] 00000098 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:17:06:289 UTC] 00000098 WebCollaborat 3   webSecAttr=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:17:06:290 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /navigatorCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:06:290 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/navigatorCmd.do]
[5/10/20 3:17:06:291 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:06:292 UTC] 00000098 TrustAssociat >  getInstance Entry
[5/10/20 3:17:06:292 UTC] 00000098 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:17:06:293 UTC] 00000098 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:17:06:293 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:17:06:294 UTC] 00000098 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@61d20ff2[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:06:294 UTC] 00000098 WebAuthentica 3   challengeType = FORM Authorization header = null
[5/10/20 3:17:06:295 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:06:295 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:06:296 UTC] 00000098 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:17:06:297 UTC] 00000098 WebAuthentica >  handleSSO Entry
[5/10/20 3:17:06:298 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:17:06:298 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:17:06:299 UTC] 00000098 WebAuthentica 3   Attempting primary cookie validation for: LtpaToken2
[5/10/20 3:17:06:299 UTC] 00000098 WebAuthentica >  validateCookie Entry
                                 [Ljavax.servlet.http.Cookie;@45b021bf
                                 LtpaToken2
[5/10/20 3:17:06:300 UTC] 00000098 CookieHelper  >  getCookieValues Entry
                                 LtpaToken2
[5/10/20 3:17:06:301 UTC] 00000098 CookieHelper  <  getCookieValues Exit
                                 [acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==]
[5/10/20 3:17:06:302 UTC] 00000098 WebAuthentica >  validate Entry
[5/10/20 3:17:06:302 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:06:303 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:06:303 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:304 UTC] 00000098 ContextManage >  login Entry
                                 defaultWIMFileBasedRealm
                                 [B@b1f8bdec
                                 system.WEB_INBOUND
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@c9910149
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@7a25d299
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
                                 <null>
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:17:06:304 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:06:305 UTC] 00000098 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:17:06:305 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:06:306 UTC] 00000098 ContextManage 3   Web inbound login config: system.WEB_INBOUND
[5/10/20 3:17:06:307 UTC] 00000098 ContextManage 3   Looking for opaque token on the thread before Subject cache lookup.
[5/10/20 3:17:06:307 UTC] 00000098 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 [B@b1f8bdec
                                 <null>
[5/10/20 3:17:06:308 UTC] 00000098 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:17:06:308 UTC] 00000098 ContextManage 3   Looking for subject from cache using token as lookup.
[5/10/20 3:17:06:309 UTC] 00000098 AuthCache     >  getSubject Entry
                                     69c020d5 729db5de 912b6d15 04965053 42d78026 c921f5f0 c6925a39 97a38ff4 
    b0734e79 0cb65c85 e0d348bf 3f505529 c1c49842 7b4560f2 9d00a7ad 10b6465a 
    ad8fc2e7 22ddb609 39575683 805946a5 151bcd15 4c359985 6ed1739c 8f79e0bd 
    c1509104 98661ec3 7b3cc7e3 ae518af1 1de892e7 8a0f7752 c0f41b90 4124efff 
    2f76eff6 14dfe87f 531c179e 8694c2ac cea813c2 80482c98 f1a2f191 d93f7e12 
    acb5f67a 2c5262ce 1c2f1426 2a858026 76e2da06 95faf81d 4dc14eed 449bf1e3 
    bbc8dc8b 6da0b373 a6da1fd2 3a461774 27a6e650 75e902e8 ad6369b1 a1695d73 
    be25a3a7 a1d7aee6 25df500e 055af3d2 1f5024ed 9530d079 d84f3a42 03b227e2 
    676d2dbc 09b5d0cf c376ed37 67ca5676 8f031a6d 3a715e6f c6bcc02a d907c2d3 
    87ad87d7 3af0053d a38fb47c 8ca29802 6ad7c611 00e17c13 5d7d66cf 9fb66176 
    552794e6 377a7a9a f5b53d1d 521a9f30 d01c6b35 5e3e0402 dbfe66c1 df18860c 
    c0b439e9 0a3197e5 0d41ccab 4db573f5 1edf6ad2 40d3d01a 913cc154 b39dcf91 
    3d7d8682 6e6cdac2 2a4fb7c6 890f9fe3 adfc23d8 7c32278a 12c1392f 94e08b58 
    f8bbf189 a3c03722 d364fdd1 1288dc1b e63c146f 30bf70d5 18064c14 64a102a6 
    2677ebfe cd07c178 4e52c8f8 282e6a9f a95e62ad e9b87b7c ea4a0bf1 93405858 
    a4ca9142 8e769219 90516b63 2fe5b56c
[5/10/20 3:17:06:309 UTC] 00000098 AuthCache     >  getSubject Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:06:310 UTC] 00000098 Cache         >  get Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:06:311 UTC] 00000098 Cache         <  get Exit
                                 com.ibm.ws.security.auth.CacheObject@93d7ea30
[5/10/20 3:17:06:311 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:312 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:312 UTC] 00000098 ContextManage >  isTokenMatch Entry
[5/10/20 3:17:06:313 UTC] 00000098 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:17:06:314 UTC] 00000098 SubjectHelper 3   Found default SSO token.
[5/10/20 3:17:06:314 UTC] 00000098 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:17:06:315 UTC] 00000098 ContextManage <  isTokenMatch: true Exit
[5/10/20 3:17:06:315 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:316 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:317 UTC] 00000098 AuthCache     >  getInstance Entry
[5/10/20 3:17:06:317 UTC] 00000098 AuthCache     3   getInstance SecurityConfigManager instance com.ibm.ws.security.config.SecurityConfigManagerImpl@dec4f4c1
[5/10/20 3:17:06:318 UTC] 00000098 AuthCache     3   getInstance using domainId admin
[5/10/20 3:17:06:319 UTC] 00000098 AuthCache     3   getInstance found AuthCache in instanceCache AuthCache: -1328712432 domainId: admin
[5/10/20 3:17:06:319 UTC] 00000098 AuthCache     <  getInstance AuthCache: -1328712432 domainId: admin Exit
[5/10/20 3:17:06:320 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:06:320 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:06:321 UTC] 00000098 WSCredentialT >  checkCushionValidityOfAllTokens Entry
                                 600000
                                 false
[5/10/20 3:17:06:322 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:06:322 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087520000
[5/10/20 3:17:06:323 UTC] 00000098 WSCredentialI >  isForwardable Entry
[5/10/20 3:17:06:323 UTC] 00000098 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:17:06:324 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:06:324 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:06:325 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:325 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:06:326 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:06:327 UTC] 00000098 WSCredentialT 3   Total number of Subject tokens to check: 3
[5/10/20 3:17:06:327 UTC] 00000098 WSCredentialT 3   Time remaining is 6293 seconds, for token: com.ibm.ws.security.token.AuthenticationTokenImpl
[5/10/20 3:17:06:328 UTC] 00000098 WSCredentialT 3   Time remaining is 6290 seconds, for token: com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:17:06:328 UTC] 00000098 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:12:00 UTC 2020
[5/10/20 3:17:06:329 UTC] 00000098 WSCredentialT 3   Time remaining is 6293 seconds, for token: com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:17:06:330 UTC] 00000098 WSCredentialT <  checkCushionValidityOfAllTokens -> true Exit
[5/10/20 3:17:06:330 UTC] 00000098 ContextManage 3   login(realm, token, . . .): is subject valid? true
[5/10/20 3:17:06:331 UTC] 00000098 ContextManage <  login(realm, token, authMech, . . .) Exit
[5/10/20 3:17:06:331 UTC] 00000098 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:17:06:332 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:332 UTC] 00000098 WebAuthentica >  checkSubject  Entry
[5/10/20 3:17:06:333 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:333 UTC] 00000098 WebAuthentica <  checkSubject : true Exit
[5/10/20 3:17:06:334 UTC] 00000098 WebAuthentica <  validate Exit
[5/10/20 3:17:06:335 UTC] 00000098 WebAuthentica 3   validateCookie the LTPA token was valid.
[5/10/20 3:17:06:335 UTC] 00000098 WebAuthentica <  validateCookie successful ltpa token validation of acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA== Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:06:336 UTC] 00000098 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 FORM
[5/10/20 3:17:06:336 UTC] 00000098 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: FORM
[5/10/20 3:17:06:337 UTC] 00000098 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:17:06:337 UTC] 00000098 WebAuthentica <  handleSSO: found cookie Exit
[5/10/20 3:17:06:338 UTC] 00000098 WebAuthentica >  restorePostParams Entry
[5/10/20 3:17:06:338 UTC] 00000098 WebAuthentica 3    method : GET URL:/ibm/console/navigatorCmd.do
[5/10/20 3:17:06:339 UTC] 00000098 WebAuthentica 3   postParamSaveMethod string: Cookie
[5/10/20 3:17:06:340 UTC] 00000098 WebAuthentica 3   postParamSaveMethod value: 0
[5/10/20 3:17:06:340 UTC] 00000098 WebAuthentica <  restorePostParams Exit
[5/10/20 3:17:06:341 UTC] 00000098 WebAuthentica <  authenticate 1 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:06:342 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:17:06:343 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:343 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:06:344 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:344 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:06:345 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:345 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:06:346 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:06:346 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:347 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:348 UTC] 00000098 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:348 UTC] 00000098 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:06:349 UTC] 00000098 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:17:06:349 UTC] 00000098 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:17:06:350 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:350 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:17:06:351 UTC] 00000098 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:06:352 UTC] 00000098 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:17:06:352 UTC] 00000098 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:17:06:353 UTC] 00000098 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:06:353 UTC] 00000098 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:17:06:354 UTC] 00000098 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:17:06:354 UTC] 00000098 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:17:06:355 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:356 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:356 UTC] 00000098 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:17:06:357 UTC] 00000098 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:17:06:357 UTC] 00000098 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:17:06:358 UTC] 00000098 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:17:06:358 UTC] 00000098 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:17:06:359 UTC] 00000098 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:17:06:360 UTC] 00000098 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:17:06:360 UTC] 00000098 AuthzPropToke 3   Expiration set to: Sun May 10 05:17:06 UTC 2020
[5/10/20 3:17:06:361 UTC] 00000098 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:17:06:361 UTC] 00000098 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:17:06:362 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:06:363 UTC] 00000098 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:17:06:363 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:06:362 UTC] 00000098 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:06:364 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:06:365 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:06:364 UTC] 00000098 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:06:366 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:17:06:367 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:06:367 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:06:368 UTC] 00000098 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:17:06:368 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:06:369 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:06:369 UTC] 00000098 WebCollaborat >  validSecAttrs Entry
                                 admin_host:/ibm/console
                                 /navigatorCmd.do
                                 GET
                                 false
                                 isclite
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@c9910149
                                 admin_host
                                 false
[5/10/20 3:17:06:370 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:06:371 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:06:371 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:06:372 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:06:372 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:06:373 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /navigatorCmd.do
                                 GET
[5/10/20 3:17:06:374 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:06:374 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:06:375 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:06:375 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:376 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:376 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:377 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:06:378 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:378 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:379 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:379 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:380 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:381 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:381 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:382 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:383 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:383 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:384 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:384 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:385 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:386 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:06:386 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:387 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:388 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:06:388 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:389 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:389 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:390 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:390 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:391 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:391 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:392 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:392 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:393 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:393 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:394 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:395 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:396 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:06:396 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:397 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:397 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:06:398 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:398 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:399 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:400 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:401 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:401 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:402 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:402 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:403 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:404 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:404 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:405 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:406 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:06:407 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:407 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:408 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:06:408 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:409 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:411 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:411 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:412 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:412 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:413 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:414 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:414 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:415 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:415 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:416 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:416 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:06:417 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:417 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:418 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:06:418 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:419 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:419 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:420 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:421 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:421 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:422 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:423 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:423 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:424 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:424 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:425 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:425 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:426 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:427 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:06:427 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:06:428 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:428 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:06:429 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:429 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:430 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:430 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:431 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:431 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:432 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:432 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:433 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:434 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:434 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:435 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:435 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:436 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:436 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:06:437 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:437 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:438 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:06:438 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:439 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:440 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:440 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:441 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:441 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:442 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:443 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:443 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:444 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:444 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:445 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:445 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:446 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:446 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:06:447 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:447 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:448 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:06:449 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:449 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:450 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:450 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:451 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:451 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:452 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:452 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:453 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:453 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:454 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:454 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:455 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:456 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:456 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:06:457 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:457 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:458 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:06:458 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:459 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:459 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:460 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:460 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:461 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:462 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:463 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:463 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:464 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:464 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:465 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:465 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:466 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:466 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:06:467 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:467 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:468 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:06:469 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:469 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:470 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:470 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:471 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:471 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:472 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:472 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:473 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:473 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:474 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:474 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:475 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:476 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:476 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:06:477 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:477 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:478 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:06:478 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:479 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:479 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:480 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:481 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:481 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:482 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:482 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:483 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:483 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:484 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:485 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:485 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:486 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:486 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:06:487 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:487 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:488 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:06:489 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:489 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:490 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:490 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:491 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:491 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:492 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:493 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:493 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:494 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:494 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:495 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:495 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:496 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:496 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:06:497 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:497 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:498 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:06:499 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:499 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:500 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:500 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:501 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:502 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:502 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:503 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:503 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:504 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:505 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:505 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:506 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:506 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:507 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:06:507 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:508 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:508 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:06:509 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:509 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:510 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:510 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:511 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:511 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:512 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:513 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:513 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:514 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:514 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:515 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:515 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:516 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:516 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:06:517 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:517 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:518 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:06:518 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:519 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:521 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:521 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:522 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:522 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:523 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:523 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:524 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:525 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:525 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:526 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:526 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:06:527 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:527 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:528 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:06:528 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:529 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:530 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:530 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:531 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:531 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:532 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:532 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:533 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:533 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:534 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:534 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:535 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:535 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:536 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:06:537 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:537 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:538 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:06:538 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:539 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:539 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:540 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:541 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:541 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:542 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:543 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:543 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:544 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:544 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:546 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:546 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:06:547 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:547 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:548 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:06:549 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:549 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:551 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:551 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:552 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:552 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:553 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:554 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:554 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:555 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:555 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:556 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:556 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:06:557 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:558 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:558 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:06:559 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:559 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:560 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:560 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:561 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:561 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:562 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:563 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:563 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:564 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:564 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:566 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:566 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:06:567 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:567 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:568 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:06:569 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:569 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:571 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:571 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:572 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:572 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:573 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:574 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:574 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:575 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:575 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:576 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:576 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:06:577 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:577 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:578 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:06:578 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:579 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:580 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:581 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:581 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:582 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:582 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:583 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:584 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:584 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:585 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:585 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:586 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:586 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:587 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:06:587 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:588 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:588 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:06:589 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:589 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:591 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:592 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:592 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:593 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:593 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:594 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:594 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:595 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:596 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:596 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:597 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:06:597 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:598 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:598 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:06:599 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:599 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:600 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:601 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:601 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:602 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:602 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:603 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:603 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:604 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:605 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:605 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:606 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:606 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:607 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:06:607 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:608 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:608 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:06:609 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:609 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:610 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:610 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:611 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:611 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:612 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:612 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:613 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:614 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:614 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:615 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:615 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:616 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:616 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:06:617 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:617 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:618 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:06:618 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:619 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:620 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:620 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:621 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:621 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:622 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:623 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:623 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:624 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:624 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:626 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:626 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:06:627 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:627 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:628 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:06:628 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:629 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:630 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:631 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:631 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:632 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:632 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:633 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:633 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:634 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:635 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:636 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:636 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:06:637 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:637 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:638 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:06:638 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:639 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:641 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:641 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:642 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:642 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:643 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:643 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:644 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:645 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:645 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:646 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:06:646 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:647 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:648 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:06:648 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:649 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:650 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:651 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:651 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:652 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:653 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:653 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:654 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:654 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:655 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:655 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:656 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:06:657 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:657 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:658 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:06:658 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:659 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:661 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:661 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:662 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:663 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:663 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:664 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:664 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:665 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:665 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:666 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:666 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:06:667 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:667 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:668 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:06:669 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:669 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:671 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:671 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:672 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:672 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:673 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:673 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:674 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:676 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:676 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:06:677 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:677 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:678 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:06:678 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:679 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:681 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:681 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:682 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:682 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:683 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:683 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:684 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:684 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:685 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:685 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:686 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:06:686 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:687 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:688 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:06:688 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:689 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:689 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:690 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:690 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:691 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:692 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:692 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:693 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:693 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:694 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:694 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:695 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:695 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:696 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:06:696 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:698 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:698 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:06:699 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:699 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:700 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:700 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:701 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:702 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:702 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:703 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:703 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:704 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:704 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:705 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:705 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:706 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:707 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:06:707 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:708 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:708 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:06:709 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:709 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:710 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:710 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:711 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:711 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:712 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:712 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:713 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:713 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:714 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:715 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:715 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:716 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:716 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:06:717 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:717 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:718 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:06:718 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:719 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:720 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:720 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:721 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:721 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:722 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:722 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:723 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:724 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:724 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:725 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:725 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:726 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:726 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:06:727 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:727 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:728 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:06:728 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:729 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:730 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:730 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:731 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:731 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:732 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:732 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:733 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:733 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:734 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:735 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:735 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:736 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:736 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:06:737 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:738 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:738 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:06:739 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:740 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:740 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:741 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:742 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:742 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:743 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:744 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:744 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:745 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:745 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:746 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:746 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:747 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:06:747 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:748 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:749 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:06:749 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:750 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:750 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:751 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:751 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:752 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:752 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:753 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:753 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:754 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:755 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:755 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:756 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:756 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:757 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:06:758 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:758 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:759 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:06:759 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:760 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:760 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:761 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:761 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:762 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:763 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:763 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:764 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:764 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:765 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:765 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:766 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:766 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:767 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:06:767 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:768 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:769 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:06:769 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:770 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:770 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:771 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:772 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:772 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:773 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:773 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:774 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:775 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:775 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:776 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:776 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:778 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:06:779 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:779 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:780 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:06:781 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:781 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:782 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:782 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:783 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:783 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:784 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:784 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:785 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:786 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:786 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:787 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:787 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:788 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:788 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:06:789 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:790 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:790 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:06:791 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:791 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:792 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:792 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:793 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:793 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:794 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:794 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:795 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:796 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:796 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:798 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:799 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:06:800 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:800 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:801 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:06:801 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:802 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:802 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:803 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:804 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:804 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:805 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:805 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:806 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:806 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:807 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:807 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:808 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:808 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:809 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:06:810 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:810 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:811 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:06:811 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:812 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:812 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:813 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:813 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:814 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:815 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:815 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:816 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:816 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:817 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:817 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:818 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:818 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:819 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:06:819 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:820 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:821 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:06:821 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:822 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:822 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:823 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:823 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:824 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:824 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:825 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:826 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:826 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:827 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:827 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:828 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:829 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:06:829 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:830 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:830 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:06:831 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:832 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:833 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:833 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:834 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:834 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:835 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:835 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:836 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:836 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:838 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:839 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:06:839 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:840 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:840 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:06:841 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:842 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:842 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:843 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:843 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:844 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:844 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:845 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:845 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:846 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:847 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:847 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:848 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:848 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:849 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:06:849 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:850 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:850 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:06:851 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:851 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:852 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:852 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:853 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:854 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:854 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:855 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:855 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:856 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:856 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:857 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:858 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:858 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:859 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:06:859 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:860 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:06:860 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:06:861 UTC] 00000098 WebResourceCo >  matches Entry
                                 /navigatorCmd.do
                                 GET
                                 true
[5/10/20 3:17:06:861 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:862 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:862 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:863 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:863 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:06:864 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:06:864 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:06:865 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:06:865 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:06:866 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:06:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:06:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:06:868 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:06:868 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:06:869 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:06:869 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:06:870 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /navigatorCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:06:870 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/navigatorCmd.do]
[5/10/20 3:17:06:871 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:06:871 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:06:872 UTC] 00000098 WebCollaborat 3    List of required roles for uri /navigatorCmd.do is: 
[5/10/20 3:17:06:873 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:06:873 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:06:874 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:06:874 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:06:875 UTC] 00000098 WebCollaborat 3    required role: nobody
[5/10/20 3:17:06:875 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:06:876 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:06:876 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:06:877 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:06:878 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /navigatorCmd.do
[5/10/20 3:17:06:878 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:06:879 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:06:879 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:06:880 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:06:880 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:06:881 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /navigatorCmd.do
[5/10/20 3:17:06:881 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:06:882 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:06:883 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:06:883 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /navigatorCmd.do: false
[5/10/20 3:17:06:884 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /navigatorCmd.do are: com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:06:884 UTC] 00000098 WebCollaborat 3   URI -  /navigatorCmd.do.GET is protected
[5/10/20 3:17:06:885 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:06:885 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:886 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:886 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:06:887 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:06:887 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:06:888 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:06:889 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:06:889 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:06:890 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:06:890 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:06:891 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:06:891 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:06:892 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:06:892 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:06:893 UTC] 00000098 WebCollaborat 3   required roles: nobody
[5/10/20 3:17:06:893 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:06:894 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:06:894 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:06:895 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:06:896 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:06:896 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:06:897 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@75ff790e
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@66a6f989
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:897 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:06:898 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:06:898 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
                                 nobody
[5/10/20 3:17:06:899 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:900 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:06:900 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:06:901 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:06:901 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:06:902 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:902 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:06:903 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:06:903 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:06:904 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:06:905 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:06:905 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:06:906 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:906 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:907 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:908 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:06:908 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:06:909 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:06:909 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:06:910 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:06:911 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:06:911 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:912 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:912 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:913 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:914 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:06:914 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:915 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:06:916 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:916 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:917 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:917 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:06:918 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:06:918 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:06:919 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:06:919 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:06:920 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:06:921 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:06:921 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:922 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:06:922 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:06:923 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:06:923 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:06:924 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:06:924 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:06:925 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:926 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:926 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:927 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:06:927 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:06:928 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:06:928 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:06:929 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:06:929 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /navigatorCmd.do succeeded. 
[5/10/20 3:17:06:930 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@3bba1050
[5/10/20 3:17:06:931 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@3bba1050
[5/10/20 3:17:06:931 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:06:932 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:06:932 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:933 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@61d20ff2[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 action
                                 isclite
[5/10/20 3:17:06:933 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:06:934 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:06:935 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:06:935 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:06:936 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:06:936 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:06:937 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:06:938 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:938 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:06:939 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:06:939 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:06:940 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:940 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@1bf213f8
[5/10/20 3:17:06:941 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@1bf213f8
[5/10/20 3:17:06:941 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@f3fd8656
                                 action
[5/10/20 3:17:06:942 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@f3fd8656
                                 action
[5/10/20 3:17:06:942 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:06:943 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:06:944 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:944 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:945 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:945 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:06:946 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:06:947 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:06:947 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:06:948 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3dfb11dc
[5/10/20 3:17:06:949 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:949 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:950 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:950 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:951 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:951 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:952 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:952 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:953 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:953 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:954 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:955 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:955 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:956 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:956 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:957 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:958 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:958 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:959 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:959 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:960 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:960 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:961 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:962 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:962 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:963 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:963 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:964 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:964 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:965 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:965 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:966 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:967 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:967 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:968 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:968 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:969 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:969 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:970 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:971 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:971 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:972 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:972 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:973 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:973 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:974 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:974 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:975 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:975 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:976 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:977 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:977 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:978 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:978 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:979 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:979 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:980 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:981 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:981 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:982 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:982 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:983 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:983 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:984 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:984 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:985 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:986 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:986 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:987 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:987 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:988 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:988 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:989 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:989 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:990 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:991 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:991 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:992 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:992 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:06:993 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:06:993 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:06:994 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:06:994 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:06:995 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:06:996 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:06:996 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:06:997 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:06:997 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:06:998 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:06:998 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:06:999 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:000 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:000 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:001 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:001 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:002 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:002 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:003 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:004 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:004 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:005 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:005 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:006 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:006 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:007 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:007 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:008 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:009 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:009 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:010 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:010 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:011 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:011 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:012 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:012 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:013 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:014 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:014 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:015 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:015 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:016 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:017 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:017 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:018 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:018 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:019 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:019 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:020 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:020 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:021 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:022 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:022 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:023 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:023 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:024 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:024 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:025 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:026 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:026 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:027 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:027 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:028 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:028 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:029 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:029 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:030 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:030 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:031 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:032 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:032 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:033 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:033 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:034 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:034 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:035 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:035 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:036 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:036 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:037 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:038 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:038 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:039 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:039 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:040 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:040 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:041 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:041 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:042 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:043 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:043 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:044 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:044 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:045 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:045 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:046 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:046 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:047 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:047 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:048 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:049 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:049 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:050 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:050 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:051 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:051 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:052 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:052 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:053 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:054 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:054 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:060 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:061 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:062 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:064 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:064 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:065 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:066 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:067 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:068 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:068 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:069 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:076 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:077 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:079 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:080 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:081 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:081 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:082 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:083 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:083 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:084 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:084 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:085 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:086 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:087 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:088 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:089 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:089 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.console.core.action.BaseDetailController$1@3c6f38f5
                                 System
[5/10/20 3:17:07:090 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.console.core.action.BaseDetailController.getParentObject(BaseDetailController.java:409)
[5/10/20 3:17:07:091 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:091 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:092 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:092 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:093 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:093 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:094 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:094 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:095 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:096 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:096 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:097 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:07:097 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:098 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:098 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:099 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:100 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:100 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:101 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:101 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:102 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:102 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:103 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:104 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:104 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:105 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:105 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:106 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:106 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:107 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:108 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:107 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:109 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:109 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:110 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:110 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:07:111 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:112 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:112 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:07:113 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:114 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:115 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:115 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:116 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:116 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:117 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:117 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:118 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:118 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:119 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:118 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:120 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:121 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:121 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:122 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:07:126 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:127 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:128 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:129 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:129 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:130 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:130 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:131 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:132 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:132 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:133 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:134 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:134 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:135 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:135 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:136 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:137 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:137 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:138 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:138 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:139 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:140 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:140 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:142 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:143 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:144 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:145 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:145 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:146 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:146 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:147 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:147 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:149 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:149 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:150 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:150 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:151 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:151 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:152 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:153 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:154 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:154 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:155 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:155 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:156 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:156 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:157 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:157 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:158 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:158 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:159 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:159 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:160 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:161 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:161 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:162 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:162 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:163 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:163 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:164 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:165 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:166 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:166 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:167 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:167 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:168 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:169 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:169 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:170 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:170 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:171 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:181 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:182 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:182 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:183 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:184 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:184 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:185 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:185 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:186 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:186 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:187 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:188 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:188 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:189 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:189 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:190 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:191 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:192 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:193 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:193 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:194 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:195 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:195 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:196 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:197 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:198 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:199 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:199 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:200 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:200 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:201 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:202 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:202 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:203 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:204 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:205 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:205 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:206 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:206 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:207 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:208 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:209 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:209 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:210 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:210 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:211 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:211 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:212 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:273 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:274 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:275 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:276 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:276 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:277 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:278 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:279 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:279 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:280 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:281 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:282 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:282 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:283 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:283 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:284 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:284 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:285 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:285 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:286 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:287 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:287 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:288 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:288 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:289 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:290 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:290 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:291 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:291 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:292 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:293 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:293 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:294 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:295 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:296 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:296 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:297 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:297 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:298 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:298 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:299 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:299 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:300 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:301 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:301 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:302 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:302 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:303 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:303 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:07:304 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:07:305 UTC] 00000098 RoleBasedAuth >  isGrantedAnyRole Entry
                                 administrator
                                 adminsecuritymanager
                                 auditor
                                 configurator
                                 deployer
                                 monitor
                                 operator
[5/10/20 3:17:07:305 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:07:306 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:306 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:307 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:307 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:308 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:309 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:309 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:310 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:310 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:311 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:07:311 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:07:312 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:312 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:313 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@1b63c56a;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:07:313 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:314 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:07:315 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:07:315 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:07:316 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:07:316 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:317 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:317 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:318 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:07:318 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:07:319 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:07:319 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:07:320 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:07:320 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:07:321 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:321 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:322 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:323 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:323 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:07:324 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:324 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:325 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:325 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:326 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:326 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:07:327 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:327 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:07:328 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:07:328 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:07:329 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:07:329 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:07:330 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:331 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:07:331 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:07:332 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:07:332 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:07:333 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:07:333 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:07:334 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:334 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:335 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:335 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:07:336 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:07:336 UTC] 00000098 RoleBasedAuth <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:07:343 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:343 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:344 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:345 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:346 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:346 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:347 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:347 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:348 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:349 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:349 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:350 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:350 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:351 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:351 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:352 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:353 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:353 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:354 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:354 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:355 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:07:356 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:356 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:07:357 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:07:357 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:07:359 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:359 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:360 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:360 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:361 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:362 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:362 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:363 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:363 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:364 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:365 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:365 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:366 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:366 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:367 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:367 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:368 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:368 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:369 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:370 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:370 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:371 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:371 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:372 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:373 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:373 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:374 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:374 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:375 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:375 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:377 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:378 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:378 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:379 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:379 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:380 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:380 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:381 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:381 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:382 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:383 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:384 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:384 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:385 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:385 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:386 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:386 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@ac096411
                                 System
[5/10/20 3:17:07:387 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:07:388 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:388 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:389 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:389 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:390 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:390 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:391 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:392 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:392 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:393 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:393 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:394 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:07:394 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:395 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:395 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:396 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:396 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:397 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:398 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:398 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:399 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:399 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:400 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:400 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:401 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:401 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:402 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:402 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:403 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:404 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:404 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:404 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:405 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:406 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:406 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:407 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:07:407 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:408 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:408 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:07:410 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:411 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:411 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:432 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:433 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:434 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:436 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:437 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:438 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:439 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:440 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:440 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:441 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:442 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:441 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:443 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:444 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:444 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:445 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:07:445 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:446 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:447 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:447 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@40cb7006
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configboxLayout.jsp
                                 false
[5/10/20 3:17:07:448 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:448 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:449 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:449 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:450 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:451 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:451 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:452 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:452 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:452 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:453 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:454 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:454 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:455 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@17457f23
[5/10/20 3:17:07:456 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:456 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:457 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:457 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:458 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:459 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@17457f23
[5/10/20 3:17:07:460 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:460 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:461 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:461 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:462 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:463 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:463 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:464 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:464 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:465 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:466 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:467 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:467 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:468 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:469 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:469 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:470 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:470 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:471 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:471 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:472 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:472 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:473 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@3b03c312
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/browser_detection.jsp
                                 false
[5/10/20 3:17:07:474 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:474 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:475 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:476 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:476 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:477 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:478 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:478 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:479 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:478 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:481 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:481 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:482 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:482 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ef2cf9dc
[5/10/20 3:17:07:483 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:484 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:484 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:485 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:486 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:486 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ef2cf9dc
[5/10/20 3:17:07:487 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:488 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:489 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:489 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:490 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:490 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:491 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:492 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:492 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:493 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:493 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:494 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@e8335619
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/bidi.jsp
                                 false
[5/10/20 3:17:07:495 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:495 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:496 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:497 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:497 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:498 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:498 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:499 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:500 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:499 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:501 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:502 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:503 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:503 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c3ba12e6
[5/10/20 3:17:07:504 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:505 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:505 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:506 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:507 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:507 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c3ba12e6
[5/10/20 3:17:07:508 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:509 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:509 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:510 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:511 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:511 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:512 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:512 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:513 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:514 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:514 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:515 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@c3ba12e6
[5/10/20 3:17:07:516 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:517 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:517 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:518 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:518 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:519 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:520 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:520 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:521 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:521 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:522 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:523 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:522 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:524 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:525 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:525 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:526 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:527 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@c3ba12e6
[5/10/20 3:17:07:527 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:528 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:529 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:529 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:530 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:530 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:531 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:532 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:532 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:533 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:534 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:534 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:535 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:536 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:536 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:537 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:538 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:538 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:539 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:539 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:540 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:541 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:541 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:542 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@ef2cf9dc
[5/10/20 3:17:07:543 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:543 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:544 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:545 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:545 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:546 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:547 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:547 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:548 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:548 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:549 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:550 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:549 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:551 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:551 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:552 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:552 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:553 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@ef2cf9dc
[5/10/20 3:17:07:553 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:554 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@56d97b71
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/content_accessibility.jsp
                                 false
[5/10/20 3:17:07:555 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:555 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:556 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:556 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:557 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:557 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:558 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:558 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:559 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:558 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:560 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:561 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:561 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:562 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@671f33f9
[5/10/20 3:17:07:562 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:563 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:563 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:564 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:565 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:565 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@671f33f9
[5/10/20 3:17:07:566 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:567 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:568 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:568 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:569 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:570 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:570 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:571 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:571 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:572 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:572 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:573 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@671f33f9
[5/10/20 3:17:07:574 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:574 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:575 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:575 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:576 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:576 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:577 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:577 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:578 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:578 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:579 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:579 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:579 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:581 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:581 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:582 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:582 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:583 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@671f33f9
[5/10/20 3:17:07:583 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:584 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:584 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:585 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:585 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:586 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:586 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:587 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:588 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:588 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:589 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:589 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:593 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@2d78dd06
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/detailTitleLayout.jsp
                                 false
[5/10/20 3:17:07:593 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:594 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:594 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:595 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:595 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:596 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:597 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:597 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:598 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:597 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:599 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:600 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:600 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:601 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7975f2d8
[5/10/20 3:17:07:601 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:602 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:602 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:603 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:603 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:604 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7975f2d8
[5/10/20 3:17:07:605 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:605 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:606 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:607 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:607 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:608 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:608 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:609 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:609 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:610 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:610 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:614 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:615 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:616 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:616 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:617 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:617 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:618 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:618 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:619 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:620 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:620 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:621 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:621 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:622 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:622 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:623 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:624 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:624 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:625 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:625 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:626 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:626 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:627 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:628 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:628 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:629 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:630 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:630 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:631 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:631 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:632 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:632 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:633 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:633 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:634 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:634 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:635 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:636 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:636 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:637 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:637 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:638 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:638 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:639 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:640 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@3e88fc96
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/scopeTitle.jsp
                                 false
[5/10/20 3:17:07:641 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:641 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:642 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:642 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:643 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:643 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:644 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:644 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:645 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:644 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:646 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:646 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:647 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:648 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@201e0039
[5/10/20 3:17:07:648 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:649 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:649 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:650 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:650 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:651 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@201e0039
[5/10/20 3:17:07:652 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:652 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:653 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:653 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:654 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:654 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:655 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:656 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:656 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:657 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:657 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:658 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@201e0039
[5/10/20 3:17:07:659 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:659 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:660 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:660 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:661 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:661 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:662 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:663 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:663 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:664 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:665 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:665 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:665 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:666 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:667 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:667 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:668 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:669 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@201e0039
[5/10/20 3:17:07:669 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:670 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@5fea8e8b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/portletToolbar.jsp
                                 false
[5/10/20 3:17:07:671 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:672 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:672 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:673 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:673 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:674 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:675 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:675 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:676 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:675 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:677 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:677 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:678 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:678 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a2ac79ff
[5/10/20 3:17:07:679 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:679 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:680 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:681 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:681 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:682 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a2ac79ff
[5/10/20 3:17:07:683 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:683 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:684 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:685 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:685 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:686 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:686 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:687 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:687 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:688 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:688 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:689 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:690 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:691 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:691 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:692 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:693 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@b053bb00
                                 System
[5/10/20 3:17:07:694 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:07:694 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:695 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:695 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:696 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:696 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:697 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:698 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:698 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:699 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:699 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:700 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:700 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:07:701 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:701 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:702 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:703 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:703 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:704 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:704 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:705 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:705 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:706 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:706 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:707 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:707 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:708 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:709 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:709 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:710 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:710 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:711 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:710 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:712 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:712 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:713 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:714 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:07:714 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:715 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:715 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:07:716 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:716 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:717 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:717 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:718 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:719 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:07:719 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:720 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:07:720 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:07:721 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:07:721 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:07:722 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:07:722 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:723 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:724 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:724 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:725 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:725 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:726 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:727 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:727 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:728 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:728 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:728 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:729 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:730 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:730 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:731 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:07:732 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@a2ac79ff
[5/10/20 3:17:07:732 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:733 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:733 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:734 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:734 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:735 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:736 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:736 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:737 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:737 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:738 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:738 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:738 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:739 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:740 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:741 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:741 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:742 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@a2ac79ff
[5/10/20 3:17:07:742 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:743 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:743 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:744 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:744 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:745 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:745 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:746 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:746 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:747 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:748 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:748 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:749 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@7975f2d8
[5/10/20 3:17:07:750 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:750 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:751 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:751 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:752 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:753 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:753 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:754 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:754 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:755 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:755 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:756 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:755 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:757 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:757 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:758 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:759 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:759 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@7975f2d8
[5/10/20 3:17:07:760 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:760 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:761 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:761 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:762 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:762 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:763 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:763 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:764 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:764 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:765 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:766 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:768 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@782046fc
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configTabLayout.jsp
                                 false
[5/10/20 3:17:07:769 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:770 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:770 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:771 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:771 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:772 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:772 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:773 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:773 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:773 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:774 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:775 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:775 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:776 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@8e253179
[5/10/20 3:17:07:777 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:777 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:778 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:778 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:779 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:780 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@8e253179
[5/10/20 3:17:07:780 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:781 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:782 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:782 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:783 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:783 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:784 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:784 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:785 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:785 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:786 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:786 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:787 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:787 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:788 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:789 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:789 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:790 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:790 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:791 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:791 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:792 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:794 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@52f15156
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/buttonLayout.jsp
                                 false
[5/10/20 3:17:07:795 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:796 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:796 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:797 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:797 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:798 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:798 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:799 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:800 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:799 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:801 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:801 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:802 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:802 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b755e3ae
[5/10/20 3:17:07:803 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:803 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:804 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:805 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:805 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:806 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b755e3ae
[5/10/20 3:17:07:806 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:807 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:808 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:808 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:809 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:809 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:810 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:810 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:811 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:811 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:812 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:813 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:07:813 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:814 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:07:814 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:815 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:816 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@e535234b
                                 System
[5/10/20 3:17:07:816 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:07:817 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:818 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:818 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:819 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:819 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:820 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:821 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:821 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:822 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:822 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:823 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:823 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:07:824 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:824 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:825 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:825 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:826 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:827 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:827 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:828 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:828 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:829 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:829 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:830 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:830 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:831 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:831 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:832 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:832 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:833 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:834 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:833 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:835 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:835 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:836 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:836 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:07:837 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:837 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:838 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:07:839 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:840 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:840 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:861 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:862 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:863 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:864 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:865 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:866 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:867 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:868 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:869 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:870 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:870 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:870 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:872 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:872 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:873 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:874 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:07:875 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@b755e3ae
[5/10/20 3:17:07:875 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:876 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:876 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:877 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:877 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:878 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:879 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:879 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:880 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:880 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:881 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:881 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:881 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:07:882 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:07:883 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:883 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:07:884 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:885 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@b755e3ae
[5/10/20 3:17:07:885 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:07:886 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:886 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:07:887 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:07:888 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:888 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:889 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:07:889 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:07:890 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:07:890 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:07:891 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:07:891 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:07:895 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@114197a9
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
                                 false
[5/10/20 3:17:07:896 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:07:896 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:07:897 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:897 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:898 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:898 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:899 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:899 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:900 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:899 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:901 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:901 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:902 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:902 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@62e66ecd
[5/10/20 3:17:07:903 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:903 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:904 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:07:904 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:905 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:906 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@62e66ecd
[5/10/20 3:17:07:908 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
[5/10/20 3:17:07:909 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:909 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:910 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:911 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:911 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:912 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:913 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:912 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:914 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:914 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:915 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:916 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f27b18fb
[5/10/20 3:17:07:916 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:917 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:917 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:918 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:919 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:919 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:920 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:920 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:921 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:921 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:922 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:922 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:07:923 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:923 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:924 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:924 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:925 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:926 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:926 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:927 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:927 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:07:928 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:07:928 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:07:929 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:07:930 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:07:930 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
                                 true
[5/10/20 3:17:07:931 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:931 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:932 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:932 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:933 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:07:933 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:934 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:933 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:935 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:07:936 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:936 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:07:937 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@22d6df01
[5/10/20 3:17:07:937 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:07:938 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:07:938 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@c51b4f02[isclite#isclite.war#/com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp]
[5/10/20 3:17:07:939 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:939 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:07:940 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:07:941 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:07:941 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:942 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
                                 isclite
[5/10/20 3:17:07:942 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:07:943 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:07:943 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:07:944 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:07:944 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:07:945 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:07:945 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:07:946 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:947 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:07:947 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:07:948 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:07:948 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:949 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@efdef8ad
[5/10/20 3:17:07:949 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@efdef8ad
[5/10/20 3:17:07:950 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@5706ad42
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
[5/10/20 3:17:07:951 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@5706ad42
                                 /com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp
[5/10/20 3:17:07:951 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:07:952 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:07:952 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:953 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:953 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:954 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:955 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:955 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:956 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:956 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@22d6df01
[5/10/20 3:17:07:957 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f27b18fb
[5/10/20 3:17:07:958 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:958 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:959 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:959 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:960 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:961 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:961 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:962 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:962 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:963 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:963 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:964 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:965 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:07:965 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:966 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:966 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:967 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:967 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:968 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:968 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:969 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:970 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:970 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:971 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:971 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:972 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:972 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:07:973 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:973 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:975 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/communicationsConfigGenPropLayout.jsp]: Initialization successful.
[5/10/20 3:17:07:976 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@f27b18fb
[5/10/20 3:17:07:976 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:977 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:07:978 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:978 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:979 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:07:980 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:980 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:07:981 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:07:981 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:07:982 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:07:982 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:07:983 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:07:984 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:07:985 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:07:985 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:07:986 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:07:986 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:987 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:988 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:07:988 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:07:989 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:989 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:07:990 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:990 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:991 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:07:991 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:992 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:07:993 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:993 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:977 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:07:994 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:07:995 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:995 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:07:996 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:07:996 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:07:997 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:07:997 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:07:998 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:07:998 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:07:999 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:000 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:07:999 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:001 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:001 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:002 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:002 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:003 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@f27b18fb
[5/10/20 3:17:08:003 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:004 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:005 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:005 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:006 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:006 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:007 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:007 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:008 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:008 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:009 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:010 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:011 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:011 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:012 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:012 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:013 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:013 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:014 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:015 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:015 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:016 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:016 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:017 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:017 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:018 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:019 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:019 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:020 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:020 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:021 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:08:021 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:08:022 UTC] 00000098 RoleBasedAuth >  isGrantedAnyRole Entry
                                 administrator
[5/10/20 3:17:08:022 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:08:023 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:024 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:024 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:025 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:025 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:026 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:026 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:027 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:027 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:028 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:08:028 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:08:029 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:030 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:030 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@616ae967;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:08:031 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:031 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:08:032 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:08:032 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:08:033 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:08:033 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:034 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:034 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:035 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:08:036 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:08:036 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:08:037 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:08:037 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:08:038 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:08:038 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:039 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:040 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:040 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:041 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:08:041 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:042 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:042 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:043 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:044 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:044 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:08:045 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:045 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:08:046 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:08:046 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:08:047 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:08:047 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:08:048 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:049 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:08:049 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:08:050 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:08:050 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:08:051 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:08:052 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:08:052 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:053 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:053 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:054 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:08:054 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:08:055 UTC] 00000098 RoleBasedAuth <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:08:057 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@bc532185
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/checkBoxLayout.jsp
                                 false
[5/10/20 3:17:08:058 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:08:059 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:08:059 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:060 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:060 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:061 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:061 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:062 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:063 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:062 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:064 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:064 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:064 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:065 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@cb965a40
[5/10/20 3:17:08:066 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:08:066 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:08:067 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:08:067 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:068 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:069 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@cb965a40
[5/10/20 3:17:08:071 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/checkBoxLayout.jsp
[5/10/20 3:17:08:072 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:072 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:073 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:073 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:074 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:074 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:075 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:074 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:076 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:076 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:077 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:077 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ea3b1013
[5/10/20 3:17:08:078 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:079 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:079 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:080 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:080 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:081 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:081 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:082 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:082 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:083 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:083 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:084 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:08:085 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:085 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:086 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:086 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:087 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:087 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:088 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:089 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:089 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:08:090 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:08:090 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:08:091 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:08:092 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:08:092 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/checkBoxLayout.jsp
                                 true
[5/10/20 3:17:08:093 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:093 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:094 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:095 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:095 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:096 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:096 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:096 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:098 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:098 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:099 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:099 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@21aa504c
[5/10/20 3:17:08:100 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:08:100 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:08:101 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@49077460[isclite#isclite.war#/secure/layouts/checkBoxLayout.jsp]
[5/10/20 3:17:08:101 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:102 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:08:103 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:08:103 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:104 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:105 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/checkBoxLayout.jsp
                                 isclite
[5/10/20 3:17:08:105 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:08:106 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:08:106 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:08:107 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:08:107 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:08:108 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:08:109 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:08:109 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:110 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:08:110 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:08:111 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:08:111 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:112 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@56c56c2a
[5/10/20 3:17:08:113 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@56c56c2a
[5/10/20 3:17:08:113 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@ab161d5f
                                 /secure/layouts/checkBoxLayout.jsp
[5/10/20 3:17:08:114 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@ab161d5f
                                 /secure/layouts/checkBoxLayout.jsp
[5/10/20 3:17:08:115 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:08:115 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:08:116 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:116 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:117 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:117 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:118 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:119 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:119 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:120 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@21aa504c
[5/10/20 3:17:08:120 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ea3b1013
[5/10/20 3:17:08:121 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:122 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:122 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:123 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:124 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:124 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:125 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:125 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:126 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:126 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:127 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:127 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:128 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:08:129 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:129 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:130 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:130 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:131 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:131 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:132 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:133 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:133 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:134 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:134 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:135 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:135 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:136 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:08:137 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:137 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:138 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/checkBoxLayout.jsp]: Initialization successful.
[5/10/20 3:17:08:140 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:140 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:141 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:142 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:142 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:143 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:143 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:144 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:145 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:145 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:146 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:147 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:148 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:08:149 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:149 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:150 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:151 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:151 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:152 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:153 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:153 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:154 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:155 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:155 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:156 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:157 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:157 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:08:158 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:159 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:140 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@ea3b1013
[5/10/20 3:17:08:160 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:161 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:161 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:162 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:163 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:163 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:164 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:164 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:165 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:165 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:166 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:167 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:166 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:168 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:168 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:169 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:169 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:170 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@ea3b1013
[5/10/20 3:17:08:171 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:172 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:172 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:173 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:174 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:174 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:175 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:175 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:176 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:176 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:177 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:177 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:178 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@cb965a40
[5/10/20 3:17:08:179 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:180 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:180 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:181 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:181 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:182 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:182 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:183 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:184 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:184 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:185 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:185 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:185 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:187 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:187 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:188 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:188 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:189 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@cb965a40
[5/10/20 3:17:08:189 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:190 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@62e66ecd
[5/10/20 3:17:08:191 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:191 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:192 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:192 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:193 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:194 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:194 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:195 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:195 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:196 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:196 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:197 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:196 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:198 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:198 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:199 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:200 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:200 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@62e66ecd
[5/10/20 3:17:08:201 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:201 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:202 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:202 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:203 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:204 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:204 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:205 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:205 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:206 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:206 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:207 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:210 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@15945f5e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@29e1c00f
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/relatedItemsLayout.jsp
                                 false
[5/10/20 3:17:08:211 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/nsc.do]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:08:211 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:08:212 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:212 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:213 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:213 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:214 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:214 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:215 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:214 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:216 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:216 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:217 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:217 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@59b0f52d
[5/10/20 3:17:08:218 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:08:218 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:08:219 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:08:219 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:220 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:221 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@59b0f52d
[5/10/20 3:17:08:223 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/relatedItemsLayout.jsp
[5/10/20 3:17:08:223 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:224 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:224 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:225 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:226 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:226 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:227 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:226 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:228 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:228 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:229 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:230 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@514ac605
[5/10/20 3:17:08:230 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:231 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:231 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:232 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:232 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:233 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:233 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:234 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:235 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:235 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:236 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:237 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:08:238 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:238 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:239 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:239 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:240 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:240 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:241 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:241 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:242 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:08:243 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:08:243 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:08:244 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:08:244 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:08:245 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/relatedItemsLayout.jsp
                                 true
[5/10/20 3:17:08:245 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:246 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:246 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:247 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:248 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:08:248 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:249 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:248 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:250 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:250 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:251 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:08:251 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b8fa83a3
[5/10/20 3:17:08:252 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:08:252 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:08:253 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@89da8a48[isclite#isclite.war#/secure/layouts/relatedItemsLayout.jsp]
[5/10/20 3:17:08:254 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:254 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:08:255 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:08:255 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:256 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:256 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/relatedItemsLayout.jsp
                                 isclite
[5/10/20 3:17:08:257 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:08:257 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:08:258 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:08:258 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:08:259 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:08:260 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:08:260 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:08:260 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:261 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:08:262 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:08:262 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:08:263 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:263 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@a7dda304
[5/10/20 3:17:08:264 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@a7dda304
[5/10/20 3:17:08:264 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@50605c17
                                 /secure/layouts/relatedItemsLayout.jsp
[5/10/20 3:17:08:265 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@50605c17
                                 /secure/layouts/relatedItemsLayout.jsp
[5/10/20 3:17:08:266 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:08:266 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:08:267 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:267 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:268 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:268 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:269 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:269 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:270 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:271 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b8fa83a3
[5/10/20 3:17:08:271 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@514ac605
[5/10/20 3:17:08:272 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:273 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:273 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:274 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:275 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:275 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:276 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:276 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:277 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:277 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:278 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:278 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:279 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:08:279 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:280 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:281 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:281 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:282 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:282 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:283 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:283 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:284 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:284 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:285 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:286 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:286 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:287 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:08:287 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:288 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:289 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/relatedItemsLayout.jsp]: Initialization successful.
[5/10/20 3:17:08:290 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:291 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:291 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:292 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:293 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:293 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:294 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:294 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:295 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:296 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:296 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:297 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:297 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:08:298 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:298 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:299 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:300 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:300 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:301 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:301 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:302 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:302 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:303 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:303 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:304 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:08:305 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:305 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:08:306 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:306 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:290 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@514ac605
[5/10/20 3:17:08:308 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:308 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:309 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:309 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:310 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:310 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:311 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:312 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:312 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:313 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:313 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:314 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:313 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:315 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:316 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:316 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:317 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:317 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@514ac605
[5/10/20 3:17:08:318 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:319 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:319 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:320 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:320 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:321 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:321 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:322 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:323 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:323 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:324 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:324 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:326 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:327 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:327 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:328 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:329 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:329 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@d4fa7ac8
                                 System
[5/10/20 3:17:08:330 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:08:331 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:331 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:332 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:333 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:333 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:334 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:334 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:335 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:336 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:336 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:337 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:337 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:08:338 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:339 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:339 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:340 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:341 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:341 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:342 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:342 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:343 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:344 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:344 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:345 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:346 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:346 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:347 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:347 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:348 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:348 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:349 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:348 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:350 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:351 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:351 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:352 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:08:352 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:353 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:353 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:08:354 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:355 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:355 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:377 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:378 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:379 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:381 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:382 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:383 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:384 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:385 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:385 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:386 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:387 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:386 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:388 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:389 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:389 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:390 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:08:391 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:392 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:392 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:393 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:394 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:394 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:395 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:396 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:396 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:397 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:397 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:398 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:399 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:400 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:400 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:401 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:401 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:402 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:402 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:403 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:403 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:404 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:404 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:405 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:406 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:406 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:407 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:407 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:408 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:408 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:409 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:410 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:410 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:411 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:411 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:412 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:412 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:413 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:414 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:414 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:415 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:415 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:416 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:417 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:417 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:418 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:418 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:419 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:420 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:420 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:08:421 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:421 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:422 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:422 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:423 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:423 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@17846f63
                                 Specified
[5/10/20 3:17:08:424 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:08:425 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:425 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:426 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:426 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:427 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:427 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:428 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:429 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:429 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:430 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:430 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:431 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:431 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:432 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:432 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:432 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:433 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:434 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:435 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:435 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:08:436 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:436 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:437 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:08:438 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:438 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:439 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:439 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:440 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:440 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:08:441 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:441 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:442 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:443 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:443 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:08:444 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:08:444 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:445 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:445 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:446 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:446 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:447 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:08:448 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:448 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:449 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:449 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:450 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:08:450 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:08:451 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:452 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:452 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:453 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:453 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:454 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:454 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:455 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:456 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:08:456 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:457 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:458 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:458 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:459 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:08:459 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:08:460 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:461 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:461 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:462 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:462 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:463 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:08:464 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:464 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:465 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:465 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:466 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:08:467 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:08:467 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:468 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:468 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:469 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:469 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:470 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:471 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:471 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:472 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:472 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:473 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:473 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:474 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:474 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:474 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:475 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:476 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:476 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:477 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:08:478 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:478 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:479 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:480 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:480 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:481 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:481 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:482 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:482 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:483 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:483 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:484 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:485 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:485 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:486 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:486 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:487 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:488 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:488 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:489 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:489 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:490 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:491 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:491 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:492 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:492 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:493 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:493 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:494 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:494 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:495 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:496 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:496 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:497 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:497 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:498 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:499 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:499 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:500 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:500 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:501 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:501 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:502 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:502 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:503 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:503 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:504 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:504 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:505 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:506 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:506 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:507 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:507 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:508 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:508 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:509 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:509 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:510 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:510 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:511 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:512 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:512 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:513 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:513 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:514 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:514 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:515 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:516 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:516 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:517 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:517 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:518 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:519 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:519 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:520 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:520 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:521 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:521 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:522 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:523 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:523 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:524 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:524 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:525 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:525 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:526 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:527 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:527 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:528 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:528 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:529 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:529 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:530 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:531 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:531 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:532 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:532 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:533 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:533 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:534 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:534 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:535 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:536 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:536 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:537 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:538 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:539 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:539 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:540 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:541 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:541 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:542 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:542 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:543 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:544 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:544 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:545 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:545 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:546 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:546 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:547 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:548 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:548 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:549 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:550 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:550 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:551 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:551 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:552 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:552 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:553 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:554 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:554 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:555 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:555 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:08:556 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:556 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:08:557 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:08:557 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:08:558 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:558 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:559 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:560 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:560 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:561 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@59b0f52d
[5/10/20 3:17:08:562 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:562 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:563 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:564 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:564 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:565 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:565 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:566 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:566 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:567 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:567 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:568 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:567 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:569 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:569 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:570 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:571 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:571 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@59b0f52d
[5/10/20 3:17:08:572 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:572 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@8e253179
[5/10/20 3:17:08:573 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:573 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:574 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:574 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:575 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:576 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:576 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:577 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:577 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:578 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:578 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:579 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:578 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:580 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:581 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:581 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:582 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:582 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@8e253179
[5/10/20 3:17:08:583 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:583 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:584 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:584 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:585 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:585 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:586 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:587 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:587 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:588 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:588 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:589 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:590 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:590 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:591 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:591 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:592 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:592 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:593 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:593 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:594 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:594 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:595 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:596 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:08:597 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:597 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:08:598 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:598 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:599 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@9c39a9dc
                                 System
[5/10/20 3:17:08:599 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:08:600 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:08:601 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:601 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:602 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:08:602 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:603 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:08:603 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:08:604 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:604 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:605 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:08:605 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:08:606 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:08:607 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:08:607 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:08:608 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:08:608 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:609 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:609 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:610 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:610 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:611 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:612 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:612 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:08:613 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:613 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:614 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:614 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:615 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:615 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:616 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:616 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:616 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:618 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:618 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:619 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:619 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:08:620 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:620 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:621 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:08:622 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:622 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:08:623 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:08:623 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:624 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:08:624 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:08:625 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:625 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:626 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:08:626 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:08:627 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:08:627 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:08:628 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:629 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:629 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:630 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:630 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:631 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:631 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:632 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:632 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:633 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:633 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:633 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:634 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:635 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:635 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:636 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:08:636 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:637 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:638 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:638 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:639 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:639 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:640 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:641 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:641 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:642 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:642 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:646 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@17457f23
[5/10/20 3:17:08:648 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:08:649 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:650 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:650 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:651 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:652 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:653 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:08:653 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:654 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:655 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:656 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:08:657 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:08:656 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:08:659 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:08:660 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:661 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:661 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:08:662 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@17457f23
[5/10/20 3:17:08:663 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:664 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:665 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:08:665 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:08:666 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:08:667 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:08:667 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:08:668 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:08:669 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:08:670 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:08:670 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:08:671 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:08:672 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@3dfb11dc
[5/10/20 3:17:08:672 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:08:673 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:08:674 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:08:674 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:675 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:08:676 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:08:676 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:08:677 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:08:678 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:08:678 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:08:679 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:08:680 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:08:681 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@3dfb11dc
[5/10/20 3:17:08:681 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:08:682 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:08:683 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:08:683 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:11:465 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:17:11:466 UTC] 00000098 ContextManage >  clearCallerContext Entry
[5/10/20 3:17:11:467 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:11:468 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:469 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:11:470 UTC] 00000098 ContextManage <  clearCallerContext Exit
[5/10/20 3:17:11:470 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:17:11:471 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:11:472 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:473 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:11:474 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@aec799de
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@64efca0
                                 /ibm/console
                                 admin_host
                                 action
                                 true
[5/10/20 3:17:11:475 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:11:476 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/com.ibm.ws.console.security.forwardCmd.do, Path Info=null
[5/10/20 3:17:11:476 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:11:477 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:11:478 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:479 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:17:11:480 UTC] 00000098 ContextManage 3   Returning: true
[5/10/20 3:17:11:481 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:11:481 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:11:482 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:17:11:483 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:11:483 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:17:11:484 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:17:11:485 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@187ea9ba
[5/10/20 3:17:11:486 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:11:486 UTC] 00000098 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:17:11:487 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:488 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:11:488 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:17:11:489 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:11:490 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:11:490 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:17:11:491 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:11:492 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:11:492 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:11:493 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@3ce90e9c[isclite#isclite.war#action]
[5/10/20 3:17:11:494 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:494 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:11:495 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:17:11:496 UTC] 00000098 EJSWebCollabo 3   preInvoke pushing admin
[5/10/20 3:17:11:496 UTC] 00000098 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@187ea9ba
[5/10/20 3:17:11:497 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:11:498 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:11:498 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:11:499 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:11:500 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:11:500 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:11:501 UTC] 00000098 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@15ff211c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:11:502 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:11:502 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:11:503 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:11:503 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:11:504 UTC] 00000098 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@aec799de
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@64efca0
                                 admin_host:/ibm/console
                                 true
                                 isclite
[5/10/20 3:17:11:505 UTC] 00000098 URLHandler    3   URI requested: /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:11:505 UTC] 00000098 URLHandler    3   URI returned: /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:11:506 UTC] 00000098 LRUCache      >  get Entry
                                 isclite
[5/10/20 3:17:11:507 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:11:507 UTC] 00000098 PermissionRol 3   App permission cache found for isclite
[5/10/20 3:17:11:508 UTC] 00000098 LRUCache      >  get Entry
                                 com.ibm.ws.security.web.WebAccessPermission@10e6530d
[5/10/20 3:17:11:508 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:11:509 UTC] 00000098 PermissionRol 3   No permissions found for /com.ibm.ws.console.security.forwardCmd.do:GET
[5/10/20 3:17:11:510 UTC] 00000098 WebConstraint >  getRequiredRoles :  /com.ibm.ws.console.security.forwardCmd.do GETisDenySet false Entry
[5/10/20 3:17:11:510 UTC] 00000098 WebConstraint 3   getRequiredRoles: isDenySet? false
[5/10/20 3:17:11:511 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:11:512 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:11:512 UTC] 00000098 WebConstraint 3   getRequiredRoles: isDenySet? false allowCustomHTTPMethods? false
[5/10/20 3:17:11:513 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:513 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:514 UTC] 00000098 WebConstraint 3   isDenySet: false methodName: GETj: 1
[5/10/20 3:17:11:515 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:515 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:516 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:517 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:517 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:518 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:519 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:519 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:520 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:520 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:521 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:522 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:522 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:523 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:524 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:11:524 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:525 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:525 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:526 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:527 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:527 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:528 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:528 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:529 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:529 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:530 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:530 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:531 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:531 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:532 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:532 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:11:533 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:534 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:534 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:535 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:535 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:536 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:536 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:537 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:537 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:538 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:539 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:539 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:540 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:541 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:541 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:542 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:11:542 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:543 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:543 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:544 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:545 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:546 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:546 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:547 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:547 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:548 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:548 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:549 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:550 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:551 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:11:551 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:552 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:552 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:553 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:553 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:554 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:554 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:555 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:556 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:556 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:557 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:557 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:558 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:559 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:560 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:11:560 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:11:561 UTC] 00000098 WebConstraint 3   found a match, p not null
[5/10/20 3:17:11:562 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:562 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:563 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:563 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:564 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:564 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:565 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:565 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:566 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:567 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:567 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:568 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:568 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:569 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:570 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:11:570 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:571 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:571 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:572 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:572 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:573 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:574 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:574 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:575 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:575 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:576 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:576 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:577 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:578 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:578 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:579 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:11:579 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:580 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:580 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:581 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:581 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:582 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:583 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:583 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:584 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:584 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:585 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:585 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:586 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:586 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:587 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:587 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:11:588 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:589 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:589 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:591 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:591 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:592 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:592 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:593 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:593 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:594 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:595 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:595 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:596 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:596 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:11:597 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:597 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:598 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:598 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:600 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:600 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:601 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:601 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:602 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:602 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:603 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:605 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:605 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:11:606 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:606 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:607 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:607 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:608 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:609 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:609 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:610 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:610 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:611 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:611 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:612 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:612 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:613 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:614 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:614 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:11:615 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:615 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:616 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:616 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:617 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:618 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:618 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:619 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:619 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:620 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:620 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:621 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:622 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:622 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:623 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:623 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:11:624 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:624 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:625 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:626 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:626 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:627 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:627 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:628 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:629 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:629 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:630 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:630 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:631 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:631 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:632 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:11:633 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:633 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:634 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:635 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:635 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:636 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:636 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:637 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:638 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:638 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:639 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:641 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:641 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:11:642 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:642 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:643 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:643 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:645 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:645 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:646 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:646 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:647 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:647 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:648 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:648 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:649 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:650 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:11:651 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:651 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:652 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:652 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:653 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:653 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:654 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:655 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:655 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:656 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:656 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:657 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:657 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:658 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:659 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:659 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:11:660 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:660 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:661 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:661 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:662 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:662 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:663 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:664 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:664 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:665 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:665 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:666 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:666 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:667 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:667 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:668 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:11:669 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:669 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:670 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:671 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:671 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:672 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:672 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:673 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:674 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:674 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:675 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:676 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:676 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:677 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:11:678 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:678 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:679 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:679 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:680 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:681 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:681 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:682 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:682 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:683 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:683 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:684 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:684 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:685 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:685 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:11:686 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:687 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:687 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:688 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:688 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:689 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:689 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:690 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:690 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:691 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:692 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:692 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:693 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:693 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:694 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:694 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:11:695 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:695 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:696 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:698 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:698 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:699 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:699 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:700 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:700 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:701 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:703 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:703 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:11:704 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:704 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:705 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:705 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:706 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:706 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:707 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:708 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:708 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:709 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:709 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:710 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:710 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:711 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:711 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:712 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:11:712 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:713 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:713 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:714 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:715 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:715 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:716 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:716 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:717 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:718 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:718 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:719 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:720 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:721 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:722 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:722 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:11:723 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:724 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:724 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:725 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:726 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:727 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:727 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:728 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:729 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:730 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:730 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:731 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:732 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:732 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:733 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:733 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:11:734 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:734 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:735 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:737 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:737 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:738 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:738 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:739 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:740 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:740 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:742 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:742 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:11:743 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:743 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:744 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:745 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:745 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:746 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:746 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:747 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:747 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:748 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:748 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:749 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:749 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:750 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:750 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:751 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:11:752 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:752 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:753 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:753 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:754 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:754 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:755 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:755 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:756 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:756 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:757 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:758 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:758 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:759 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:759 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:760 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:11:760 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:761 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:761 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:762 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:763 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:763 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:764 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:764 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:765 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:765 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:766 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:766 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:767 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:767 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:768 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:768 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:11:769 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:769 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:770 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:772 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:773 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:773 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:774 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:774 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:775 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:775 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:776 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:776 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:777 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:778 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:11:778 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:779 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:779 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:780 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:780 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:781 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:781 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:782 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:783 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:783 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:784 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:784 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:785 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:785 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:786 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:786 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:11:787 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:787 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:788 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:788 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:789 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:789 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:790 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:790 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:791 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:791 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:792 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:792 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:793 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:794 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:794 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:795 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:11:795 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:796 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:796 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:798 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:798 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:799 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:799 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:800 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:800 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:801 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:801 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:802 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:802 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:803 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:11:804 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:804 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:805 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:805 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:806 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:806 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:807 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:807 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:808 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:808 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:809 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:809 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:810 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:810 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:811 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:812 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:11:813 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:813 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:814 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:814 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:815 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:815 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:816 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:817 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:817 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:818 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:818 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:819 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:819 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:820 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:820 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:821 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:11:821 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:822 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:822 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:823 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:824 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:824 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:825 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:825 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:826 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:826 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:827 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:827 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:829 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:829 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:11:830 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:830 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:831 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:833 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:833 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:834 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:834 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:835 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:835 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:836 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:838 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:838 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:11:839 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:839 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:840 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:841 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:841 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:842 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:842 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:843 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:843 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:844 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:844 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:845 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:845 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:846 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:847 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:847 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:11:848 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:848 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:849 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:849 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:850 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:850 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:851 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:851 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:852 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:853 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:853 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:854 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:854 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:855 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:856 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:856 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:11:857 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:857 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:858 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:858 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:859 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:859 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:860 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:861 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:861 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:862 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:862 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:863 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:863 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:864 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:864 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:865 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:11:865 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:866 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:866 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:868 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:868 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:869 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:870 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:870 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:871 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:871 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:872 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:872 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:873 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:873 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:11:874 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:875 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:875 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:876 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:877 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:877 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:878 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:878 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:879 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:879 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:880 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:880 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:881 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:881 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:882 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:882 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:11:883 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:883 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:884 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:884 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:885 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:885 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:886 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:886 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:887 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:888 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:888 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:889 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:889 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:890 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:890 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:891 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:11:891 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:892 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:893 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:893 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:894 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:894 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:895 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:896 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:896 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:897 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:897 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:898 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:899 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:899 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:900 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:900 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:11:901 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:901 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:902 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:902 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:903 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:903 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:904 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:904 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:905 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:906 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:906 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:907 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:907 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:908 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:908 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:909 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:11:909 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:910 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:910 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:911 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:912 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:912 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:913 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:913 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:914 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:914 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:915 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:916 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:916 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:917 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:918 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:918 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:11:919 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:919 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:920 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:920 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:921 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:922 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:922 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:923 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:923 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:924 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:924 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:925 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:925 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:926 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:927 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:927 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:11:928 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:928 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:929 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:929 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:930 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:930 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:931 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:931 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:932 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:933 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:933 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:934 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:935 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:935 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:936 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:936 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:11:937 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:937 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:938 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:939 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:939 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:940 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:940 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:941 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:941 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:942 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:942 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:943 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:944 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:944 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:945 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:945 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:11:946 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:946 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:947 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:947 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:948 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:948 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:949 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:949 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:950 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:951 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:951 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:952 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:952 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:953 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:953 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:954 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:11:954 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:955 UTC] 00000098 WebConstraint 3   Required roles are
[5/10/20 3:17:11:956 UTC] 00000098 WebConstraint 3   administrator
[5/10/20 3:17:11:956 UTC] 00000098 WebConstraint 3   operator
[5/10/20 3:17:11:957 UTC] 00000098 WebConstraint 3   configurator
[5/10/20 3:17:11:957 UTC] 00000098 WebConstraint 3   monitor
[5/10/20 3:17:11:958 UTC] 00000098 WebConstraint 3   nobody
[5/10/20 3:17:11:959 UTC] 00000098 WebConstraint 3   .
[5/10/20 3:17:11:959 UTC] 00000098 WebConstraint <  getRequiredRoles Exit
[5/10/20 3:17:11:960 UTC] 00000098 LRUCache      >  put (synchronized) com.ibm.ws.security.web.WebAccessPermission@10e6530d Entry
[5/10/20 3:17:11:960 UTC] 00000098 LRUCache      <  put Exit
[5/10/20 3:17:11:961 UTC] 00000098 PermissionRol 3   isclite, /com.ibm.ws.console.security.forwardCmd.do:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:11:961 UTC] 00000098 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:17:11:962 UTC] 00000098 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@b6a474f0
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
[5/10/20 3:17:11:962 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:11:963 UTC] 00000098 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 
  Authorization Table [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AuthorizationTableImpl@8bef5cf4 ]
  Authorization Table contains [ 4 ] role assignments
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@535bf73f ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 1 ] special subjects
          Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.ServerImpl@93671b63 ]
            Name      [ Server ]
            Access ID [ Server ]
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@a26b0e0 ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@8feb60dd ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@9212975a ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects

                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:17:11:964 UTC] 00000098 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:17:11:964 UTC] 00000098 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:17:11:965 UTC] 00000098 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:17:11:966 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
[5/10/20 3:17:11:966 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:11:967 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:11:967 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:11:968 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:968 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:969 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:11:969 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:11:970 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:970 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:971 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:971 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:972 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:972 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:973 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:973 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:974 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:975 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:975 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:976 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:976 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:977 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:977 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:11:978 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:979 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:11:979 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:11:980 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:980 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:981 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:981 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:982 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:982 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:983 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:983 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:984 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:985 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:985 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:986 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:986 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:987 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:987 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:11:988 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:988 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:11:989 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:11:989 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:11:990 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:991 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:991 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:992 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:992 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:11:993 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:11:993 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:11:994 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:11:994 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:11:995 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:11:996 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:11:996 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:11:997 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:11:997 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:11:998 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:11:998 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:11:999 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:11:999 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:000 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:000 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:001 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:001 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:002 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:002 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:003 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:003 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:004 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:004 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:005 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:005 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:006 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:006 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:12:007 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:007 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:008 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:12:008 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:009 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:009 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:010 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:010 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:011 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:012 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:012 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:013 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:013 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:014 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:014 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:015 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:016 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:016 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:12:017 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:12:017 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:018 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:12:018 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:019 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:019 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:020 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:021 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:021 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:022 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:022 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:023 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:023 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:024 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:025 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:025 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:026 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:026 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:12:027 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:028 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:028 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:12:029 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:030 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:030 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:031 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:031 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:032 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:033 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:034 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:034 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:035 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:035 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:036 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:036 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:037 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:037 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:12:038 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:038 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:039 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:12:039 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:040 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:040 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:041 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:042 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:042 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:043 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:043 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:044 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:044 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:045 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:045 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:046 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:047 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:12:047 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:048 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:049 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:12:049 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:050 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:050 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:051 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:051 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:052 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:053 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:053 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:054 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:054 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:055 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:055 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:056 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:057 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:057 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:12:058 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:058 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:059 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:12:059 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:060 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:060 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:061 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:061 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:062 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:062 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:063 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:063 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:064 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:065 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:065 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:066 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:066 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:067 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:12:067 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:068 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:068 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:12:069 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:069 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:070 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:070 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:071 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:072 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:072 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:073 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:073 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:074 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:075 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:075 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:076 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:076 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:077 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:12:077 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:078 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:078 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:12:079 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:079 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:080 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:081 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:081 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:082 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:082 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:083 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:083 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:084 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:085 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:085 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:086 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:086 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:087 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:12:087 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:088 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:088 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:12:089 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:089 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:090 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:090 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:091 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:092 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:092 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:093 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:093 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:094 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:094 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:095 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:095 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:096 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:097 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:12:097 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:098 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:098 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:12:099 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:099 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:100 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:100 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:101 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:101 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:102 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:102 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:103 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:103 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:104 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:104 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:105 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:106 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:106 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:12:107 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:107 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:108 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:12:108 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:109 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:109 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:110 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:111 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:111 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:112 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:112 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:113 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:113 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:114 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:115 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:115 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:116 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:116 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:12:117 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:117 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:118 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:12:118 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:119 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:120 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:120 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:121 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:121 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:122 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:122 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:123 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:123 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:124 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:124 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:125 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:126 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:126 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:12:127 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:128 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:129 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:12:129 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:130 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:131 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:131 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:132 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:133 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:133 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:134 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:135 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:135 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:136 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:136 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:137 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:137 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:138 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:12:138 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:139 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:139 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:12:140 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:140 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:141 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:141 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:142 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:143 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:143 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:144 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:144 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:145 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:145 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:146 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:146 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:147 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:148 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:12:148 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:149 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:149 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:12:149 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:150 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:151 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:151 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:152 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:152 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:153 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:154 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:154 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:155 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:155 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:156 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:156 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:157 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:157 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:12:158 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:159 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:159 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:12:160 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:160 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:161 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:161 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:162 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:162 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:163 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:163 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:164 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:165 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:165 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:166 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:166 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:167 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:167 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:12:168 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:168 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:169 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:12:169 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:170 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:170 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:171 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:172 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:172 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:173 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:173 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:174 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:174 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:175 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:175 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:176 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:176 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:177 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:12:178 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:178 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:179 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:12:179 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:180 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:180 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:181 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:181 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:182 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:183 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:183 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:184 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:184 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:185 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:185 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:186 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:186 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:187 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:12:187 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:188 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:188 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:12:189 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:189 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:190 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:191 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:191 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:192 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:192 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:193 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:193 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:194 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:194 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:195 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:195 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:196 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:197 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:12:197 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:198 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:198 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:12:199 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:199 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:200 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:200 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:201 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:201 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:202 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:202 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:203 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:203 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:204 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:205 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:205 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:206 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:206 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:12:207 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:207 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:208 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:12:209 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:209 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:210 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:210 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:211 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:211 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:212 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:213 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:213 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:214 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:214 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:215 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:215 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:216 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:216 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:12:217 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:217 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:218 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:12:218 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:219 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:219 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:220 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:221 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:221 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:222 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:222 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:223 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:223 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:224 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:224 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:225 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:226 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:226 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:12:227 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:227 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:228 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:12:228 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:229 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:229 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:230 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:230 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:231 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:231 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:232 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:232 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:233 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:233 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:234 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:235 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:235 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:236 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:12:236 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:237 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:237 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:12:238 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:239 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:239 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:240 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:240 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:240 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:241 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:242 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:242 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:243 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:243 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:245 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:245 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:12:246 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:246 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:247 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:12:247 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:248 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:250 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:250 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:251 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:252 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:252 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:253 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:253 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:255 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:255 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:12:256 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:256 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:257 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:12:257 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:258 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:259 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:259 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:260 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:260 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:261 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:262 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:262 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:263 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:263 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:264 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:264 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:265 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:12:266 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:266 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:267 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:12:267 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:268 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:268 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:269 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:270 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:270 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:271 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:271 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:272 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:272 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:273 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:273 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:274 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:274 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:275 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:12:275 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:276 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:277 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:12:277 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:278 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:278 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:279 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:279 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:280 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:280 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:281 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:281 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:282 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:282 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:283 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:284 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:284 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:285 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:12:286 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:286 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:287 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:12:288 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:288 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:290 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:290 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:291 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:292 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:292 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:293 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:293 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:294 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:295 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:295 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:296 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:12:297 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:297 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:298 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:12:298 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:299 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:299 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:300 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:300 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:301 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:302 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:302 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:303 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:303 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:304 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:305 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:305 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:306 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:306 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:12:307 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:308 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:309 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:12:309 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:310 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:311 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:311 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:312 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:312 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:313 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:313 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:314 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:315 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:315 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:316 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:316 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:317 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:317 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:12:318 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:319 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:319 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:12:320 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:320 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:322 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:323 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:323 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:324 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:324 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:325 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:326 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:326 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:327 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:327 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:328 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:12:329 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:329 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:330 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:12:331 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:331 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:332 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:332 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:333 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:333 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:334 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:335 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:335 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:336 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:336 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:337 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:337 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:338 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:338 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:12:339 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:340 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:340 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:12:341 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:342 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:342 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:343 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:344 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:344 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:345 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:345 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:346 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:346 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:347 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:347 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:348 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:349 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:349 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:12:350 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:351 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:351 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:12:352 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:353 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:354 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:354 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:355 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:355 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:356 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:356 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:357 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:358 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:358 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:360 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:361 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:12:361 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:362 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:362 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:12:363 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:363 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:365 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:366 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:366 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:367 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:367 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:368 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:368 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:369 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:370 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:370 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:371 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:12:372 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:372 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:373 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:12:373 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:374 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:374 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:375 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:376 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:376 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:377 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:377 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:378 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:378 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:379 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:381 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:381 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:12:382 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:383 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:383 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:12:384 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:384 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:386 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:386 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:387 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:388 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:388 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:389 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:389 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:390 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:390 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:391 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:392 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:12:392 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:393 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:393 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:12:394 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:394 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:396 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:397 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:397 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:398 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:398 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:399 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:399 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:401 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:402 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:12:402 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:403 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:403 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:12:404 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:405 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:406 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:406 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:407 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:407 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:408 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:409 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:409 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:410 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:411 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:411 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:412 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:12:413 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:413 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:414 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:12:415 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:415 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:416 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:416 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:417 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:418 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:418 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:419 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:420 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:420 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:421 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:422 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:422 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:423 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:424 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:12:424 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:425 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:425 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:12:426 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:427 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:427 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:428 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:428 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:429 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:429 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:430 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:430 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:431 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:431 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:432 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:433 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:433 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:434 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:12:434 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:435 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:436 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:12:436 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:437 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:438 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:438 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:439 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:439 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:440 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:441 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:441 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:442 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:443 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:443 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:444 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:445 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:445 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:12:446 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:447 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:447 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:12:448 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:448 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:449 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:449 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:450 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:451 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:451 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:452 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:452 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:453 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:454 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:454 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:455 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:456 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:457 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:12:457 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:458 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:459 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:12:459 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:460 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:460 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:461 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:461 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:462 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:463 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:463 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:464 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:464 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:465 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:466 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:466 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:467 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:467 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:12:468 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:468 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:12:469 UTC] 00000098 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:12:470 UTC] 00000098 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:17:12:470 UTC] 00000098 WebCollaborat >  invokeTAI Entry
[5/10/20 3:17:12:471 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:17:12:471 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:17:12:472 UTC] 00000098 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:17:12:472 UTC] 00000098 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:17:12:473 UTC] 00000098 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:17:12:474 UTC] 00000098 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:17:12:474 UTC] 00000098 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:17:12:475 UTC] 00000098 WebCollaborat >  shouldPerformLogin Entry
                                 isclite
                                 true
                                 false
[5/10/20 3:17:12:475 UTC] 00000098 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:17:12:476 UTC] 00000098 WebCollaborat 3   webSecAttr=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:17:12:477 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:12:477 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/com.ibm.ws.console.security.forwardCmd.do]
[5/10/20 3:17:12:478 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:12:478 UTC] 00000098 TrustAssociat >  getInstance Entry
[5/10/20 3:17:12:479 UTC] 00000098 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:17:12:480 UTC] 00000098 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:17:12:480 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:17:12:481 UTC] 00000098 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@15ff211c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:12:481 UTC] 00000098 WebAuthentica 3   challengeType = FORM Authorization header = null
[5/10/20 3:17:12:482 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:12:483 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:12:483 UTC] 00000098 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:17:12:484 UTC] 00000098 WebAuthentica >  handleSSO Entry
[5/10/20 3:17:12:485 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:17:12:485 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:17:12:486 UTC] 00000098 WebAuthentica 3   Attempting primary cookie validation for: LtpaToken2
[5/10/20 3:17:12:486 UTC] 00000098 WebAuthentica >  validateCookie Entry
                                 [Ljavax.servlet.http.Cookie;@e5de6760
                                 LtpaToken2
[5/10/20 3:17:12:487 UTC] 00000098 CookieHelper  >  getCookieValues Entry
                                 LtpaToken2
[5/10/20 3:17:12:487 UTC] 00000098 CookieHelper  <  getCookieValues Exit
                                 [acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==]
[5/10/20 3:17:12:488 UTC] 00000098 WebAuthentica >  validate Entry
[5/10/20 3:17:12:489 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:12:489 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:12:490 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:490 UTC] 00000098 ContextManage >  login Entry
                                 defaultWIMFileBasedRealm
                                 [B@b1f8bdec
                                 system.WEB_INBOUND
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@aec799de
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@64efca0
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
                                 <null>
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:17:12:491 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:12:491 UTC] 00000098 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:17:12:492 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:12:493 UTC] 00000098 ContextManage 3   Web inbound login config: system.WEB_INBOUND
[5/10/20 3:17:12:493 UTC] 00000098 ContextManage 3   Looking for opaque token on the thread before Subject cache lookup.
[5/10/20 3:17:12:494 UTC] 00000098 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 [B@b1f8bdec
                                 <null>
[5/10/20 3:17:12:495 UTC] 00000098 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:17:12:495 UTC] 00000098 ContextManage 3   Looking for subject from cache using token as lookup.
[5/10/20 3:17:12:496 UTC] 00000098 AuthCache     >  getSubject Entry
                                     69c020d5 729db5de 912b6d15 04965053 42d78026 c921f5f0 c6925a39 97a38ff4 
    b0734e79 0cb65c85 e0d348bf 3f505529 c1c49842 7b4560f2 9d00a7ad 10b6465a 
    ad8fc2e7 22ddb609 39575683 805946a5 151bcd15 4c359985 6ed1739c 8f79e0bd 
    c1509104 98661ec3 7b3cc7e3 ae518af1 1de892e7 8a0f7752 c0f41b90 4124efff 
    2f76eff6 14dfe87f 531c179e 8694c2ac cea813c2 80482c98 f1a2f191 d93f7e12 
    acb5f67a 2c5262ce 1c2f1426 2a858026 76e2da06 95faf81d 4dc14eed 449bf1e3 
    bbc8dc8b 6da0b373 a6da1fd2 3a461774 27a6e650 75e902e8 ad6369b1 a1695d73 
    be25a3a7 a1d7aee6 25df500e 055af3d2 1f5024ed 9530d079 d84f3a42 03b227e2 
    676d2dbc 09b5d0cf c376ed37 67ca5676 8f031a6d 3a715e6f c6bcc02a d907c2d3 
    87ad87d7 3af0053d a38fb47c 8ca29802 6ad7c611 00e17c13 5d7d66cf 9fb66176 
    552794e6 377a7a9a f5b53d1d 521a9f30 d01c6b35 5e3e0402 dbfe66c1 df18860c 
    c0b439e9 0a3197e5 0d41ccab 4db573f5 1edf6ad2 40d3d01a 913cc154 b39dcf91 
    3d7d8682 6e6cdac2 2a4fb7c6 890f9fe3 adfc23d8 7c32278a 12c1392f 94e08b58 
    f8bbf189 a3c03722 d364fdd1 1288dc1b e63c146f 30bf70d5 18064c14 64a102a6 
    2677ebfe cd07c178 4e52c8f8 282e6a9f a95e62ad e9b87b7c ea4a0bf1 93405858 
    a4ca9142 8e769219 90516b63 2fe5b56c
[5/10/20 3:17:12:496 UTC] 00000098 AuthCache     >  getSubject Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:12:497 UTC] 00000098 Cache         >  get Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:12:497 UTC] 00000098 Cache         <  get Exit
                                 com.ibm.ws.security.auth.CacheObject@93d7ea30
[5/10/20 3:17:12:499 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:12:499 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:12:500 UTC] 00000098 ContextManage >  isTokenMatch Entry
[5/10/20 3:17:12:500 UTC] 00000098 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:17:12:501 UTC] 00000098 SubjectHelper 3   Found default SSO token.
[5/10/20 3:17:12:502 UTC] 00000098 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:17:12:502 UTC] 00000098 ContextManage <  isTokenMatch: true Exit
[5/10/20 3:17:12:503 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:12:503 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:12:504 UTC] 00000098 AuthCache     >  getInstance Entry
[5/10/20 3:17:12:504 UTC] 00000098 AuthCache     3   getInstance SecurityConfigManager instance com.ibm.ws.security.config.SecurityConfigManagerImpl@dec4f4c1
[5/10/20 3:17:12:505 UTC] 00000098 AuthCache     3   getInstance using domainId admin
[5/10/20 3:17:12:506 UTC] 00000098 AuthCache     3   getInstance found AuthCache in instanceCache AuthCache: -1328712432 domainId: admin
[5/10/20 3:17:12:506 UTC] 00000098 AuthCache     <  getInstance AuthCache: -1328712432 domainId: admin Exit
[5/10/20 3:17:12:507 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:12:507 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:12:508 UTC] 00000098 WSCredentialT >  checkCushionValidityOfAllTokens Entry
                                 600000
                                 false
[5/10/20 3:17:12:508 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:12:509 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087520000
[5/10/20 3:17:12:509 UTC] 00000098 WSCredentialI >  isForwardable Entry
[5/10/20 3:17:12:510 UTC] 00000098 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:17:12:510 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:12:511 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:12:512 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:512 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:12:513 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:12:513 UTC] 00000098 WSCredentialT 3   Total number of Subject tokens to check: 3
[5/10/20 3:17:12:514 UTC] 00000098 WSCredentialT 3   Time remaining is 6287 seconds, for token: com.ibm.ws.security.token.AuthenticationTokenImpl
[5/10/20 3:17:12:514 UTC] 00000098 WSCredentialT 3   Time remaining is 6284 seconds, for token: com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:17:12:515 UTC] 00000098 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:12:00 UTC 2020
[5/10/20 3:17:12:515 UTC] 00000098 WSCredentialT 3   Time remaining is 6287 seconds, for token: com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:17:12:516 UTC] 00000098 WSCredentialT <  checkCushionValidityOfAllTokens -> true Exit
[5/10/20 3:17:12:517 UTC] 00000098 ContextManage 3   login(realm, token, . . .): is subject valid? true
[5/10/20 3:17:12:517 UTC] 00000098 ContextManage <  login(realm, token, authMech, . . .) Exit
[5/10/20 3:17:12:518 UTC] 00000098 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:17:12:518 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:519 UTC] 00000098 WebAuthentica >  checkSubject  Entry
[5/10/20 3:17:12:519 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:520 UTC] 00000098 WebAuthentica <  checkSubject : true Exit
[5/10/20 3:17:12:521 UTC] 00000098 WebAuthentica <  validate Exit
[5/10/20 3:17:12:521 UTC] 00000098 WebAuthentica 3   validateCookie the LTPA token was valid.
[5/10/20 3:17:12:522 UTC] 00000098 WebAuthentica <  validateCookie successful ltpa token validation of acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA== Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:12:522 UTC] 00000098 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 FORM
[5/10/20 3:17:12:523 UTC] 00000098 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: FORM
[5/10/20 3:17:12:524 UTC] 00000098 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:17:12:524 UTC] 00000098 WebAuthentica <  handleSSO: found cookie Exit
[5/10/20 3:17:12:525 UTC] 00000098 WebAuthentica >  restorePostParams Entry
[5/10/20 3:17:12:525 UTC] 00000098 WebAuthentica 3    method : GET URL:/ibm/console/com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:12:526 UTC] 00000098 WebAuthentica 3   postParamSaveMethod string: Cookie
[5/10/20 3:17:12:526 UTC] 00000098 WebAuthentica 3   postParamSaveMethod value: 0
[5/10/20 3:17:12:527 UTC] 00000098 WebAuthentica <  restorePostParams Exit
[5/10/20 3:17:12:528 UTC] 00000098 WebAuthentica <  authenticate 1 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:12:528 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:17:12:529 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:529 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:12:530 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:12:531 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:12:531 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:532 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:12:532 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:12:533 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:12:533 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:12:534 UTC] 00000098 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:12:534 UTC] 00000098 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:12:535 UTC] 00000098 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:17:12:536 UTC] 00000098 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:17:12:536 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:12:537 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:17:12:537 UTC] 00000098 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:12:538 UTC] 00000098 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:17:12:538 UTC] 00000098 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:17:12:539 UTC] 00000098 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:12:540 UTC] 00000098 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:17:12:540 UTC] 00000098 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:17:12:540 UTC] 00000098 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:17:12:541 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:12:542 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:12:543 UTC] 00000098 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:17:12:543 UTC] 00000098 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:17:12:544 UTC] 00000098 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:17:12:544 UTC] 00000098 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:17:12:545 UTC] 00000098 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:17:12:545 UTC] 00000098 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:17:12:546 UTC] 00000098 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:17:12:546 UTC] 00000098 AuthzPropToke 3   Expiration set to: Sun May 10 05:17:12 UTC 2020
[5/10/20 3:17:12:547 UTC] 00000098 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:17:12:547 UTC] 00000098 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:17:12:548 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:12:549 UTC] 00000098 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:17:12:549 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:12:548 UTC] 00000098 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:12:550 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:12:551 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:12:550 UTC] 00000098 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:12:552 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:17:12:553 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:12:553 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:12:554 UTC] 00000098 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:17:12:554 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:12:555 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:12:555 UTC] 00000098 WebCollaborat >  validSecAttrs Entry
                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 false
                                 isclite
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@aec799de
                                 admin_host
                                 false
[5/10/20 3:17:12:556 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:12:556 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:12:557 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:12:557 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:12:558 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:12:558 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
[5/10/20 3:17:12:560 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:12:560 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:12:561 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:12:561 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:562 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:562 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:563 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:12:563 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:564 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:564 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:565 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:566 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:567 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:567 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:568 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:568 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:569 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:569 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:570 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:571 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:12:571 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:572 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:573 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:12:573 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:574 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:574 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:575 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:575 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:576 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:576 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:577 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:577 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:578 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:578 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:579 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:580 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:580 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:581 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:12:581 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:582 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:582 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:12:583 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:583 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:585 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:585 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:586 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:587 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:587 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:588 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:588 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:590 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:590 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:12:591 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:591 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:592 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:12:593 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:593 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:594 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:594 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:595 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:595 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:596 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:596 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:597 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:597 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:598 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:600 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:600 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:601 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:12:601 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:602 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:602 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:12:603 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:604 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:605 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:605 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:606 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:606 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:607 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:607 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:608 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:608 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:609 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:609 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:610 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:611 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:12:611 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:12:612 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:613 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:12:613 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:614 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:614 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:615 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:615 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:616 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:617 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:617 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:618 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:618 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:619 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:619 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:620 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:621 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:621 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:12:622 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:622 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:623 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:12:623 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:624 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:624 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:625 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:626 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:627 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:627 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:628 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:628 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:629 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:630 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:630 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:631 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:12:632 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:632 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:633 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:12:633 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:634 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:635 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:636 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:636 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:637 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:637 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:638 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:639 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:639 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:641 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:642 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:12:642 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:643 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:643 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:12:644 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:644 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:645 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:645 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:646 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:646 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:647 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:648 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:648 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:649 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:649 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:650 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:651 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:651 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:12:652 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:652 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:653 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:12:654 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:654 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:655 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:655 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:656 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:656 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:657 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:658 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:658 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:659 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:659 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:661 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:661 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:12:662 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:662 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:663 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:12:663 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:664 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:664 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:665 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:666 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:666 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:667 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:667 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:668 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:668 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:669 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:669 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:670 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:671 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:12:671 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:672 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:672 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:12:673 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:674 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:674 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:675 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:676 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:677 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:677 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:678 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:679 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:679 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:681 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:681 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:12:682 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:682 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:683 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:12:683 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:684 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:685 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:685 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:686 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:686 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:687 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:687 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:688 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:688 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:689 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:690 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:690 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:691 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:691 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:12:692 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:692 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:693 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:12:693 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:694 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:695 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:695 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:696 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:696 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:697 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:698 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:698 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:699 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:699 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:700 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:701 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:701 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:702 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:12:702 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:703 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:703 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:12:704 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:705 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:705 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:706 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:706 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:707 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:707 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:708 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:709 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:709 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:710 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:710 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:711 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:712 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:712 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:12:713 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:713 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:714 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:12:714 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:715 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:716 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:716 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:717 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:718 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:718 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:719 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:719 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:720 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:720 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:721 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:721 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:722 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:722 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:12:723 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:723 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:724 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:12:724 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:725 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:725 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:726 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:727 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:727 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:728 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:728 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:729 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:729 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:730 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:730 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:731 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:731 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:732 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:12:733 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:733 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:734 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:12:734 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:735 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:735 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:737 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:737 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:737 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:738 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:739 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:739 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:740 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:740 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:741 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:742 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:12:742 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:743 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:743 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:12:744 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:745 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:745 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:746 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:746 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:747 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:747 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:748 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:748 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:749 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:750 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:750 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:751 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:751 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:752 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:12:752 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:753 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:753 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:12:754 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:755 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:755 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:756 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:757 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:757 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:758 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:758 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:759 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:760 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:760 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:761 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:761 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:762 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:762 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:12:763 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:763 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:764 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:12:764 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:765 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:766 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:766 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:767 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:767 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:768 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:768 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:769 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:769 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:770 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:770 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:772 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:772 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:12:773 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:773 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:774 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:12:774 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:775 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:775 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:776 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:777 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:777 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:778 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:778 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:779 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:780 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:780 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:781 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:781 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:782 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:782 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:12:783 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:783 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:784 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:12:785 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:785 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:786 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:786 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:787 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:787 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:788 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:789 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:789 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:790 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:790 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:791 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:791 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:792 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:792 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:12:793 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:793 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:794 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:12:795 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:795 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:796 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:797 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:798 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:798 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:799 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:799 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:800 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:800 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:801 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:802 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:802 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:803 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:12:803 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:804 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:804 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:12:805 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:805 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:806 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:807 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:807 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:808 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:808 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:809 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:809 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:810 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:811 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:811 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:812 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:812 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:813 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:12:813 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:814 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:814 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:12:815 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:815 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:816 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:817 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:817 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:818 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:818 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:819 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:819 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:820 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:821 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:821 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:822 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:822 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:823 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:12:823 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:824 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:824 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:12:825 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:825 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:826 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:826 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:827 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:827 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:828 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:828 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:829 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:829 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:830 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:831 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:831 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:832 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:832 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:12:833 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:833 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:834 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:12:834 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:835 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:836 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:837 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:838 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:838 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:839 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:839 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:840 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:840 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:841 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:841 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:842 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:843 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:12:843 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:844 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:844 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:12:845 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:845 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:846 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:846 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:847 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:847 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:848 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:849 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:849 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:850 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:850 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:851 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:851 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:852 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:852 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:12:853 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:854 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:854 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:12:855 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:855 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:856 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:856 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:857 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:858 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:858 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:859 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:859 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:860 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:860 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:861 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:861 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:862 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:862 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:12:863 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:864 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:864 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:12:865 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:865 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:866 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:866 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:867 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:867 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:868 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:868 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:869 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:869 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:870 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:870 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:871 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:871 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:872 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:12:872 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:873 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:873 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:12:875 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:875 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:876 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:876 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:877 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:877 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:878 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:878 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:879 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:879 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:880 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:880 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:881 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:881 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:882 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:12:882 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:883 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:884 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:12:884 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:885 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:885 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:886 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:886 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:887 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:887 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:888 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:889 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:889 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:890 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:890 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:891 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:891 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:892 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:12:892 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:893 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:893 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:12:894 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:895 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:895 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:896 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:896 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:897 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:897 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:898 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:899 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:899 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:900 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:900 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:901 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:901 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:902 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:12:902 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:903 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:903 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:12:904 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:904 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:905 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:906 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:906 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:907 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:907 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:908 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:908 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:909 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:909 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:910 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:911 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:911 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:912 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:12:912 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:913 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:914 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:12:914 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:915 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:916 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:916 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:917 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:917 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:918 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:918 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:919 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:919 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:920 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:921 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:921 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:922 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:922 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:12:923 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:924 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:924 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:12:925 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:925 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:926 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:927 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:928 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:928 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:929 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:929 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:930 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:930 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:931 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:931 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:932 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:933 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:12:933 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:934 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:934 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:12:935 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:936 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:936 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:937 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:937 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:938 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:938 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:939 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:939 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:940 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:940 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:941 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:941 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:942 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:943 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:12:943 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:944 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:944 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:12:945 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:945 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:946 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:947 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:947 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:948 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:948 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:949 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:949 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:950 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:950 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:951 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:951 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:952 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:952 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:12:953 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:954 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:955 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:12:955 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:956 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:956 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:957 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:957 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:958 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:958 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:959 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:959 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:960 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:961 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:961 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:962 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:962 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:963 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:12:963 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:964 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:964 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:12:965 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:965 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:966 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:966 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:967 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:967 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:968 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:969 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:969 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:970 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:970 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:971 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:971 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:972 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:972 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:12:973 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:974 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:974 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:12:975 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:975 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:976 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:976 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:977 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:977 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:978 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:978 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:979 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:980 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:980 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:981 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:981 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:982 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:982 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:12:983 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:983 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:984 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:12:984 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:985 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:986 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:986 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:987 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:987 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:988 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:988 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:989 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:989 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:12:990 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:990 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:991 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:991 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:992 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:12:993 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:12:994 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:12:994 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:12:995 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:12:995 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:12:996 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:12:996 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:12:997 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:12:997 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:12:998 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:12:998 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:12:999 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:12:999 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:000 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:000 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:001 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:002 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:002 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:13:003 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:003 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:13:004 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:13:004 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:13:005 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:005 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:006 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:006 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:007 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:13:008 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:13:008 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:13:009 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:13:009 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:010 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:010 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:011 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:011 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:012 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:13:013 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:013 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:13:014 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:13:014 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:13:015 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:016 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:016 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:017 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:017 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:13:018 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:13:018 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:13:019 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:13:019 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:020 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:021 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:021 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:022 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:022 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:13:023 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:023 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:13:024 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:13:024 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:13:025 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:026 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:026 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:027 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:027 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:13:028 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:13:028 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:13:029 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:13:029 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:030 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:030 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:031 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:032 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:033 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:13:033 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:034 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:13:034 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:13:035 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:13:036 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:036 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:037 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:037 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:038 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:13:038 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:13:039 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:13:039 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:13:040 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:040 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:041 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:041 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:042 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:043 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:13:043 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:044 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:13:044 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:13:045 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:13:045 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:046 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:047 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:047 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:13:048 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:13:048 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:13:049 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:13:049 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:13:050 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:13:051 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:13:051 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:13:052 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:13:052 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:13:053 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:13:054 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:13:054 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:13:055 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/com.ibm.ws.console.security.forwardCmd.do]
[5/10/20 3:17:13:055 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:13:056 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:13:056 UTC] 00000098 WebCollaborat 3    List of required roles for uri /com.ibm.ws.console.security.forwardCmd.do is: 
[5/10/20 3:17:13:057 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:13:057 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:13:058 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:13:058 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:13:059 UTC] 00000098 WebCollaborat 3    required role: nobody
[5/10/20 3:17:13:059 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:13:060 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:13:060 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:13:061 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:13:061 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:13:062 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:13:062 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:13:063 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:13:064 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:13:064 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:13:065 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:13:065 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:13:066 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:13:066 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:13:067 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /com.ibm.ws.console.security.forwardCmd.do: false
[5/10/20 3:17:13:067 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /com.ibm.ws.console.security.forwardCmd.do are: com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:13:068 UTC] 00000098 WebCollaborat 3   URI -  /com.ibm.ws.console.security.forwardCmd.do.GET is protected
[5/10/20 3:17:13:068 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:13:069 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:069 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:070 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:13:071 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:13:072 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:13:072 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:13:073 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:13:073 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:13:074 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:13:075 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:13:075 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:13:076 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:13:076 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:13:077 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:13:077 UTC] 00000098 WebCollaborat 3   required roles: nobody
[5/10/20 3:17:13:078 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:13:078 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:13:079 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:13:079 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:13:080 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:13:080 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:13:081 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@b6a474f0
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:081 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:13:082 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:13:083 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
                                 nobody
[5/10/20 3:17:13:083 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:084 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:13:084 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:13:085 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:085 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:13:086 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:086 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:087 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:088 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:13:088 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:089 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:089 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:13:090 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:091 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:091 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:092 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:13:093 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:13:093 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:13:094 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:13:094 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:101 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:103 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:104 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:105 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:106 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:108 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:13:108 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:109 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:110 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:111 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:111 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:112 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:13:113 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:13:113 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:13:114 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:13:115 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:13:115 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:13:116 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:116 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:117 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:13:118 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:13:118 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:13:119 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:13:119 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:13:120 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:120 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:121 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:121 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:122 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:123 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:13:124 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:13:124 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:13:125 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:13:125 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /com.ibm.ws.console.security.forwardCmd.do succeeded. 
[5/10/20 3:17:13:126 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@d316ad75
[5/10/20 3:17:13:126 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@d316ad75
[5/10/20 3:17:13:127 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:13:128 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:13:128 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:129 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@15ff211c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 action
                                 isclite
[5/10/20 3:17:13:129 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:13:130 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:13:130 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:13:131 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:13:131 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:13:132 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:13:132 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:13:133 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:133 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:13:134 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:13:134 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:13:135 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:135 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d3e79241
[5/10/20 3:17:13:136 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d3e79241
[5/10/20 3:17:13:137 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@e43a7cbd
                                 action
[5/10/20 3:17:13:137 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@e43a7cbd
                                 action
[5/10/20 3:17:13:138 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:13:138 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:13:139 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:139 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:140 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:140 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:13:141 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:141 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:13:142 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:13:142 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@187ea9ba
[5/10/20 3:17:13:143 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:144 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:144 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:145 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:145 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:146 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:146 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:147 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:147 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:148 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:148 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:149 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:150 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:150 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:151 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:151 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:152 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:152 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:153 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:153 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:154 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:154 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:155 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:156 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:156 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:157 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:158 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:158 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:159 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:159 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:160 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:160 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:161 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:161 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:162 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:163 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:163 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:164 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:164 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:165 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:166 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:166 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:167 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:167 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:168 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:169 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:169 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:170 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:170 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:171 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:171 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:172 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:172 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:173 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:174 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:174 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:175 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:175 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:176 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:177 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:177 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:178 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:178 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:179 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:179 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:180 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:180 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:181 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:181 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:182 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:183 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:183 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:184 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:184 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:185 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:186 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:186 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:187 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:187 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:188 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:188 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:189 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:189 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:190 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:190 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:191 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:191 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:192 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:192 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:193 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:193 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:194 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:194 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:195 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:196 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:196 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:197 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:197 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:198 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:198 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:199 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:199 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:201 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:202 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:202 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:203 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:204 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:204 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:205 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:205 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:206 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:206 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:207 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:207 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:208 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:209 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:209 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:210 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:211 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:211 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:212 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:213 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:213 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:214 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:214 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:215 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:215 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:216 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:217 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:217 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:218 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:218 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:219 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:219 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:220 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:220 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:221 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:221 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:222 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:222 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:223 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:224 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:224 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:225 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:225 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:226 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:227 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:227 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:228 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:228 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:229 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:229 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:230 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:230 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:231 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:231 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:232 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:232 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:233 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:233 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:234 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:234 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:235 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:236 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:236 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:237 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:237 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:238 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:243 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:244 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:244 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:245 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:246 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:246 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:247 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:247 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:248 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:249 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:249 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:258 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:259 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:260 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:260 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:261 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:261 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:262 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:262 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:263 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:263 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:264 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:265 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:266 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:267 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:267 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:268 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:268 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:269 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:270 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:270 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:271 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:272 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:274 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:274 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:275 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:275 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:276 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:276 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:277 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:277 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:278 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:279 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:279 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:280 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:280 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:281 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:281 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:282 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:282 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:283 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:283 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:284 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:284 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:285 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:286 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:286 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:287 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:287 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:288 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:288 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:289 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:289 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:290 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:290 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:291 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:292 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:292 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:293 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:294 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:294 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:295 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:296 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:296 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:297 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:297 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:298 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:299 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:299 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:300 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:301 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:302 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:302 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:303 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:303 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:304 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:305 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:305 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:306 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:306 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:307 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:308 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:308 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:309 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:309 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:310 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:311 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:311 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:312 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:312 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:313 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:314 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:314 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:315 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:315 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:316 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:316 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:317 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:317 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:318 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:318 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:319 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:320 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:320 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:321 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:321 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:331 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:332 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:333 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:334 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:13:335 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:13:336 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:13:337 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:337 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:338 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:13:339 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:339 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:13:340 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:13:340 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:13:341 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:341 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:342 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:343 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:343 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:344 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:344 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:345 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:345 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:346 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:346 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:347 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:347 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:348 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@2b999446;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:13:348 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:349 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:13:349 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:350 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:350 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:13:351 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:352 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:352 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:353 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:13:354 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:13:354 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:13:355 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:13:355 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:356 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:356 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:357 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:357 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:358 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:358 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:13:359 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:359 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:360 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:361 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:361 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:362 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:13:362 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:13:363 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:13:364 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:13:364 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:13:365 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:13:365 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:366 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:366 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:13:367 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:13:368 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:13:368 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:13:369 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:13:369 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:370 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:370 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:371 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:371 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:372 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:13:373 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:13:373 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:13:374 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:13:374 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:13:375 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:13:375 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:13:376 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:376 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:377 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:13:377 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:378 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:13:379 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:13:379 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:13:380 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:380 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:381 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:381 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:382 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:382 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:383 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:383 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:384 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:384 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:385 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:386 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:386 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:387 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@b9a614cb;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:13:387 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:388 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:13:388 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:13:389 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:389 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:13:390 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:390 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:391 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:391 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:13:392 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:13:393 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:13:393 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:13:394 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:13:394 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:13:395 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:396 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:396 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:397 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:397 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:13:398 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:398 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:399 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:399 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:400 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:400 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:13:401 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:13:401 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:13:402 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:13:402 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:13:403 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:13:403 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:404 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:405 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:13:405 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:13:406 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:13:406 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:13:407 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:13:407 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:13:408 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:408 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:409 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:410 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:13:410 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:13:411 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:13:412 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:13:412 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:13:413 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:414 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:414 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:415 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:415 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:416 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:416 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:417 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:417 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:418 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:418 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:419 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:420 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:420 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:421 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:424 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:425 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:426 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:426 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:427 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:428 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:428 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:429 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:429 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:430 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:430 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:431 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:431 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:432 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:433 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:434 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:434 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:435 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:436 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:437 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:437 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:438 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:439 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:439 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:440 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:440 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:441 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:13:441 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:13:442 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:13:443 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:13:444 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:13:444 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:13:445 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:13:445 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:13:446 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:446 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:447 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:447 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:448 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:449 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:449 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:450 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:450 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:451 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:451 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:452 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:453 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:454 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:454 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:455 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:455 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:456 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:457 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:457 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:458 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:459 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:459 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:460 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:460 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:461 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:462 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:462 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:463 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:463 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:464 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:464 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:465 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:466 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:466 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:467 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:467 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:468 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:468 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:469 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:469 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:470 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:470 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:471 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:472 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:472 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:473 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:473 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:475 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:476 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:476 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:477 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:477 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:478 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:478 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:479 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:480 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:481 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:481 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:482 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:482 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:483 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:483 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:484 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:485 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:485 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:486 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:486 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:487 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:487 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:488 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:489 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:489 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:490 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:490 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:491 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:492 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:492 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:493 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:493 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:494 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:494 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:495 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:495 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:496 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:496 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:497 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:498 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:498 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:499 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:499 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:500 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:500 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:501 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:502 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:502 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:503 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:503 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:504 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:504 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:505 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:505 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:506 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:506 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:507 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:508 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:508 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:509 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:509 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:510 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:510 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:511 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:511 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:512 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:512 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:513 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:513 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:514 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:515 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:515 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:516 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:516 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:517 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:517 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:518 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:519 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:520 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:520 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:521 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:521 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:522 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:523 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:523 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:524 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:524 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:525 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:525 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:526 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:526 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:527 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:528 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:528 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:529 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:529 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:530 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:530 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:531 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:531 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:532 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:533 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:533 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:534 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:535 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:535 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:536 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:536 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:537 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:538 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:538 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:539 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:539 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:540 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:540 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:541 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:541 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:542 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:543 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:543 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:544 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:544 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:545 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:545 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:546 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:547 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:547 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:548 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:548 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:549 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:549 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:550 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:550 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:551 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:551 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:552 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:553 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:553 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:554 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:554 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:555 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:555 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:556 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:556 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:557 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:557 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:558 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:559 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:559 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:560 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:561 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:562 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:562 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:563 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:563 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:564 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:564 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:565 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:566 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:566 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:567 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:567 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:568 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:568 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:569 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:570 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:570 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:571 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:571 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:572 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:572 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:573 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:573 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:574 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:574 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:575 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:575 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:576 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:577 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:577 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:578 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:578 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:579 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:579 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:580 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:581 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:581 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:582 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:582 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:583 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:583 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:584 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:585 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:585 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:586 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:586 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:587 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:588 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:588 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:589 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:589 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:590 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:590 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:591 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:592 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:593 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:593 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:594 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:595 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:595 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:596 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:596 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:597 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:613 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:615 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:617 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:618 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:619 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:619 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:620 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:621 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:622 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:622 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:623 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:623 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:624 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:625 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:625 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:626 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:626 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:627 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:627 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:628 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:629 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:629 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:630 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:630 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:631 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:631 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:632 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:632 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:633 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:633 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:634 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:635 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:635 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:636 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:636 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:637 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:637 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:638 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:639 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:639 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:640 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:640 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:641 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:642 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:642 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:643 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:643 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:644 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:644 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:645 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:646 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:646 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:647 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:647 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:648 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:648 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:649 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:649 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:650 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:651 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:651 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:652 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:652 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:653 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:653 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:654 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:655 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:656 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:656 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:657 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:658 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:658 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:659 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:659 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:660 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:661 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:661 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:662 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:662 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:663 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:664 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:664 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:665 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:665 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:666 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:667 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:667 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:668 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:668 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:669 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:670 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:670 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:671 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:671 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:672 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:672 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:673 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:673 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:674 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:675 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:675 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:676 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:676 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:677 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:678 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:678 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:679 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:679 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:680 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:681 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:681 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:682 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:682 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:683 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:683 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:684 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:684 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:685 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:686 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:686 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:687 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:687 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:688 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:689 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:689 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:690 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:690 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:691 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:691 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:692 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:693 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:693 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:694 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:694 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:695 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:695 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:696 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:697 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:698 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:698 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:699 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:700 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:700 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:701 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:701 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:702 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:703 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:703 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:704 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:704 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:705 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:706 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:706 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:707 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:707 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:708 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:708 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:709 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:710 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:710 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:711 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:711 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:712 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:712 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:713 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:714 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:714 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:715 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:715 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:716 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:716 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:717 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:717 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:718 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:719 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:719 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:720 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:720 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:721 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:722 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:722 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:723 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:723 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:724 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:724 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:725 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:725 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:726 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:727 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:727 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:728 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:728 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:729 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:730 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:730 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:731 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:731 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:732 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:732 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:733 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:733 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:734 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:734 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:735 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:735 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:736 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:737 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:737 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:738 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:739 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:739 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:740 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:741 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:741 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:742 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:742 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:743 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:743 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:744 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:745 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:745 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:746 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:746 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:747 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:747 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:748 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:749 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:749 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:750 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:750 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:751 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:751 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:752 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:753 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:753 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:754 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:754 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:755 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:755 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:756 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:757 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:757 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:758 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:758 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:759 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:760 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:760 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:761 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:762 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:762 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:763 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:763 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:764 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:764 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:765 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:766 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:766 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:767 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:767 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:768 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:768 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:769 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:770 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:770 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:771 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:771 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:772 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:773 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:773 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:774 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:774 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:775 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:775 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:776 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:777 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:777 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:778 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:778 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:779 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:779 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:780 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:781 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:781 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:782 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:783 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:783 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:784 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:784 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:785 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:785 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:786 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:787 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:787 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:788 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:788 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:789 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:789 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:790 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:791 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:791 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:792 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:792 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:793 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:793 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:794 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:794 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:795 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:795 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:796 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:796 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:797 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:798 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:798 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:799 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:799 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:800 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:801 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:801 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:802 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:802 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:803 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:803 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:804 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:804 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:805 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:806 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:806 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:808 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:809 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:809 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:810 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:810 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:811 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:811 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:812 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:812 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:813 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:814 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:814 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:815 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:815 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:816 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:816 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:817 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:818 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:818 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:819 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:819 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:820 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:820 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:821 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:822 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:822 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:823 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:823 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:824 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:825 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:825 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:826 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:826 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:827 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:827 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:828 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:829 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:829 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:830 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:830 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:831 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:831 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:832 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:832 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:833 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:833 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:834 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:835 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:835 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:836 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:836 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:837 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:837 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:838 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:838 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:839 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:840 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:840 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:841 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:841 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:842 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:842 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:843 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:844 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:844 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:845 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:845 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:846 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:846 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:847 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:848 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:848 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:849 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:849 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:850 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:851 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:851 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:852 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:852 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:853 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:853 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:854 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:855 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:855 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:856 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:856 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:857 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:858 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:858 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:859 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:860 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:860 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:861 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:861 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:862 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:863 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:863 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:864 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:864 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:865 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:866 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:866 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:867 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:867 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:868 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:868 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:869 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:869 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:870 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:871 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:871 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:872 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:872 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:873 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:873 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:874 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:874 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:875 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:876 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:876 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:877 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:878 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:878 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:879 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:879 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:880 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:880 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:881 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:881 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:882 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:883 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:883 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:884 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:884 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:885 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:885 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:886 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:887 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:887 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:888 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:888 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:889 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:890 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:890 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:891 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:891 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:892 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:892 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:893 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:893 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:894 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:895 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:895 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:896 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:896 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:897 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:897 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:898 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:898 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:899 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:899 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:900 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:901 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:901 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:902 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:902 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:903 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:904 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:905 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:905 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:906 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:906 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:907 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:907 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:908 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:909 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:909 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:910 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:910 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:911 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:912 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:912 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:913 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:913 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:914 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:914 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:915 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:915 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:916 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:916 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:917 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:918 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:918 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:919 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:919 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:920 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:920 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:921 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:922 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:922 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:923 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:924 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:924 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:925 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:925 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:926 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:927 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:927 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:928 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:928 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:929 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:930 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:930 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:931 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:931 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:932 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:932 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:933 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:934 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:934 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:935 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:935 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:936 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:936 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:937 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:937 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:938 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:939 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:939 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:940 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:940 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:941 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:941 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:942 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:943 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:943 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:944 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:946 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:946 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:947 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:947 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:948 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:948 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:949 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:950 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:950 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:951 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:951 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:952 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:953 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:953 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:954 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:954 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:955 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:955 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:956 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:956 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:957 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:958 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:958 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:959 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:959 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:960 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:961 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:961 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:962 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:962 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:963 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:963 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:964 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:965 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:965 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:967 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:967 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:968 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:968 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:969 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:969 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:970 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:971 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:971 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:972 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:972 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:973 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:974 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:974 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:975 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:975 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:976 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:976 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:977 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:978 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:978 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:979 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:979 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:980 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:980 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:981 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:982 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:982 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:983 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:983 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:984 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:985 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:985 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:986 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:986 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:987 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:987 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:988 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:988 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:13:989 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:13:990 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:13:990 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:13:991 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:13:991 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:13:993 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:993 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:994 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:994 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:13:995 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:13:995 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:13:996 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:997 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:13:997 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:998 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:13:998 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:13:999 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:13:999 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:000 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:000 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:001 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:002 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:002 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:003 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:003 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:004 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:005 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:005 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:006 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:006 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:007 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:007 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:008 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:009 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:009 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:010 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:010 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:011 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:011 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:012 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:012 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:013 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:014 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:014 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:015 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:016 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:016 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:017 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:017 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:018 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:019 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:019 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:020 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:020 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:021 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:021 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:022 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:022 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:023 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:024 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:024 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:025 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:025 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:026 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:027 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:027 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:028 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:028 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:029 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:030 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:030 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:031 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:031 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:032 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:033 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:033 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:034 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:034 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:035 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:036 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:036 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:037 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:037 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:038 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:038 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:039 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:040 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:040 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:041 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:041 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:042 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:042 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:043 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:044 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:044 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:045 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:045 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:046 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:047 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:047 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:048 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:048 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:049 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:050 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:050 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:051 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:051 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:052 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:052 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:053 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:053 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:054 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:054 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:055 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:056 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:056 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:057 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:057 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:058 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:058 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:059 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:060 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:060 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:061 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:061 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:062 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:062 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:063 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:064 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:064 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:065 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:065 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:066 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:066 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:067 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:067 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:068 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:069 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:069 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:070 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:070 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:071 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:071 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:072 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:073 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:073 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:074 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:074 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:075 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:076 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:076 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:077 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:077 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:078 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:078 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:079 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:080 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:080 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:081 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:081 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:082 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:082 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:083 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:083 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:084 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:085 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:085 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:086 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:086 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:087 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:087 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:088 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:089 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:089 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:090 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:091 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:091 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:092 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:092 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:093 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:093 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:094 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:094 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:095 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:095 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:096 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:097 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:097 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:098 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:098 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:099 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:100 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:100 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:101 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:101 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:102 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:102 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:103 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:104 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:104 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:105 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:105 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:106 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:107 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:107 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:108 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:108 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:109 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:109 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:110 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:111 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:112 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:113 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:113 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:114 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:115 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:115 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:116 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:116 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:117 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:117 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:118 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:119 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:119 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:120 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:120 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:121 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:121 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:122 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:123 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:123 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:124 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:124 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:125 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:125 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:126 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:126 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:127 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:128 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:128 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:129 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:129 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:130 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:130 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:131 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:132 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:132 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:133 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:134 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:134 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:135 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:135 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:136 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:136 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:137 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:138 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:138 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:139 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:140 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:141 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:141 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:142 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:143 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:143 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:144 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:145 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:145 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:146 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:147 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:148 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:148 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:149 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:150 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:151 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:151 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:152 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:153 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:154 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:154 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:155 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:155 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:156 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:157 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:157 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:158 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:159 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:159 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:160 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:160 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:161 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:162 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:162 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:163 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:164 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:165 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:165 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:166 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:167 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:168 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:168 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:169 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:169 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:170 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:170 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:171 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:172 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:172 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:173 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:173 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:174 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:174 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:175 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:176 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:176 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:177 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:177 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:178 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:179 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:179 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:180 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:181 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:181 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:182 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:182 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:183 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:183 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:184 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:184 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:185 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:186 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:186 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:187 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:187 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:188 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:189 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:189 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:190 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:190 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:191 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:191 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:192 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:192 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:193 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:194 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:194 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:195 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:195 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:196 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:197 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:197 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:198 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:198 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:199 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:200 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:200 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:201 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:201 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:202 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:202 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:203 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:204 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:204 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:205 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:205 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:206 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:206 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:207 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:208 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:208 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:209 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:209 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:210 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:210 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:211 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:212 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:212 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:213 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:213 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:214 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:214 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:215 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:215 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:216 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:217 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:217 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:218 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:218 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:219 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:219 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:220 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:221 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:221 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:222 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:222 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:223 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:223 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:224 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:225 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:225 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:226 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:226 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:227 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:228 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:228 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:229 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:229 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:230 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:230 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:231 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:234 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:235 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:236 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:236 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:237 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:237 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:238 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:238 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:239 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:239 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:240 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:241 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:241 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:242 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:243 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:243 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:244 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:244 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:245 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:245 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:246 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:247 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:247 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:248 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:248 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:249 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:249 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:250 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:251 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:251 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:252 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:252 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:253 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:254 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:254 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:255 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:255 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:256 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:256 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:257 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:258 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:258 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:259 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:259 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:260 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:260 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:261 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:262 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:262 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:263 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:264 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:264 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:265 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:265 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:266 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:266 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:267 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:268 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:268 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:269 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:269 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:270 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:270 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:271 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:272 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:273 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:273 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:274 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:274 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:275 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:275 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:276 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:277 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:277 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:278 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:278 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:279 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:279 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:280 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:281 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:281 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:282 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:283 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:283 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:284 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:285 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:285 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:286 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:287 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:287 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:288 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:288 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:289 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:289 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:290 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:291 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:291 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:292 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:292 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:293 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:294 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:294 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:295 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:295 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:296 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:297 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:297 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:298 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:298 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:299 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:299 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:300 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:300 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:301 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:301 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:302 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:303 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:303 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:304 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:304 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:305 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:306 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:306 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:307 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:307 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:308 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:309 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:309 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:310 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:310 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:311 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:311 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:312 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:313 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:313 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:314 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:314 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:315 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:315 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:316 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:317 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:317 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:318 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:318 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:319 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:319 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:320 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:320 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:321 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:321 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:322 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:323 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:323 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:324 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:324 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:325 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:326 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:326 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:327 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:327 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:328 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:328 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:329 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:330 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:330 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:331 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:331 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:332 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:332 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:333 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:333 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:334 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:335 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:335 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:336 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:336 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:337 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:337 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:338 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:339 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:339 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:340 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:340 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:341 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:341 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:342 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:342 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:343 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:344 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:344 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:345 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:346 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:346 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:347 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:347 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:348 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:348 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:349 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:350 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:350 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:351 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:351 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:352 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:352 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:353 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:353 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:354 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:354 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:355 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:356 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:356 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:357 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:357 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:358 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:358 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:359 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:360 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:360 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:361 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:361 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:362 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:362 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:363 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:363 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:364 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:364 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:365 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:366 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:366 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:367 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:368 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:368 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:369 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:369 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:370 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:370 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:371 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:371 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:372 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:373 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:373 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:374 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:374 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:375 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:375 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:376 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:376 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:377 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:378 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:378 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:379 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:379 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:380 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:381 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:381 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:382 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:382 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:383 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:383 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:384 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:384 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:385 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:386 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:386 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:387 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:388 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:388 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:389 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:389 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:390 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:391 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:392 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:392 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:393 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:394 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:394 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:395 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:395 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:396 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:396 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:397 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:397 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:398 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:399 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:399 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:400 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:400 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:401 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:401 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:402 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:403 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:403 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:404 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:404 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:405 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:405 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:406 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:407 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:407 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:408 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:408 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:409 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:410 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:410 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:411 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:411 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:412 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:413 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:413 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:414 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:414 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:415 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:14:415 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:416 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:14:417 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:14:417 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:14:418 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:418 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:419 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:420 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:420 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:421 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:421 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:422 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:446 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:448 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:450 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:452 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@ff099526
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/contentLayout.jsp
                                 false
[5/10/20 3:17:14:453 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:455 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:456 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:457 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:457 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:458 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:459 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:460 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:460 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:460 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:462 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:462 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:463 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:463 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@94adf14c
[5/10/20 3:17:14:464 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:464 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:465 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:465 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:466 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:467 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@94adf14c
[5/10/20 3:17:14:468 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:468 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:469 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:470 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:470 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:471 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:471 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:472 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:472 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:473 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:473 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:475 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:475 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:476 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:477 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:478 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:478 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:479 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:479 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:480 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:480 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:481 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:482 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@7f6dbb30
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/browser_detection.jsp
                                 false
[5/10/20 3:17:14:482 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:483 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:483 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:484 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:484 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:485 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:486 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:486 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:487 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:486 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:488 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:488 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:489 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:489 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@97a9bf8f
[5/10/20 3:17:14:490 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:490 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:491 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:491 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:492 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:492 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@97a9bf8f
[5/10/20 3:17:14:493 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:494 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:494 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:495 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:495 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:496 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:496 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:497 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:497 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:498 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:498 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:499 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@e1b9a8af
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/bidi.jsp
                                 false
[5/10/20 3:17:14:500 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:500 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:501 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:501 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:502 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:502 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:503 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:503 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:504 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:503 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:505 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:506 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:506 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:507 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2783328c
[5/10/20 3:17:14:507 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:508 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:508 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:509 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:509 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:510 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2783328c
[5/10/20 3:17:14:511 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:511 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:512 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:512 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:513 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:513 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:514 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:514 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:515 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:515 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:516 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:517 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2783328c
[5/10/20 3:17:14:517 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:518 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:518 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:519 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:519 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:520 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:520 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:521 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:522 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:522 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:523 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:523 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:523 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:524 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:525 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:526 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:526 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:527 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2783328c
[5/10/20 3:17:14:527 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:528 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:528 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:529 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:529 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:530 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:530 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:531 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:531 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:532 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:533 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:533 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:534 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:534 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:535 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:535 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:536 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:536 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:537 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:537 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:538 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:539 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:539 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:540 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@97a9bf8f
[5/10/20 3:17:14:541 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:541 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:542 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:542 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:543 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:543 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:544 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:544 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:545 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:545 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:546 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:546 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:546 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:547 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:548 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:549 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:549 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:550 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@97a9bf8f
[5/10/20 3:17:14:550 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:551 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@7f56f239
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/content_accessibility.jsp
                                 false
[5/10/20 3:17:14:551 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:552 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:553 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:553 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:554 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:554 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:555 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:555 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:556 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:555 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:557 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:557 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:558 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:558 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9169b3bf
[5/10/20 3:17:14:559 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:560 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:560 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:561 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:561 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:562 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9169b3bf
[5/10/20 3:17:14:562 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:563 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:563 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:564 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:565 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:565 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:566 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:566 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:567 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:567 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:568 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:569 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@9169b3bf
[5/10/20 3:17:14:569 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:570 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:570 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:571 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:571 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:572 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:572 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:573 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:573 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:574 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:574 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:575 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:574 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:576 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:577 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:577 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:578 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:578 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@9169b3bf
[5/10/20 3:17:14:579 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:580 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@447e117a
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/descLayout.jsp
                                 false
[5/10/20 3:17:14:580 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:581 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:581 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:582 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:582 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:583 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:583 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:584 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:585 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:584 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:586 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:586 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:587 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:587 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@fde3efcf
[5/10/20 3:17:14:588 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:588 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:589 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:589 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:590 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:590 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@fde3efcf
[5/10/20 3:17:14:591 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:592 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:593 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:593 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:594 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:594 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:595 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:595 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:596 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:596 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:597 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:597 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:598 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:598 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:599 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:599 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:600 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:600 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:601 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:602 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:602 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:603 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:603 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:604 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:604 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:605 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:605 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:606 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:606 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:607 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:607 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:608 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:609 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:609 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:610 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:610 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:611 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:611 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:612 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:612 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:613 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:613 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:614 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:614 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:615 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:616 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:616 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:617 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:618 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:618 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:619 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:619 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:620 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:620 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:621 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:622 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@598546b8
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/scopeTitle.jsp
                                 false
[5/10/20 3:17:14:622 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:623 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:623 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:624 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:625 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:625 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:626 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:626 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:627 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:626 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:628 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:629 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:629 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:630 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3f133b19
[5/10/20 3:17:14:630 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:631 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:631 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:632 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:633 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:633 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3f133b19
[5/10/20 3:17:14:634 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:634 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:635 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:636 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:636 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:637 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:637 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:638 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:638 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:639 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:639 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:640 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@3f133b19
[5/10/20 3:17:14:641 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:641 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:641 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:642 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:643 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:643 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:644 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:644 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:645 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:645 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:646 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:646 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:646 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:648 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:648 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:649 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:649 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:650 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@3f133b19
[5/10/20 3:17:14:650 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:651 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@fece862b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/portletToolbar.jsp
                                 false
[5/10/20 3:17:14:652 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:652 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:653 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:653 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:654 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:654 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:655 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:656 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:656 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:656 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:657 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:658 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:658 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:659 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a1de4adb
[5/10/20 3:17:14:659 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:660 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:661 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:661 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:662 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:662 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a1de4adb
[5/10/20 3:17:14:663 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:663 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:664 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:664 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:665 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:665 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:666 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:666 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:667 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:668 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:668 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:669 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:670 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:670 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:671 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:671 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:672 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@bc87eba7
                                 System
[5/10/20 3:17:14:672 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:14:673 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:14:674 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:674 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:675 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:14:675 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:676 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:14:677 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:14:677 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:678 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:678 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:14:679 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:14:679 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:14:680 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:14:680 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:14:681 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:14:681 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:682 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:682 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:683 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:683 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:684 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:684 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:685 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:685 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:686 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:687 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:687 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:688 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:688 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:689 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:689 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:689 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:690 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:691 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:691 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:692 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:14:692 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:693 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:693 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:14:694 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:694 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:695 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:696 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:696 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:697 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:14:697 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:698 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:14:699 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:14:699 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:14:700 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:14:700 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:14:701 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:702 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:702 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:703 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:703 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:704 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:704 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:705 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:705 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:706 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:706 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:706 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:707 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:708 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:708 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:709 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:14:710 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@a1de4adb
[5/10/20 3:17:14:710 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:711 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:711 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:712 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:712 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:713 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:713 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:714 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:714 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:715 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:716 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:716 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:716 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:717 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:718 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:718 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:719 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:719 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@a1de4adb
[5/10/20 3:17:14:720 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:721 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:721 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:722 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:722 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:723 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:723 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:724 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:724 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:725 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:725 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:726 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:727 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@fde3efcf
[5/10/20 3:17:14:727 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:728 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:728 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:729 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:729 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:730 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:730 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:731 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:732 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:732 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:733 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:733 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:733 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:734 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:735 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:735 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:736 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:737 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@fde3efcf
[5/10/20 3:17:14:737 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:738 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@bfcd2d2c
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/vboxLayout.jsp
                                 false
[5/10/20 3:17:14:739 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:739 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:740 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:740 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:741 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:741 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:742 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:742 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:743 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:742 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:744 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:744 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:745 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:745 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9fda7cff
[5/10/20 3:17:14:746 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:746 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:747 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:748 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:748 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:749 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9fda7cff
[5/10/20 3:17:14:749 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:750 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:751 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:751 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:752 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:752 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:753 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:753 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:754 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:755 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:755 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:756 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:756 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:757 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:757 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:758 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:758 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:759 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:759 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:760 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:760 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:761 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:765 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@570858ac
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/quicksearchLayout.jsp
                                 false
[5/10/20 3:17:14:765 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:766 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:767 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:767 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:768 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:768 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:769 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:769 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:770 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:769 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:771 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:771 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:772 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:773 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@16ab6355
[5/10/20 3:17:14:773 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:774 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:774 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:775 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:775 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:776 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@16ab6355
[5/10/20 3:17:14:776 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:777 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:778 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:778 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:779 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:780 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:780 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:781 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:781 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:782 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:782 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:789 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@16ab6355
[5/10/20 3:17:14:790 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:792 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:793 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:794 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:794 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:795 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:796 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:796 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:797 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:797 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:798 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:798 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:798 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:799 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:800 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:801 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:801 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:802 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@16ab6355
[5/10/20 3:17:14:802 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:803 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:803 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:804 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:804 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:805 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:806 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:807 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:807 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:808 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:809 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:809 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:814 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@2520916a
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/collectionTableLayout.jsp
                                 false
[5/10/20 3:17:14:815 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:14:816 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:14:817 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:818 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:818 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:819 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:819 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:820 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:820 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:820 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:822 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:822 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:823 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:823 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e0dd153c
[5/10/20 3:17:14:824 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:824 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:825 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:14:825 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:826 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:826 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e0dd153c
[5/10/20 3:17:14:832 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/collectionTableLayout.jsp
[5/10/20 3:17:14:834 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:835 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:836 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:837 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:837 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:838 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:839 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:838 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:840 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:841 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:841 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:842 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@47abb1ea
[5/10/20 3:17:14:842 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:14:843 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:844 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:844 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:14:845 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:845 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:14:846 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:14:847 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:848 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:848 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:14:849 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:14:850 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:14:850 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:14:851 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:14:851 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:14:852 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:852 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:853 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:854 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:854 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:855 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:14:855 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:14:856 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:14:856 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:14:857 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:14:858 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/collectionTableLayout.jsp
                                 true
[5/10/20 3:17:14:858 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:859 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:860 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:860 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:861 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:14:861 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:862 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:861 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:864 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:864 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:865 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:14:865 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ce2eb62e
[5/10/20 3:17:14:866 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:14:867 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:14:867 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@33f07a9f[isclite#isclite.war#/secure/layouts/collectionTableLayout.jsp]
[5/10/20 3:17:14:868 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:868 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:14:869 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:14:870 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:871 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:871 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/collectionTableLayout.jsp
                                 isclite
[5/10/20 3:17:14:872 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:14:872 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:14:873 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:14:874 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:14:874 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:14:875 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:14:875 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:14:876 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:876 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:14:877 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:14:878 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:14:878 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:879 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@c87e115a
[5/10/20 3:17:14:880 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@c87e115a
[5/10/20 3:17:14:880 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@27d57b39
                                 /secure/layouts/collectionTableLayout.jsp
[5/10/20 3:17:14:881 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@27d57b39
                                 /secure/layouts/collectionTableLayout.jsp
[5/10/20 3:17:14:882 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:14:882 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:14:883 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:883 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:884 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:885 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:885 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:886 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:886 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:887 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ce2eb62e
[5/10/20 3:17:14:888 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@47abb1ea
[5/10/20 3:17:14:889 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:889 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:14:890 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:890 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:891 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:14:892 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:892 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:14:893 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:14:893 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:894 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:894 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:14:895 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:14:896 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:14:896 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:14:897 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:14:897 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:14:898 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:898 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:899 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:899 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:900 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:901 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:901 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:902 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:902 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:903 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:903 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:14:904 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:904 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:906 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/collectionTableLayout.jsp]: Initialization successful.
[5/10/20 3:17:14:907 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@47abb1ea
[5/10/20 3:17:14:907 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:909 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:14:909 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:908 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:14:910 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:911 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:912 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:912 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:913 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:913 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:910 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:914 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:14:915 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:916 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:14:916 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:14:917 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:917 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:918 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:14:918 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:14:914 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:919 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:920 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:921 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:921 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:921 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:923 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:923 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:924 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:919 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:14:925 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:14:926 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:14:926 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:14:927 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:927 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:928 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:928 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:929 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:929 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:930 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:930 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:924 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:932 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@47abb1ea
[5/10/20 3:17:14:932 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:14:931 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:14:934 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:934 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:14:935 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:935 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:936 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:14:937 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:14:938 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:938 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:939 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:14:939 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:14:936 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:940 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:14:941 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:14:941 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:14:942 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:14:944 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:14:944 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:945 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:14:945 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:946 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:946 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@901cd8bf
                                 System
[5/10/20 3:17:14:947 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:14:948 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:14:948 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:949 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:950 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:14:950 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:951 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:14:951 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:14:952 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:14:953 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:14:953 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:14:954 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:14:954 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:14:955 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:14:955 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:14:956 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:14:956 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:957 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:957 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:958 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:959 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:959 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:960 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:960 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:14:961 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:961 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:962 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:14:962 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:14:963 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:964 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:14:964 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:14:965 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:14:964 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:14:966 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:14:967 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:968 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:14:968 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:14:969 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:970 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:970 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:14:971 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:14:972 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:14:972 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:14:994 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:14:995 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:14:995 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:14:997 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:14:998 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:14:999 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:000 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:001 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:002 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:002 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:003 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:002 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:004 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:005 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:005 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:006 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:15:007 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:007 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:008 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:008 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:009 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:009 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:010 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:010 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:011 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:012 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:012 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:013 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:013 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:014 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:014 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:015 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:016 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:016 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:017 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:018 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:018 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:019 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:019 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:020 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:020 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:021 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:022 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:022 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:023 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:023 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:024 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:025 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:025 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:026 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:026 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:027 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:027 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:028 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:028 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:15:029 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:029 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:030 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:15:030 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:031 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:15:032 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:15:032 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:033 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:033 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:15:034 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:15:034 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:15:035 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:15:036 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:15:036 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:15:037 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:037 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:038 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@e3fece08
                                 Specified
[5/10/20 3:17:15:039 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:15:039 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:040 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:040 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:041 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:041 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:042 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:043 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:043 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:044 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:044 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:045 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:045 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:046 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:047 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:047 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:047 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:048 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:049 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:049 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:050 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:15:050 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:051 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:052 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:15:053 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:053 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:054 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:054 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:055 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:055 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:056 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:057 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:057 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:058 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:058 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:059 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:060 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:060 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:061 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:061 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:062 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:063 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:063 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:064 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:064 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:065 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:065 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:066 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:066 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:067 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:067 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:068 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:069 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:069 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:070 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:070 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:071 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:072 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:072 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:073 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:073 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:074 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:074 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:075 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:076 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:076 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:077 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:077 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:078 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:079 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:079 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:080 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:080 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:081 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:082 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:082 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:083 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:083 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:084 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:085 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:085 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:086 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:086 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:087 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:087 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:088 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:088 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:089 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:089 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:089 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:090 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:091 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:091 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:092 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:15:093 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:093 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:094 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:094 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:095 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:096 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:096 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:097 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:097 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:098 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:098 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:099 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:099 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:100 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:101 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:101 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:102 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:102 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:103 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:103 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:104 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:104 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:105 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:105 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:106 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:106 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:107 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:107 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:108 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:108 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:109 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:109 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:110 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:110 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:111 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:112 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:112 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:113 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:113 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:114 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:114 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:115 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:115 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:116 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:117 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:117 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:118 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:118 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:119 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:119 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:120 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:120 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:121 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:122 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:122 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:123 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:123 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:124 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:124 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:125 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:125 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:126 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:127 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:127 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:128 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:128 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:129 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:129 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:130 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:131 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:131 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:132 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:132 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:133 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:133 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:134 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:134 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:135 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:136 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:136 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:137 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:137 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:138 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:138 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:139 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:140 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:140 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:141 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:141 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:142 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:143 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:143 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:144 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:144 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:145 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:145 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:146 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:146 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:147 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:148 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:148 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:149 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:149 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:150 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:150 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:152 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:152 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:153 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:153 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:154 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:154 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:155 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:156 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:156 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:157 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:158 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:158 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@cd4d10b8
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/PreferencesLayout.jsp
                                 false
[5/10/20 3:17:15:159 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:15:160 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:15:160 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:161 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:161 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:162 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:162 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:15:163 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:164 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:163 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:165 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:165 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:166 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:167 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9d4d7ef8
[5/10/20 3:17:15:167 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:15:168 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:15:168 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:15:169 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:169 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:170 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9d4d7ef8
[5/10/20 3:17:15:171 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:172 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:172 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:173 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:173 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:174 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:174 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:175 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:175 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:176 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:177 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:178 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@9d4d7ef8
[5/10/20 3:17:15:179 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:180 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:180 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:181 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:181 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:182 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:182 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:183 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:184 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:185 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:185 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:186 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:185 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:187 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:188 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:188 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:189 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:190 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@9d4d7ef8
[5/10/20 3:17:15:190 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:191 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:192 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:192 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:193 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:193 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:194 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:194 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:195 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:195 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:196 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:196 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:199 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@f43f2d83
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/buttonLayout.jsp
                                 false
[5/10/20 3:17:15:200 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:15:201 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:15:201 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:202 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:203 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:203 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:204 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:15:204 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:205 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:204 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:206 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:207 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:207 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:208 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@70ddc2ca
[5/10/20 3:17:15:208 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:15:209 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:15:209 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:15:210 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:211 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:211 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@70ddc2ca
[5/10/20 3:17:15:212 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:213 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:213 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:214 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:214 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:215 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:215 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:216 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:216 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:217 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:218 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:219 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:219 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:220 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:220 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:221 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:221 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@9c3cd30c
                                 System
[5/10/20 3:17:15:222 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:15:223 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:15:224 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:224 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:225 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:15:225 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:226 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:15:226 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:15:227 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:227 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:228 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:15:228 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:15:229 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:15:230 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:15:230 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:15:231 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:15:231 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:232 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:232 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:233 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:233 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:234 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:234 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:235 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:236 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:236 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:237 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:237 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:238 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:238 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:239 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:239 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:239 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:240 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:241 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:242 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:242 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:15:243 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:243 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:244 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:15:245 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:246 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:246 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:268 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:269 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:270 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:271 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:272 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:273 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:274 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:275 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:276 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:277 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:277 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:277 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:279 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:279 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:280 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:281 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:15:282 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:282 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:283 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:283 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:284 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:284 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:285 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:285 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:286 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:286 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:287 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:287 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:288 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:288 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:289 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:290 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:290 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:291 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:291 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:292 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:292 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:293 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:294 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:294 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:295 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:295 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:296 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:296 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:297 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:298 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:298 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:299 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:299 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:300 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:300 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:301 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:301 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:302 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:303 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:15:303 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:304 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:304 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:15:305 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:305 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:15:306 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:15:306 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:307 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:308 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:15:308 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:15:309 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:15:310 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:15:310 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:15:311 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:15:311 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:312 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:313 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@3e62e665
                                 Specified
[5/10/20 3:17:15:314 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:15:314 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:315 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:315 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:316 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:317 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:317 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:318 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:319 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:319 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:320 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:320 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:321 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:321 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:322 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:323 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:322 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:324 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:324 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:325 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:325 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:15:326 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:327 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:327 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:15:328 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:329 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:329 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:330 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:330 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:331 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:331 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:332 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:333 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:333 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:334 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:334 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:335 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:336 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:336 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:337 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:337 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:338 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:338 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:339 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:339 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:340 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:341 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:341 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:342 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:342 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:343 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:343 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:344 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:344 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:345 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:345 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:346 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:346 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:347 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:347 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:348 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:349 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:349 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:350 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:351 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:351 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:352 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:352 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:353 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:354 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:354 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:355 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:355 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:356 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:356 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:357 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:357 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:358 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:359 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:359 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:360 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:360 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:361 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:362 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:362 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:363 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:364 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:364 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:365 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:364 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:366 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:366 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:367 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:367 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:15:368 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:369 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:369 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:370 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:371 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:371 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:372 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@70ddc2ca
[5/10/20 3:17:15:373 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:373 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:374 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:374 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:375 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:375 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:376 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:377 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:377 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:378 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:378 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:379 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:378 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:380 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:381 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:382 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:382 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:383 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@70ddc2ca
[5/10/20 3:17:15:383 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:385 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:386 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:386 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:387 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:388 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:388 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:389 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:390 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:391 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:391 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:392 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:393 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:393 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:394 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:394 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:395 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:395 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:396 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:397 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:397 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:398 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:398 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:399 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:400 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:400 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:401 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:401 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:402 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:402 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:403 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:404 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:404 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:405 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:405 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:406 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:406 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:407 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:407 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:408 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:409 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:409 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:410 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:410 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:411 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:411 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:412 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:412 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:413 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:413 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:414 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:414 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:415 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:416 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:416 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:417 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:417 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:418 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:419 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:419 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:420 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:420 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:421 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:421 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:422 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:422 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:423 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:424 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:424 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:425 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:425 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:426 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:426 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:427 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:427 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:428 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:428 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:429 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:430 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:430 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:431 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:431 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:432 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:433 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:433 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:434 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:435 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:435 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:436 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:437 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:437 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:438 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:439 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:439 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:440 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:440 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:441 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:15:442 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:442 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:15:443 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:15:443 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:15:444 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:444 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:445 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:445 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:446 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:447 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@e0dd153c
[5/10/20 3:17:15:448 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:449 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:449 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:450 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:450 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:451 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:451 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:452 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:452 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:453 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:453 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:454 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:453 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:455 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:456 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:456 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:457 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:458 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@e0dd153c
[5/10/20 3:17:15:458 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:459 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:459 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:460 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:461 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:461 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:462 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:462 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:463 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:463 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:464 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:464 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:468 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@c7bb016e
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@216316b4
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/pagingLayout.jsp
                                 false
[5/10/20 3:17:15:468 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/navigatorCmd.do?csrfid=-384698864&forwardName=SecureCommunications.config.view&WSC=true]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:15:469 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/contentLayout.jsp, Path Info=null
[5/10/20 3:17:15:470 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:470 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:471 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:471 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:472 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:15:473 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:473 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:473 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:474 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:475 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:475 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:15:476 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1a9383e7
[5/10/20 3:17:15:476 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:15:477 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:15:477 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:15:478 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:478 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:479 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1a9383e7
[5/10/20 3:17:15:480 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:481 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:481 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:482 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:482 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:483 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:483 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:484 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:484 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:485 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:485 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:486 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@1a9383e7
[5/10/20 3:17:15:486 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:487 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:488 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:488 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:489 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:489 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:490 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:490 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:491 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:491 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:492 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:492 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:492 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:493 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:494 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:494 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:495 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:495 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@1a9383e7
[5/10/20 3:17:15:496 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:496 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@9fda7cff
[5/10/20 3:17:15:497 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:498 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:498 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:499 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:499 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:500 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:501 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:501 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:502 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:502 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:503 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:504 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:503 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:505 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:506 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:506 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:507 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:507 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@9fda7cff
[5/10/20 3:17:15:508 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:508 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:509 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:510 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:510 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:511 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:512 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:512 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:513 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:513 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:514 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:515 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:515 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:516 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:516 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:517 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:517 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:518 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:519 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:519 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:520 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:521 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:521 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:522 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:15:523 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:523 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:15:524 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:524 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:525 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@c4c98694
                                 System
[5/10/20 3:17:15:526 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:15:526 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:15:527 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:527 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:528 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:15:528 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:529 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:15:529 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:15:530 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:531 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:531 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:15:532 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:15:532 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:15:533 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:15:533 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:15:534 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:15:534 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:535 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:535 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:536 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:537 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:537 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:538 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:538 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:15:539 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:540 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:540 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:541 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:543 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:543 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:544 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:545 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:544 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:546 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:546 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:547 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:547 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:15:548 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:548 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:549 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:15:550 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:550 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:15:551 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:15:551 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:552 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:15:552 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:15:553 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:554 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:554 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:15:555 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:15:555 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:15:556 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:15:557 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:557 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:558 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:558 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:559 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:559 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:560 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:560 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:561 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:561 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:562 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:561 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:563 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:564 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:564 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:565 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:15:565 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:566 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:567 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:567 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:568 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:568 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:569 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:569 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:570 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:571 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:571 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:577 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@94adf14c
[5/10/20 3:17:15:579 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:15:579 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:580 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:581 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:582 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:583 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:583 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:15:584 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:585 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:586 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:587 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:15:588 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:15:587 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:15:590 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:15:591 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:591 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:592 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:15:592 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@94adf14c
[5/10/20 3:17:15:593 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:594 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:594 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:15:595 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:15:596 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:15:596 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:15:597 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:15:598 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:15:598 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:15:599 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:15:599 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:15:600 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:15:601 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@187ea9ba
[5/10/20 3:17:15:601 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:15:602 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:15:602 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:15:603 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:604 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:15:605 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:15:605 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:15:606 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:15:607 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:15:607 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:15:608 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:15:608 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:15:609 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@187ea9ba
[5/10/20 3:17:15:610 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:15:611 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:15:612 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:15:612 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:18:038 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:17:18:039 UTC] 00000098 ContextManage >  clearCallerContext Entry
[5/10/20 3:17:18:040 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:18:041 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:042 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:18:043 UTC] 00000098 ContextManage <  clearCallerContext Exit
[5/10/20 3:17:18:043 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:17:18:044 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:18:045 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:046 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:18:047 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@41361f93
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@3a189300
                                 /ibm/console
                                 admin_host
                                 action
                                 true
[5/10/20 3:17:18:048 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:18:049 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/sSLConfigCollection.do, Path Info=null
[5/10/20 3:17:18:050 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:18:050 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:18:051 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:052 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:17:18:053 UTC] 00000098 ContextManage 3   Returning: true
[5/10/20 3:17:18:054 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:18:054 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:18:055 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:17:18:056 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:18:056 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:17:18:057 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:17:18:058 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@57ec2c56
[5/10/20 3:17:18:059 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:18:059 UTC] 00000098 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:17:18:060 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:061 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:18:062 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:17:18:063 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:18:063 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:18:064 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:17:18:065 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:18:065 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:18:066 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:18:066 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@3ce90e9c[isclite#isclite.war#action]
[5/10/20 3:17:18:067 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:068 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:18:068 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:17:18:069 UTC] 00000098 EJSWebCollabo 3   preInvoke pushing admin
[5/10/20 3:17:18:070 UTC] 00000098 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@57ec2c56
[5/10/20 3:17:18:070 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:18:071 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:18:072 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:18:072 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:18:073 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:18:073 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:18:074 UTC] 00000098 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@501ef32c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:18:075 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:18:075 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:18:076 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:18:077 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:18:077 UTC] 00000098 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@41361f93
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@3a189300
                                 admin_host:/ibm/console
                                 true
                                 isclite
[5/10/20 3:17:18:078 UTC] 00000098 URLHandler    3   URI requested: /sSLConfigCollection.do
[5/10/20 3:17:18:078 UTC] 00000098 URLHandler    3   URI returned: /sSLConfigCollection.do
[5/10/20 3:17:18:079 UTC] 00000098 LRUCache      >  get Entry
                                 isclite
[5/10/20 3:17:18:080 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:18:080 UTC] 00000098 PermissionRol 3   App permission cache found for isclite
[5/10/20 3:17:18:081 UTC] 00000098 LRUCache      >  get Entry
                                 com.ibm.ws.security.web.WebAccessPermission@cd8cbeba
[5/10/20 3:17:18:081 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:18:082 UTC] 00000098 PermissionRol 3   No permissions found for /sSLConfigCollection.do:GET
[5/10/20 3:17:18:083 UTC] 00000098 WebConstraint >  getRequiredRoles :  /sSLConfigCollection.do GETisDenySet false Entry
[5/10/20 3:17:18:083 UTC] 00000098 WebConstraint 3   getRequiredRoles: isDenySet? false
[5/10/20 3:17:18:084 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:18:085 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:18:086 UTC] 00000098 WebConstraint 3   getRequiredRoles: isDenySet? false allowCustomHTTPMethods? false
[5/10/20 3:17:18:086 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:087 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:088 UTC] 00000098 WebConstraint 3   isDenySet: false methodName: GETj: 1
[5/10/20 3:17:18:088 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:089 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:089 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:090 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:091 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:091 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:092 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:092 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:093 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:094 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:094 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:095 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:095 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:096 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:097 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:18:097 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:098 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:098 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:099 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:099 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:100 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:101 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:101 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:102 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:102 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:103 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:103 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:104 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:105 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:105 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:106 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:18:106 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:107 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:107 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:108 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:108 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:109 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:109 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:110 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:110 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:111 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:111 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:112 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:112 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:113 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:114 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:114 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:18:115 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:115 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:116 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:116 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:117 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:117 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:118 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:118 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:119 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:120 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:120 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:121 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:121 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:122 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:122 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:123 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:18:123 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:124 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:125 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:125 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:126 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:126 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:127 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:127 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:128 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:128 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:129 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:130 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:130 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:131 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:131 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:132 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:18:132 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:18:133 UTC] 00000098 WebConstraint 3   found a match, p not null
[5/10/20 3:17:18:134 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:134 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:135 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:135 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:136 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:136 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:137 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:137 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:138 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:138 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:139 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:139 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:140 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:141 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:141 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:18:142 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:142 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:143 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:143 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:144 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:144 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:145 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:146 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:146 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:147 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:147 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:148 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:148 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:149 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:150 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:150 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:18:151 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:151 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:152 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:152 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:153 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:153 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:154 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:154 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:155 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:156 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:156 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:157 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:157 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:158 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:158 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:159 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:18:160 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:160 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:161 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:161 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:162 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:162 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:163 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:163 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:164 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:165 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:165 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:166 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:166 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:167 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:168 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:168 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:18:169 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:169 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:170 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:171 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:171 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:172 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:172 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:174 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:174 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:175 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:176 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:176 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:177 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:177 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:178 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:178 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:18:179 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:179 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:180 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:180 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:181 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:182 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:182 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:183 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:183 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:184 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:184 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:185 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:185 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:186 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:187 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:187 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:18:188 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:189 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:189 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:190 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:190 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:191 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:192 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:192 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:193 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:193 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:194 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:194 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:195 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:196 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:196 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:197 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:18:197 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:198 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:198 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:199 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:199 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:200 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:201 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:201 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:202 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:202 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:203 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:204 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:205 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:205 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:206 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:18:206 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:207 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:207 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:208 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:208 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:209 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:210 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:210 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:211 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:211 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:212 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:212 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:213 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:213 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:214 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:214 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:18:215 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:215 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:216 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:217 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:217 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:218 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:218 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:219 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:220 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:220 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:221 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:221 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:222 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:222 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:223 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:224 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:18:224 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:225 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:225 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:226 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:227 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:227 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:228 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:228 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:229 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:229 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:230 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:230 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:231 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:232 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:232 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:233 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:18:233 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:234 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:235 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:235 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:236 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:236 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:237 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:237 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:238 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:238 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:239 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:240 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:240 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:241 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:241 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:242 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:18:242 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:243 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:243 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:245 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:245 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:246 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:246 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:247 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:248 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:248 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:249 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:250 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:250 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:251 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:18:251 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:252 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:252 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:253 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:254 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:255 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:255 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:256 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:256 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:257 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:257 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:259 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:259 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:18:260 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:260 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:261 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:261 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:262 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:263 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:263 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:264 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:264 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:265 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:265 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:266 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:267 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:267 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:268 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:268 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:18:269 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:270 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:270 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:271 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:271 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:272 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:272 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:273 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:273 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:274 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:275 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:275 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:276 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:277 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:277 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:278 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:18:278 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:279 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:279 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:280 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:280 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:281 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:282 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:282 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:283 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:283 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:284 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:284 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:285 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:285 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:286 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:287 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:18:287 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:288 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:288 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:290 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:291 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:291 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:292 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:292 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:293 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:293 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:294 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:294 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:295 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:295 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:18:296 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:297 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:297 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:298 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:298 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:299 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:299 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:300 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:301 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:301 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:302 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:302 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:303 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:303 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:304 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:304 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:18:305 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:305 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:306 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:307 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:307 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:308 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:308 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:309 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:309 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:310 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:311 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:311 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:312 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:312 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:313 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:313 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:18:314 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:315 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:315 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:316 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:316 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:317 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:318 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:318 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:319 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:319 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:320 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:320 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:321 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:322 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:323 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:18:323 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:324 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:324 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:325 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:326 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:326 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:327 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:327 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:328 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:328 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:329 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:329 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:330 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:331 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:331 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:332 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:18:332 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:333 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:333 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:334 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:334 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:335 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:336 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:336 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:337 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:337 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:338 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:338 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:339 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:340 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:340 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:341 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:18:341 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:342 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:342 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:343 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:344 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:344 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:345 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:346 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:347 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:347 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:348 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:348 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:349 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:349 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:350 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:351 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:18:351 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:352 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:352 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:353 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:353 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:354 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:354 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:355 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:356 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:356 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:357 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:357 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:358 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:359 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:360 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:18:360 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:361 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:362 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:362 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:363 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:363 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:364 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:365 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:365 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:366 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:366 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:367 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:367 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:368 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:369 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:369 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:18:370 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:370 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:371 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:371 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:372 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:372 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:373 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:373 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:374 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:374 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:375 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:375 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:376 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:376 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:377 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:377 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:18:378 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:379 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:379 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:381 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:381 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:382 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:383 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:383 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:384 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:384 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:386 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:386 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:18:387 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:387 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:388 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:388 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:389 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:389 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:390 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:390 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:391 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:391 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:392 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:393 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:393 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:394 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:394 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:395 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:18:395 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:396 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:396 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:397 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:397 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:398 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:398 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:399 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:399 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:400 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:401 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:401 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:402 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:402 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:403 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:404 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:18:404 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:405 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:405 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:406 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:406 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:407 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:407 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:408 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:409 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:409 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:409 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:410 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:411 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:411 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:412 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:18:413 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:413 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:414 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:414 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:415 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:415 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:416 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:417 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:417 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:418 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:418 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:419 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:419 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:420 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:420 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:421 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:18:421 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:422 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:422 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:423 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:424 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:424 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:425 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:425 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:426 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:427 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:427 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:428 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:428 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:429 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:429 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:430 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:18:431 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:431 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:432 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:432 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:433 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:433 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:434 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:435 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:435 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:436 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:436 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:437 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:437 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:438 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:438 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:439 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:18:439 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:440 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:441 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:441 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:442 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:443 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:443 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:444 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:444 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:445 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:445 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:446 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:447 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:447 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:448 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:448 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:18:449 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:450 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:450 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:451 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:451 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:452 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:453 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:453 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:454 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:454 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:455 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:456 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:456 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:457 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:458 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:458 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:18:459 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:459 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:460 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:461 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:461 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:462 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:462 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:463 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:464 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:464 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:465 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:465 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:466 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:467 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:467 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:468 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:18:468 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:469 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:469 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:470 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:471 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:471 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:472 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:472 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:473 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:473 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:474 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:474 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:475 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:475 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:476 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:476 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:18:477 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:478 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:478 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:479 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:480 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:480 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:481 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:481 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:482 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:482 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:483 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:483 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:484 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:485 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:485 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:486 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:18:486 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:487 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:487 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:488 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:489 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:489 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:490 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:490 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:491 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:491 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:492 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:492 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:493 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:494 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:494 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:495 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:18:495 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:496 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:496 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:497 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:497 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:498 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:498 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:499 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:499 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:500 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:501 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:501 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:502 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:502 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:503 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:503 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:18:504 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:504 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:505 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:505 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:506 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:507 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:507 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:508 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:508 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:509 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:510 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:510 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:511 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:511 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:512 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:512 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:18:513 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:513 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:514 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:515 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:515 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:516 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:516 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:517 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:517 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:518 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:518 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:519 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:521 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:521 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:18:522 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:523 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:523 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:524 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:524 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:525 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:526 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:526 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:527 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:528 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:529 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:530 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:530 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:531 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:531 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:532 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:18:532 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:533 UTC] 00000098 WebConstraint 3   Required roles are
[5/10/20 3:17:18:534 UTC] 00000098 WebConstraint 3   administrator
[5/10/20 3:17:18:534 UTC] 00000098 WebConstraint 3   operator
[5/10/20 3:17:18:535 UTC] 00000098 WebConstraint 3   configurator
[5/10/20 3:17:18:535 UTC] 00000098 WebConstraint 3   monitor
[5/10/20 3:17:18:536 UTC] 00000098 WebConstraint 3   nobody
[5/10/20 3:17:18:536 UTC] 00000098 WebConstraint 3   .
[5/10/20 3:17:18:537 UTC] 00000098 WebConstraint <  getRequiredRoles Exit
[5/10/20 3:17:18:537 UTC] 00000098 LRUCache      >  put (synchronized) com.ibm.ws.security.web.WebAccessPermission@cd8cbeba Entry
[5/10/20 3:17:18:538 UTC] 00000098 LRUCache      <  put Exit
[5/10/20 3:17:18:539 UTC] 00000098 PermissionRol 3   isclite, /sSLConfigCollection.do:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:18:539 UTC] 00000098 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:17:18:540 UTC] 00000098 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@9d5c7f85
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b97eff1
[5/10/20 3:17:18:541 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:18:541 UTC] 00000098 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 
  Authorization Table [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AuthorizationTableImpl@8bef5cf4 ]
  Authorization Table contains [ 4 ] role assignments
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@535bf73f ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 1 ] special subjects
          Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.ServerImpl@93671b63 ]
            Name      [ Server ]
            Access ID [ Server ]
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@a26b0e0 ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@8feb60dd ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@9212975a ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects

                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b97eff1
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:17:18:542 UTC] 00000098 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:17:18:543 UTC] 00000098 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:17:18:543 UTC] 00000098 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:17:18:544 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /sSLConfigCollection.do
                                 GET
[5/10/20 3:17:18:544 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:18:545 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:18:545 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:18:546 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:546 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:547 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:547 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:18:548 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:549 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:549 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:550 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:551 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:551 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:552 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:553 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:553 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:554 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:554 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:555 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:555 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:556 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:18:556 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:557 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:558 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:18:558 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:559 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:560 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:560 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:561 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:562 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:562 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:563 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:563 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:564 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:564 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:565 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:566 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:18:566 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:567 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:568 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:18:568 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:569 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:569 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:570 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:571 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:571 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:572 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:573 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:573 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:574 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:574 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:575 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:575 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:576 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:18:576 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:577 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:577 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:18:578 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:578 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:579 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:580 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:580 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:581 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:581 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:582 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:582 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:583 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:583 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:585 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:586 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:18:586 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:587 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:587 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:18:588 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:588 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:590 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:591 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:591 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:592 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:592 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:593 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:594 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:594 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:595 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:595 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:596 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:18:596 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:18:597 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:597 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:18:598 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:598 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:600 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:600 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:601 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:601 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:602 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:602 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:603 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:605 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:605 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:18:606 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:607 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:607 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:18:608 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:608 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:609 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:610 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:610 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:611 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:611 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:612 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:612 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:613 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:614 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:614 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:615 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:615 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:616 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:18:616 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:617 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:617 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:18:618 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:618 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:619 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:619 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:620 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:621 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:621 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:622 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:622 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:623 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:624 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:624 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:625 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:626 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:18:626 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:627 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:628 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:18:628 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:629 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:630 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:630 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:631 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:631 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:632 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:633 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:633 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:634 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:635 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:635 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:636 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:18:636 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:637 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:637 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:18:638 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:639 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:640 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:640 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:641 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:641 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:642 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:642 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:643 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:643 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:644 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:645 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:646 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:18:646 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:647 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:647 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:18:648 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:648 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:650 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:651 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:651 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:652 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:652 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:653 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:653 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:654 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:654 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:655 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:656 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:18:656 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:657 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:657 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:18:658 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:658 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:659 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:660 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:661 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:661 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:662 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:663 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:663 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:664 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:664 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:665 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:666 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:666 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:18:667 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:667 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:668 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:18:668 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:669 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:671 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:671 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:672 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:672 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:673 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:674 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:674 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:675 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:676 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:676 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:18:677 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:678 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:678 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:18:679 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:679 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:680 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:681 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:681 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:682 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:682 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:683 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:684 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:684 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:685 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:685 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:686 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:686 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:18:687 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:687 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:688 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:18:688 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:689 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:690 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:690 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:691 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:692 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:692 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:693 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:693 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:694 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:695 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:695 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:696 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:696 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:697 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:18:697 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:698 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:699 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:18:699 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:700 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:700 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:701 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:701 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:702 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:703 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:703 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:704 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:704 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:705 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:705 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:706 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:707 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:707 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:18:708 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:709 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:709 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:18:710 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:710 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:711 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:711 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:712 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:712 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:713 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:714 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:714 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:715 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:715 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:716 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:716 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:717 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:717 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:18:718 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:718 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:719 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:18:720 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:720 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:721 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:721 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:722 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:722 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:723 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:723 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:724 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:724 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:725 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:726 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:726 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:727 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:728 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:18:728 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:729 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:729 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:18:730 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:730 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:731 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:731 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:732 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:732 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:733 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:733 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:734 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:735 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:735 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:736 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:737 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:737 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:18:738 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:739 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:739 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:18:740 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:740 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:741 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:742 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:742 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:743 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:743 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:744 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:745 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:745 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:746 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:747 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:747 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:748 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:18:748 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:749 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:749 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:18:750 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:750 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:751 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:752 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:752 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:753 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:753 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:754 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:754 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:755 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:756 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:756 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:757 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:757 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:758 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:18:758 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:759 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:760 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:18:760 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:761 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:761 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:762 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:762 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:763 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:763 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:764 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:764 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:765 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:766 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:766 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:767 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:767 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:768 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:18:769 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:769 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:770 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:18:770 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:771 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:771 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:772 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:773 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:773 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:774 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:774 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:775 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:776 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:776 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:777 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:777 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:778 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:778 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:18:779 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:779 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:780 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:18:780 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:781 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:782 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:782 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:783 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:783 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:784 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:784 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:785 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:785 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:786 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:786 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:787 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:788 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:788 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:18:789 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:789 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:790 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:18:790 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:791 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:791 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:792 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:792 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:793 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:794 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:794 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:795 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:795 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:796 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:796 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:797 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:797 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:798 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:18:799 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:799 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:800 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:18:800 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:801 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:801 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:802 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:803 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:803 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:804 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:804 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:805 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:805 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:806 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:806 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:807 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:808 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:808 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:18:809 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:809 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:810 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:18:810 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:811 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:812 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:812 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:813 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:813 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:814 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:814 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:815 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:816 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:816 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:817 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:817 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:818 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:818 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:18:819 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:820 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:820 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:18:821 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:821 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:822 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:822 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:823 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:823 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:824 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:825 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:825 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:826 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:826 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:827 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:828 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:828 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:829 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:18:829 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:830 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:830 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:18:831 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:831 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:832 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:833 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:833 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:834 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:835 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:835 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:836 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:836 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:837 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:838 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:838 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:18:839 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:839 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:840 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:18:840 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:841 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:841 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:842 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:843 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:843 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:844 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:844 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:845 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:845 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:846 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:847 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:847 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:848 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:848 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:18:849 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:849 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:850 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:18:850 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:851 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:852 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:852 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:853 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:853 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:854 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:854 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:855 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:856 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:856 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:857 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:857 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:858 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:858 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:18:859 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:859 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:860 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:18:860 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:861 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:861 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:862 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:863 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:863 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:864 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:865 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:865 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:866 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:866 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:868 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:868 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:18:869 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:869 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:870 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:18:871 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:871 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:872 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:872 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:873 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:873 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:874 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:875 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:875 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:876 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:876 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:877 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:877 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:878 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:879 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:18:879 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:880 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:880 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:18:881 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:881 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:882 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:882 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:883 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:883 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:884 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:885 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:885 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:886 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:886 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:887 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:888 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:888 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:889 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:18:889 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:890 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:891 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:18:891 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:892 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:892 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:893 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:894 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:894 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:895 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:895 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:896 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:896 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:897 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:898 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:898 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:899 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:899 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:18:900 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:900 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:901 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:18:901 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:902 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:902 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:903 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:903 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:904 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:904 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:905 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:906 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:906 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:907 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:907 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:908 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:908 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:909 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:18:909 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:910 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:910 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:18:911 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:911 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:912 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:912 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:913 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:913 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:914 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:915 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:915 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:916 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:916 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:917 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:918 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:918 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:919 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:18:919 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:920 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:920 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:18:921 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:921 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:922 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:922 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:923 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:923 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:924 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:925 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:925 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:926 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:926 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:928 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:928 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:18:929 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:930 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:930 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:18:931 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:931 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:932 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:932 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:933 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:934 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:934 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:935 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:935 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:936 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:936 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:937 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:938 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:938 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:939 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:18:939 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:940 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:940 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:18:941 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:941 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:942 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:943 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:943 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:944 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:944 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:945 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:946 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:946 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:947 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:947 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:948 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:948 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:949 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:18:950 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:950 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:951 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:18:951 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:952 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:952 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:953 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:954 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:954 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:955 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:955 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:956 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:956 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:957 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:957 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:958 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:958 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:959 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:18:960 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:960 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:961 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:18:961 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:962 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:963 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:963 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:964 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:965 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:965 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:966 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:966 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:967 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:968 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:968 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:969 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:969 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:970 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:18:971 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:971 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:972 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:18:972 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:973 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:973 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:974 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:974 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:975 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:975 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:976 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:976 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:977 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:978 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:978 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:979 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:979 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:980 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:18:980 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:981 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:981 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:18:982 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:983 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:983 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:984 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:984 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:985 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:986 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:986 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:987 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:987 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:988 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:988 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:989 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:989 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:990 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:18:990 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:18:991 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:18:992 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:18:992 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:18:993 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:993 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:994 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:994 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:18:995 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:18:995 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:18:996 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:18:997 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:18:997 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:18:998 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:18:998 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:18:999 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:18:999 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:000 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:19:001 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:001 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:002 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:19:002 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:003 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:003 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:004 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:005 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:005 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:006 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:006 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:007 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:007 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:008 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:009 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:009 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:010 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:010 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:19:011 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:011 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:012 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:19:012 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:013 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:014 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:014 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:015 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:015 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:016 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:017 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:017 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:018 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:018 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:019 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:019 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:020 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:020 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:19:021 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:022 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:022 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:19:023 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:023 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:024 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:024 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:025 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:026 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:026 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:027 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:027 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:028 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:028 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:029 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:030 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:030 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:031 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:19:031 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:032 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:032 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:19:033 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:034 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:035 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:035 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:036 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:037 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:037 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:038 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:038 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:039 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:039 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:040 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:040 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:041 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:041 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:19:042 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:042 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:19:043 UTC] 00000098 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:19:044 UTC] 00000098 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:17:19:044 UTC] 00000098 WebCollaborat >  invokeTAI Entry
[5/10/20 3:17:19:045 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:17:19:046 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:17:19:046 UTC] 00000098 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:17:19:047 UTC] 00000098 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:17:19:047 UTC] 00000098 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:17:19:048 UTC] 00000098 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:17:19:048 UTC] 00000098 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:17:19:049 UTC] 00000098 WebCollaborat >  shouldPerformLogin Entry
                                 isclite
                                 true
                                 false
[5/10/20 3:17:19:049 UTC] 00000098 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:17:19:050 UTC] 00000098 WebCollaborat 3   webSecAttr=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:17:19:051 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /sSLConfigCollection.do
                                 GET
                                 REQUEST
[5/10/20 3:17:19:051 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/sSLConfigCollection.do]
[5/10/20 3:17:19:052 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:19:052 UTC] 00000098 TrustAssociat >  getInstance Entry
[5/10/20 3:17:19:053 UTC] 00000098 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:17:19:054 UTC] 00000098 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:17:19:054 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:17:19:055 UTC] 00000098 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@501ef32c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:19:055 UTC] 00000098 WebAuthentica 3   challengeType = FORM Authorization header = null
[5/10/20 3:17:19:056 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:19:056 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:19:057 UTC] 00000098 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:17:19:058 UTC] 00000098 WebAuthentica >  handleSSO Entry
[5/10/20 3:17:19:059 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:17:19:059 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:17:19:060 UTC] 00000098 WebAuthentica 3   Attempting primary cookie validation for: LtpaToken2
[5/10/20 3:17:19:060 UTC] 00000098 WebAuthentica >  validateCookie Entry
                                 [Ljavax.servlet.http.Cookie;@27108cb5
                                 LtpaToken2
[5/10/20 3:17:19:061 UTC] 00000098 CookieHelper  >  getCookieValues Entry
                                 LtpaToken2
[5/10/20 3:17:19:062 UTC] 00000098 CookieHelper  <  getCookieValues Exit
                                 [acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==]
[5/10/20 3:17:19:062 UTC] 00000098 WebAuthentica >  validate Entry
[5/10/20 3:17:19:063 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:19:063 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:19:064 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:065 UTC] 00000098 ContextManage >  login Entry
                                 defaultWIMFileBasedRealm
                                 [B@b1f8bdec
                                 system.WEB_INBOUND
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@41361f93
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@3a189300
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
                                 <null>
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:17:19:065 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:19:066 UTC] 00000098 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:17:19:066 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:19:067 UTC] 00000098 ContextManage 3   Web inbound login config: system.WEB_INBOUND
[5/10/20 3:17:19:068 UTC] 00000098 ContextManage 3   Looking for opaque token on the thread before Subject cache lookup.
[5/10/20 3:17:19:068 UTC] 00000098 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 [B@b1f8bdec
                                 <null>
[5/10/20 3:17:19:069 UTC] 00000098 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:17:19:069 UTC] 00000098 ContextManage 3   Looking for subject from cache using token as lookup.
[5/10/20 3:17:19:070 UTC] 00000098 AuthCache     >  getSubject Entry
                                     69c020d5 729db5de 912b6d15 04965053 42d78026 c921f5f0 c6925a39 97a38ff4 
    b0734e79 0cb65c85 e0d348bf 3f505529 c1c49842 7b4560f2 9d00a7ad 10b6465a 
    ad8fc2e7 22ddb609 39575683 805946a5 151bcd15 4c359985 6ed1739c 8f79e0bd 
    c1509104 98661ec3 7b3cc7e3 ae518af1 1de892e7 8a0f7752 c0f41b90 4124efff 
    2f76eff6 14dfe87f 531c179e 8694c2ac cea813c2 80482c98 f1a2f191 d93f7e12 
    acb5f67a 2c5262ce 1c2f1426 2a858026 76e2da06 95faf81d 4dc14eed 449bf1e3 
    bbc8dc8b 6da0b373 a6da1fd2 3a461774 27a6e650 75e902e8 ad6369b1 a1695d73 
    be25a3a7 a1d7aee6 25df500e 055af3d2 1f5024ed 9530d079 d84f3a42 03b227e2 
    676d2dbc 09b5d0cf c376ed37 67ca5676 8f031a6d 3a715e6f c6bcc02a d907c2d3 
    87ad87d7 3af0053d a38fb47c 8ca29802 6ad7c611 00e17c13 5d7d66cf 9fb66176 
    552794e6 377a7a9a f5b53d1d 521a9f30 d01c6b35 5e3e0402 dbfe66c1 df18860c 
    c0b439e9 0a3197e5 0d41ccab 4db573f5 1edf6ad2 40d3d01a 913cc154 b39dcf91 
    3d7d8682 6e6cdac2 2a4fb7c6 890f9fe3 adfc23d8 7c32278a 12c1392f 94e08b58 
    f8bbf189 a3c03722 d364fdd1 1288dc1b e63c146f 30bf70d5 18064c14 64a102a6 
    2677ebfe cd07c178 4e52c8f8 282e6a9f a95e62ad e9b87b7c ea4a0bf1 93405858 
    a4ca9142 8e769219 90516b63 2fe5b56c
[5/10/20 3:17:19:070 UTC] 00000098 AuthCache     >  getSubject Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:19:071 UTC] 00000098 Cache         >  get Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:19:072 UTC] 00000098 Cache         <  get Exit
                                 com.ibm.ws.security.auth.CacheObject@93d7ea30
[5/10/20 3:17:19:072 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:073 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:073 UTC] 00000098 ContextManage >  isTokenMatch Entry
[5/10/20 3:17:19:074 UTC] 00000098 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:17:19:075 UTC] 00000098 SubjectHelper 3   Found default SSO token.
[5/10/20 3:17:19:075 UTC] 00000098 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:17:19:076 UTC] 00000098 ContextManage <  isTokenMatch: true Exit
[5/10/20 3:17:19:076 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:077 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:077 UTC] 00000098 AuthCache     >  getInstance Entry
[5/10/20 3:17:19:078 UTC] 00000098 AuthCache     3   getInstance SecurityConfigManager instance com.ibm.ws.security.config.SecurityConfigManagerImpl@dec4f4c1
[5/10/20 3:17:19:078 UTC] 00000098 AuthCache     3   getInstance using domainId admin
[5/10/20 3:17:19:079 UTC] 00000098 AuthCache     3   getInstance found AuthCache in instanceCache AuthCache: -1328712432 domainId: admin
[5/10/20 3:17:19:080 UTC] 00000098 AuthCache     <  getInstance AuthCache: -1328712432 domainId: admin Exit
[5/10/20 3:17:19:080 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:19:081 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:19:081 UTC] 00000098 WSCredentialT >  checkCushionValidityOfAllTokens Entry
                                 600000
                                 false
[5/10/20 3:17:19:082 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:19:083 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087520000
[5/10/20 3:17:19:083 UTC] 00000098 WSCredentialI >  isForwardable Entry
[5/10/20 3:17:19:084 UTC] 00000098 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:17:19:084 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:19:085 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:19:085 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:086 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:19:087 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:19:087 UTC] 00000098 WSCredentialT 3   Total number of Subject tokens to check: 3
[5/10/20 3:17:19:088 UTC] 00000098 WSCredentialT 3   Time remaining is 6280 seconds, for token: com.ibm.ws.security.token.AuthenticationTokenImpl
[5/10/20 3:17:19:089 UTC] 00000098 WSCredentialT 3   Time remaining is 6277 seconds, for token: com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:17:19:089 UTC] 00000098 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:12:00 UTC 2020
[5/10/20 3:17:19:090 UTC] 00000098 WSCredentialT 3   Time remaining is 6280 seconds, for token: com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:17:19:090 UTC] 00000098 WSCredentialT <  checkCushionValidityOfAllTokens -> true Exit
[5/10/20 3:17:19:091 UTC] 00000098 ContextManage 3   login(realm, token, . . .): is subject valid? true
[5/10/20 3:17:19:091 UTC] 00000098 ContextManage <  login(realm, token, authMech, . . .) Exit
[5/10/20 3:17:19:092 UTC] 00000098 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:17:19:093 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:093 UTC] 00000098 WebAuthentica >  checkSubject  Entry
[5/10/20 3:17:19:094 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:094 UTC] 00000098 WebAuthentica <  checkSubject : true Exit
[5/10/20 3:17:19:095 UTC] 00000098 WebAuthentica <  validate Exit
[5/10/20 3:17:19:095 UTC] 00000098 WebAuthentica 3   validateCookie the LTPA token was valid.
[5/10/20 3:17:19:096 UTC] 00000098 WebAuthentica <  validateCookie successful ltpa token validation of acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA== Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:19:097 UTC] 00000098 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 FORM
[5/10/20 3:17:19:097 UTC] 00000098 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: FORM
[5/10/20 3:17:19:098 UTC] 00000098 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:17:19:098 UTC] 00000098 WebAuthentica <  handleSSO: found cookie Exit
[5/10/20 3:17:19:099 UTC] 00000098 WebAuthentica >  restorePostParams Entry
[5/10/20 3:17:19:100 UTC] 00000098 WebAuthentica 3    method : GET URL:/ibm/console/sSLConfigCollection.do
[5/10/20 3:17:19:100 UTC] 00000098 WebAuthentica 3   postParamSaveMethod string: Cookie
[5/10/20 3:17:19:101 UTC] 00000098 WebAuthentica 3   postParamSaveMethod value: 0
[5/10/20 3:17:19:101 UTC] 00000098 WebAuthentica <  restorePostParams Exit
[5/10/20 3:17:19:102 UTC] 00000098 WebAuthentica <  authenticate 1 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:19:103 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:17:19:103 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:104 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:19:104 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:105 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:19:105 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:106 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:19:106 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:19:107 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:108 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:108 UTC] 00000098 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:109 UTC] 00000098 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:19:109 UTC] 00000098 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:17:19:110 UTC] 00000098 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:17:19:110 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:111 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:17:19:112 UTC] 00000098 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:19:112 UTC] 00000098 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:17:19:113 UTC] 00000098 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:17:19:113 UTC] 00000098 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:19:114 UTC] 00000098 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:17:19:114 UTC] 00000098 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:17:19:114 UTC] 00000098 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:17:19:116 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:116 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:117 UTC] 00000098 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:17:19:117 UTC] 00000098 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:17:19:118 UTC] 00000098 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:17:19:118 UTC] 00000098 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:17:19:119 UTC] 00000098 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:17:19:120 UTC] 00000098 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:17:19:120 UTC] 00000098 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:17:19:121 UTC] 00000098 AuthzPropToke 3   Expiration set to: Sun May 10 05:17:19 UTC 2020
[5/10/20 3:17:19:122 UTC] 00000098 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:17:19:122 UTC] 00000098 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:17:19:123 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:19:124 UTC] 00000098 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:17:19:125 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:19:123 UTC] 00000098 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:19:126 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:19:127 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:19:126 UTC] 00000098 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:19:129 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:17:19:129 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:19:130 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:19:131 UTC] 00000098 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:17:19:132 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:19:132 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:19:133 UTC] 00000098 WebCollaborat >  validSecAttrs Entry
                                 admin_host:/ibm/console
                                 /sSLConfigCollection.do
                                 GET
                                 false
                                 isclite
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@41361f93
                                 admin_host
                                 false
[5/10/20 3:17:19:133 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:19:134 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:19:135 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:19:135 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:19:136 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:19:136 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /sSLConfigCollection.do
                                 GET
[5/10/20 3:17:19:137 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:19:138 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:19:138 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:19:139 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:139 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:140 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:141 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:19:141 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:142 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:142 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:143 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:143 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:144 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:144 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:145 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:145 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:146 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:146 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:147 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:147 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:148 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:148 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:19:149 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:150 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:150 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:19:151 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:152 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:152 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:153 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:153 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:154 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:154 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:155 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:155 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:156 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:157 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:157 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:158 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:158 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:159 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:19:159 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:160 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:160 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:19:161 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:161 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:162 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:163 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:163 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:164 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:164 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:165 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:165 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:166 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:166 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:167 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:168 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:168 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:169 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:19:169 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:170 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:171 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:19:171 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:172 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:173 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:174 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:174 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:175 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:175 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:176 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:177 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:177 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:178 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:178 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:179 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:180 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:181 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:19:181 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:182 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:183 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:19:183 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:184 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:185 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:185 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:186 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:186 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:187 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:188 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:188 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:189 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:189 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:190 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:190 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:191 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:192 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:19:192 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:19:193 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:194 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:19:194 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:195 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:195 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:196 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:197 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:197 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:198 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:198 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:199 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:199 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:200 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:201 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:201 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:202 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:202 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:19:203 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:203 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:204 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:19:204 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:205 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:205 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:206 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:206 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:207 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:208 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:208 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:209 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:209 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:210 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:210 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:211 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:211 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:212 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:19:213 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:213 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:214 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:19:214 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:215 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:216 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:216 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:217 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:217 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:218 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:218 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:219 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:219 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:220 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:221 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:221 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:222 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:222 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:19:223 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:223 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:224 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:19:224 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:225 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:226 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:227 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:228 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:229 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:229 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:230 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:230 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:231 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:232 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:232 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:233 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:233 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:234 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:19:235 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:236 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:237 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:19:237 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:238 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:239 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:239 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:240 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:240 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:241 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:241 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:242 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:242 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:243 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:243 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:244 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:245 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:19:246 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:246 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:247 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:19:248 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:248 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:250 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:250 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:251 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:252 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:252 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:253 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:254 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:255 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:255 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:256 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:19:257 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:258 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:259 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:19:260 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:260 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:261 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:261 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:262 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:262 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:263 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:263 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:264 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:265 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:265 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:266 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:266 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:267 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:267 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:19:268 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:269 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:269 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:19:270 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:270 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:271 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:272 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:272 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:273 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:273 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:274 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:274 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:275 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:275 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:276 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:277 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:278 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:278 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:19:279 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:280 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:281 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:19:281 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:282 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:283 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:283 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:284 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:284 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:285 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:286 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:286 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:287 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:287 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:288 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:288 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:289 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:289 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:19:290 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:291 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:291 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:19:292 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:292 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:293 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:293 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:294 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:294 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:295 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:295 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:296 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:297 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:297 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:298 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:298 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:299 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:299 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:19:300 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:301 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:301 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:19:302 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:302 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:303 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:304 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:304 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:305 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:305 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:306 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:307 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:307 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:308 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:308 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:309 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:310 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:310 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:19:311 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:311 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:312 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:19:312 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:313 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:314 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:314 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:315 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:315 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:316 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:316 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:317 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:317 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:318 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:319 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:319 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:320 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:320 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:19:321 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:321 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:322 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:19:322 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:323 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:324 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:324 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:325 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:325 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:326 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:326 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:327 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:327 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:328 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:328 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:329 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:329 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:330 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:19:331 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:331 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:332 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:19:332 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:333 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:333 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:334 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:334 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:335 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:335 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:336 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:336 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:337 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:338 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:338 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:339 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:339 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:340 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:19:341 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:341 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:342 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:19:342 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:343 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:344 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:344 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:345 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:345 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:346 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:347 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:347 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:348 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:348 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:349 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:349 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:350 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:350 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:19:351 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:351 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:352 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:19:353 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:353 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:354 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:354 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:355 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:355 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:356 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:356 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:357 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:358 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:358 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:360 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:361 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:19:361 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:362 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:362 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:19:363 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:363 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:365 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:366 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:366 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:367 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:367 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:368 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:368 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:369 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:369 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:370 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:370 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:19:371 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:371 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:372 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:19:372 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:373 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:374 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:374 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:375 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:375 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:376 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:376 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:377 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:378 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:378 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:379 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:380 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:381 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:19:381 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:382 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:382 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:19:383 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:383 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:384 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:384 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:385 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:385 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:386 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:387 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:387 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:388 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:388 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:389 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:389 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:390 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:391 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:19:391 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:392 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:392 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:19:393 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:393 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:394 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:395 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:396 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:396 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:397 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:397 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:398 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:399 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:399 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:400 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:401 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:19:401 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:402 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:402 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:19:403 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:404 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:404 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:405 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:406 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:406 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:407 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:407 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:408 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:409 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:409 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:410 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:410 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:411 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:19:411 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:412 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:412 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:19:413 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:413 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:414 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:415 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:415 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:416 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:416 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:417 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:417 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:418 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:418 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:419 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:420 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:420 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:421 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:19:422 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:422 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:423 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:19:423 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:424 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:424 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:425 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:425 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:426 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:426 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:427 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:427 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:428 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:428 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:429 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:430 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:430 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:430 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:19:431 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:432 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:432 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:19:433 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:433 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:434 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:434 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:435 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:435 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:436 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:437 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:437 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:438 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:438 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:439 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:440 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:440 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:441 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:19:441 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:442 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:442 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:19:443 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:444 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:444 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:445 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:445 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:446 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:446 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:447 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:447 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:448 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:449 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:449 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:450 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:450 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:451 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:19:451 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:452 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:452 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:19:453 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:453 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:454 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:454 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:455 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:456 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:456 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:457 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:457 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:458 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:459 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:459 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:460 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:460 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:461 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:19:461 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:462 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:463 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:19:463 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:464 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:465 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:465 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:466 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:466 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:467 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:468 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:468 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:469 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:469 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:470 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:471 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:471 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:472 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:19:472 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:473 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:473 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:19:474 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:474 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:475 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:475 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:476 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:476 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:477 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:477 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:478 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:478 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:479 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:480 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:480 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:481 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:481 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:19:482 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:483 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:483 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:19:484 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:484 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:485 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:485 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:486 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:486 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:487 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:487 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:488 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:489 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:489 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:490 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:490 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:491 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:491 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:19:492 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:493 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:493 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:19:494 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:494 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:495 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:495 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:496 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:496 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:497 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:498 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:498 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:499 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:500 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:500 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:501 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:501 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:502 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:19:502 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:503 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:503 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:19:504 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:504 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:505 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:506 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:506 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:507 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:507 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:508 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:508 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:509 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:509 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:510 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:510 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:511 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:511 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:19:512 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:512 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:513 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:19:513 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:514 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:514 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:515 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:516 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:516 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:517 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:517 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:518 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:519 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:519 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:520 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:521 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:521 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:19:522 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:522 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:523 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:19:523 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:524 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:524 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:525 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:526 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:526 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:527 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:527 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:528 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:528 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:529 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:529 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:530 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:530 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:531 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:19:532 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:532 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:533 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:19:533 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:534 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:534 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:535 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:535 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:536 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:536 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:537 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:538 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:539 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:539 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:540 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:540 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:541 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:541 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:19:542 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:543 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:543 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:19:544 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:544 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:545 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:546 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:546 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:547 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:547 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:548 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:548 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:549 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:550 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:551 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:551 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:19:552 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:552 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:553 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:19:553 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:554 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:554 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:555 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:556 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:556 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:557 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:557 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:558 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:558 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:559 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:559 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:560 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:560 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:561 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:19:562 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:562 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:563 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:19:563 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:564 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:564 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:565 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:565 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:566 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:567 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:567 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:568 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:568 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:569 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:569 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:570 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:570 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:571 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:19:571 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:572 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:572 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:19:573 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:573 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:574 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:575 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:575 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:576 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:576 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:577 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:578 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:578 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:579 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:579 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:580 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:580 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:581 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:19:582 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:582 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:583 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:19:583 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:584 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:584 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:585 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:585 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:586 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:587 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:587 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:588 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:588 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:589 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:589 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:590 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:590 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:591 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:19:592 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:592 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:593 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:19:593 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:594 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:594 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:595 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:595 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:596 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:596 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:597 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:598 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:598 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:599 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:599 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:600 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:600 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:601 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:19:602 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:602 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:603 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:19:603 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:604 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:604 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:605 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:605 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:606 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:606 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:607 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:608 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:608 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:609 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:609 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:610 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:610 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:611 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:19:611 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:612 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:612 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:19:613 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:613 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:614 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:614 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:615 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:615 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:617 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:617 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:618 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:618 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:619 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:619 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:620 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:620 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:621 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:19:621 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:622 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:622 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:19:623 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:623 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:624 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:625 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:625 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:626 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:626 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:627 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:627 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:628 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:628 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:630 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:630 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:19:631 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:632 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:19:632 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:19:633 UTC] 00000098 WebResourceCo >  matches Entry
                                 /sSLConfigCollection.do
                                 GET
                                 true
[5/10/20 3:17:19:633 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:634 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:635 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:635 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:19:636 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:19:637 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:19:637 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:19:638 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:19:638 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:19:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:19:639 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:19:640 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:19:640 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:19:641 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:19:641 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:19:642 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /sSLConfigCollection.do
                                 GET
                                 REQUEST
[5/10/20 3:17:19:644 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/sSLConfigCollection.do]
[5/10/20 3:17:19:644 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:19:645 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:19:645 UTC] 00000098 WebCollaborat 3    List of required roles for uri /sSLConfigCollection.do is: 
[5/10/20 3:17:19:646 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:19:646 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:19:647 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:19:647 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:19:648 UTC] 00000098 WebCollaborat 3    required role: nobody
[5/10/20 3:17:19:648 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:19:649 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:19:650 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:19:650 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:19:651 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /sSLConfigCollection.do
[5/10/20 3:17:19:651 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:19:652 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:19:653 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:19:653 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:19:654 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:19:654 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /sSLConfigCollection.do
[5/10/20 3:17:19:655 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:19:658 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:19:659 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:19:660 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /sSLConfigCollection.do: false
[5/10/20 3:17:19:661 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /sSLConfigCollection.do are: com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:19:661 UTC] 00000098 WebCollaborat 3   URI -  /sSLConfigCollection.do.GET is protected
[5/10/20 3:17:19:662 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:19:663 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:663 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:664 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:19:665 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:19:666 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:19:666 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:19:667 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:19:667 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:19:668 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:19:668 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:19:669 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:19:670 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:19:671 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:19:671 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:19:672 UTC] 00000098 WebCollaborat 3   required roles: nobody
[5/10/20 3:17:19:672 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:19:673 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:19:674 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:19:674 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:19:675 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:19:675 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:19:676 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@9d5c7f85
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b97eff1
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:676 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:19:677 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:19:678 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
                                 nobody
[5/10/20 3:17:19:679 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:680 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:19:680 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:19:681 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:19:683 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:19:683 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:684 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:19:684 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:19:686 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:19:686 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:19:687 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:19:687 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:19:688 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:689 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:689 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:690 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:19:691 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:19:692 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:19:692 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:19:693 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:19:693 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:19:694 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:695 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:695 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:696 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:696 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:19:697 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:697 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:19:698 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:698 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:699 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:699 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:19:700 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:19:701 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:19:701 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:19:702 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:19:702 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:19:703 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:19:704 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:704 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:19:706 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:19:707 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:19:707 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:19:708 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:19:708 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:19:709 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:709 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:710 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:711 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:19:711 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:19:712 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:19:712 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:19:713 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:19:714 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /sSLConfigCollection.do succeeded. 
[5/10/20 3:17:19:714 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@50403551
[5/10/20 3:17:19:715 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@50403551
[5/10/20 3:17:19:715 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:19:716 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:19:717 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:717 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@501ef32c[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 action
                                 isclite
[5/10/20 3:17:19:719 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:19:720 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:19:720 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:19:721 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:19:721 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:19:722 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:19:722 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:19:723 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:724 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:19:724 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:19:725 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:19:725 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:726 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@5aaea025
[5/10/20 3:17:19:726 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@5aaea025
[5/10/20 3:17:19:727 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@3259cc41
                                 action
[5/10/20 3:17:19:728 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@3259cc41
                                 action
[5/10/20 3:17:19:729 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:19:729 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:19:730 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:730 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:731 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:731 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:19:732 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:733 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:19:733 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:19:734 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@57ec2c56
[5/10/20 3:17:19:739 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:740 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:741 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:743 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:743 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:744 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:745 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:745 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:746 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:747 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:748 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:751 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:752 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:753 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:754 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:755 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:756 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:756 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:757 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:758 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:758 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:759 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:764 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:766 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:767 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:768 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:770 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:771 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:772 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:772 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:773 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:773 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:774 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:775 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:776 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:777 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:778 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:778 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:779 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:779 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:780 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:781 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:781 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:782 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:783 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:783 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:784 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:785 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:785 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:786 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:786 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:787 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:787 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:788 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:788 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:793 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:794 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:794 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:795 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:796 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:797 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:797 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:798 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:799 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:799 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:800 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:802 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:802 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:803 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:803 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:804 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:804 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:805 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:805 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:806 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:806 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:807 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:807 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:19:808 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:809 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:19:810 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:810 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:811 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:811 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:812 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:812 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:813 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:813 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:814 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:815 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:815 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:816 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:817 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:817 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:818 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:818 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:819 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:820 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:821 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:821 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:822 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:822 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:824 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:825 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:825 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:826 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:827 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:828 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:828 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:829 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:829 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:830 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:830 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:832 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:832 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:833 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:833 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:834 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:834 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:835 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:835 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:836 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:837 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:837 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:844 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:845 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:846 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:846 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:847 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:848 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:849 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:849 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:850 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:851 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:851 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:852 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:853 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:854 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:854 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:855 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:855 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:856 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:857 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:857 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:858 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:858 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:859 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:860 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:861 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:861 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:862 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:862 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:863 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:863 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:864 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:865 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:865 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:866 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:867 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:868 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:868 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:869 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:869 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:870 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:870 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:871 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:871 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:872 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:874 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:874 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:875 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:876 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:876 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:877 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:878 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:878 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:879 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:879 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:879 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:880 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:881 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:882 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:882 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:883 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:883 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:884 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:884 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:885 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:886 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:886 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:887 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:888 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:888 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:889 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:889 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:890 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:891 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:891 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:892 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:892 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:893 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:897 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:898 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:900 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:901 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:902 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:903 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:903 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:904 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:904 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:905 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:906 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:907 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:908 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:909 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:909 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:910 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:911 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:911 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:912 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:912 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:913 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:914 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:915 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:916 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:916 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:917 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:917 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:918 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:919 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:919 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:920 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:920 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:921 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:922 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:923 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:923 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:924 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:925 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:925 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:926 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:927 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:927 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:928 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:928 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:937 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:938 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:940 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:941 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:942 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:943 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:944 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:945 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:946 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:946 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:947 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:948 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:949 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:19:950 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:19:950 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:19:951 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:19:952 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:19:952 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:19:953 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:19:953 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:19:954 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:955 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:958 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:959 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:960 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:961 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:962 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:963 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:19:964 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:19:965 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:19:965 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:19:966 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:19:968 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:969 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:970 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:971 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:971 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:973 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:975 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:975 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:976 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:977 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:977 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:978 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:19:979 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:19:979 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:19:980 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:19:980 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:19:982 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:983 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:983 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:984 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:985 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:986 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:986 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:987 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:988 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:988 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:989 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:19:990 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:19:990 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:19:991 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:19:992 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:19:993 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:994 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:994 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:995 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:19:995 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:19:997 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:997 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:19:998 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:19:998 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:19:999 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:19:999 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:000 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:001 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:001 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:002 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:003 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:004 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:004 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:005 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:006 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:010 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:011 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:012 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:018 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:019 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:020 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:021 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:022 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:022 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:023 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:024 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:025 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:026 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:028 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:029 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:029 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:030 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:031 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:032 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:032 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:033 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:034 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:035 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:035 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:036 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:036 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:037 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:038 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:038 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:039 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:039 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:041 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:041 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:042 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:042 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:043 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:044 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:045 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:045 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:046 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:046 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:047 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:048 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:048 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:049 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:050 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:051 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:052 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:052 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:053 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:054 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:054 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:055 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:056 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:058 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:058 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:059 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:059 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:060 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:061 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:062 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:063 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:063 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:064 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:066 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:067 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:067 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:068 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:069 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:069 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:070 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:070 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:072 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:073 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:074 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:074 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:075 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:076 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:077 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:077 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:078 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:078 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:081 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:081 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:082 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:082 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:083 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:232 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:233 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:234 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:235 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:236 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:237 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:237 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:238 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:239 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:239 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:240 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:240 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:241 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:242 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:242 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:243 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:244 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:244 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:245 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:245 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:246 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:247 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:248 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:248 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:249 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:249 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:250 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:251 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:251 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:252 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:253 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:254 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:255 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:256 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:257 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:257 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:258 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:259 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:260 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:261 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:262 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:262 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:263 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:264 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:264 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:265 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:266 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:267 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:267 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:268 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:269 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:269 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:270 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:270 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:271 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:271 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:272 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:273 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:273 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:274 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:274 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:275 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:276 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:276 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:277 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:278 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:278 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:279 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:279 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:280 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:280 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:281 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:282 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:282 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:283 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:284 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:284 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:285 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:285 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:286 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:286 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:287 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:288 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:292 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:293 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:294 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:294 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:295 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:296 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:296 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:297 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:298 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:298 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:299 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:300 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:300 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:301 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:302 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:302 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:303 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:304 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:308 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:309 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:310 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:311 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:311 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:312 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:312 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:313 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:313 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:314 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:314 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:315 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:316 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:317 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:317 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:318 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:318 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:319 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:320 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:321 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:321 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:322 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:322 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:323 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:324 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:324 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:325 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:326 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:326 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:327 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:328 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:328 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:329 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:329 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:330 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:331 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:332 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:333 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:334 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:334 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:335 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:336 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:336 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:337 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:337 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:338 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:339 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:340 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:340 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:341 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:341 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:342 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:342 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:343 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:344 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:344 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:345 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:345 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:346 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:347 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:347 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:348 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:348 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:349 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:350 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:350 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:351 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:351 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:352 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:353 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:353 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:354 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:355 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:355 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:356 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:356 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:357 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:358 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:358 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:359 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:360 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:360 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:361 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:361 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:362 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:362 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:363 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:364 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:364 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:365 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:365 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:366 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:367 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:367 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:368 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:368 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:369 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:369 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:370 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:370 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:371 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:371 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:372 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:373 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:373 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:374 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:374 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:375 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:376 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:376 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:377 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:377 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:378 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:380 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:381 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:381 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:382 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:382 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:383 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:383 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:384 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:385 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:385 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:386 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:387 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:387 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:388 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:388 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@bf55a778
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configboxLayout.jsp
                                 false
[5/10/20 3:17:20:389 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:390 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:390 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:391 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:391 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:392 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:392 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:393 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:393 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:393 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:395 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:395 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:396 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:396 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@d096975c
[5/10/20 3:17:20:397 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:398 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:399 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:399 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:400 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:401 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@d096975c
[5/10/20 3:17:20:402 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:402 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:403 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:403 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:404 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:404 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:405 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:405 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:406 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:406 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:407 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:408 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:409 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:409 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:410 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:410 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:411 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:412 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:412 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:413 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:413 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:414 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:415 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@6368f830
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/browser_detection.jsp
                                 false
[5/10/20 3:17:20:415 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:416 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:417 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:417 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:418 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:418 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:419 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:420 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:420 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:420 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:422 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:422 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:423 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:423 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2d75760f
[5/10/20 3:17:20:424 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:424 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:425 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:426 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:426 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:427 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2d75760f
[5/10/20 3:17:20:427 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:428 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:429 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:429 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:430 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:430 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:431 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:431 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:432 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:432 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:433 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:434 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@7d0a926e
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/bidi.jsp
                                 false
[5/10/20 3:17:20:434 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:435 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:435 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:436 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:437 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:437 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:438 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:438 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:439 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:438 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:441 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:441 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:442 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:442 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@738b7407
[5/10/20 3:17:20:443 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:443 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:444 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:445 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:445 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:446 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@738b7407
[5/10/20 3:17:20:447 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:447 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:448 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:449 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:449 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:450 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:450 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:451 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:451 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:452 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:453 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:453 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@738b7407
[5/10/20 3:17:20:454 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:454 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:455 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:456 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:456 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:457 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:457 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:458 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:459 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:459 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:460 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:460 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:460 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:462 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:462 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:463 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:463 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:464 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@738b7407
[5/10/20 3:17:20:464 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:465 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:466 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:466 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:467 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:467 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:468 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:468 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:469 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:470 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:470 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:471 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:471 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:472 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:473 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:473 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:474 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:474 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:475 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:475 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:476 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:476 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:477 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:478 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2d75760f
[5/10/20 3:17:20:478 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:479 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:479 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:480 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:480 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:481 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:482 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:482 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:483 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:483 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:484 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:484 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:484 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:486 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:486 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:487 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:487 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:488 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2d75760f
[5/10/20 3:17:20:488 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:489 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@82c7f38f
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/content_accessibility.jsp
                                 false
[5/10/20 3:17:20:490 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:490 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:491 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:491 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:492 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:492 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:493 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:494 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:494 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:494 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:495 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:496 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:496 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:497 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@57b8ae56
[5/10/20 3:17:20:497 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:498 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:498 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:499 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:499 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:500 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@57b8ae56
[5/10/20 3:17:20:501 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:501 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:502 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:503 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:503 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:504 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:504 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:505 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:506 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:506 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:507 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:507 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@57b8ae56
[5/10/20 3:17:20:508 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:508 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:509 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:509 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:510 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:510 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:511 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:511 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:512 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:513 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:513 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:514 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:513 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:515 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:515 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:516 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:516 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:517 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@57b8ae56
[5/10/20 3:17:20:517 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:518 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:519 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:519 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:520 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:520 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:521 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:522 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:523 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:523 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:524 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:524 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:528 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@b0a9c674
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/detailTitleLayout.jsp
                                 false
[5/10/20 3:17:20:529 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:530 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:530 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:531 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:532 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:532 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:533 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:533 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:534 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:533 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:536 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:536 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:537 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:538 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b58ead4f
[5/10/20 3:17:20:538 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:539 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:539 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:540 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:540 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:541 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b58ead4f
[5/10/20 3:17:20:542 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:543 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:543 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:544 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:544 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:545 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:545 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:546 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:547 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:547 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:548 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:549 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:549 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:550 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:550 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:551 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:552 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:552 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:553 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:553 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:554 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:554 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:555 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:555 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:556 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:556 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:557 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:557 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:558 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:558 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:559 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:559 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:560 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:561 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:562 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:562 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:563 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:563 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:564 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:564 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:565 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:565 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:566 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:566 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:568 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:569 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:570 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:570 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:571 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:571 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:572 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:572 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:573 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:573 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:574 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:575 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@a88f1474
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/scopeTitle.jsp
                                 false
[5/10/20 3:17:20:576 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:576 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:577 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:577 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:578 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:578 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:579 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:579 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:580 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:579 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:581 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:582 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:582 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:583 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b4dc4f2f
[5/10/20 3:17:20:583 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:584 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:584 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:585 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:585 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:586 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@b4dc4f2f
[5/10/20 3:17:20:587 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:588 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:588 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:589 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:589 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:590 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:590 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:591 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:592 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:592 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:593 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:594 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@b4dc4f2f
[5/10/20 3:17:20:594 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:595 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:595 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:596 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:596 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:597 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:598 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:598 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:599 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:599 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:600 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:600 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:600 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:601 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:602 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:602 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:603 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:604 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@b4dc4f2f
[5/10/20 3:17:20:604 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:605 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@d3182824
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/portletToolbar.jsp
                                 false
[5/10/20 3:17:20:606 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:606 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:607 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:607 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:608 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:609 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:609 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:610 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:611 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:610 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:612 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:612 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:613 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:613 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@50c8b5ad
[5/10/20 3:17:20:614 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:615 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:615 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:616 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:616 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:617 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@50c8b5ad
[5/10/20 3:17:20:618 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:618 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:619 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:619 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:620 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:620 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:621 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:622 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:622 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:623 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:623 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:624 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:625 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:625 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:626 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:626 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:627 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@c9884448
                                 System
[5/10/20 3:17:20:628 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:20:628 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:20:629 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:629 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:630 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:20:630 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:631 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:20:632 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:20:632 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:633 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:633 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:20:634 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:20:635 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:20:635 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:20:636 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:20:636 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:20:637 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:637 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:638 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:638 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:639 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:639 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:640 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:640 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:641 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:641 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:642 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:643 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:643 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:644 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:644 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:645 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:644 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:646 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:646 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:647 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:647 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:20:648 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:648 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:649 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:20:650 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:650 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:651 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:652 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:652 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:653 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:20:653 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:654 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:655 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:655 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:656 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:20:656 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:20:657 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:658 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:658 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:659 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:659 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:660 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:660 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:661 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:661 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:662 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:662 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:662 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:663 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:664 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:665 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:665 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:20:666 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@50c8b5ad
[5/10/20 3:17:20:666 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:667 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:667 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:668 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:668 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:669 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:669 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:670 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:671 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:671 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:671 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:672 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:671 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:673 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:674 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:674 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:675 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:675 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@50c8b5ad
[5/10/20 3:17:20:676 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:676 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:677 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:678 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:678 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:679 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:679 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:680 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:680 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:681 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:682 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:682 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:683 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@b58ead4f
[5/10/20 3:17:20:684 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:684 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:685 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:685 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:686 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:686 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:687 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:688 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:689 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:689 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:690 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:690 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:690 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:691 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:692 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:693 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:693 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:694 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@b58ead4f
[5/10/20 3:17:20:694 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:695 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:695 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:696 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:696 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:697 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:698 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:698 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:699 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:699 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:700 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:700 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:703 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@b31a000b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configTabLayout.jsp
                                 false
[5/10/20 3:17:20:704 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:704 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:705 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:706 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:706 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:707 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:708 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:708 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:709 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:708 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:710 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:710 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:711 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:712 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@88ce9664
[5/10/20 3:17:20:712 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:713 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:713 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:714 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:715 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:715 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@88ce9664
[5/10/20 3:17:20:716 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:717 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:717 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:718 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:718 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:719 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:720 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:720 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:721 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:721 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:722 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:723 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:723 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:724 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:725 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:725 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:726 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:726 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:727 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:727 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:728 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:729 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:731 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@9a652a6b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/buttonLayout.jsp
                                 false
[5/10/20 3:17:20:732 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:733 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:733 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:734 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:735 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:736 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:736 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:737 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:737 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:737 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:739 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:739 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:740 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:740 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3b29dfad
[5/10/20 3:17:20:741 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:741 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:742 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:742 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:743 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:744 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3b29dfad
[5/10/20 3:17:20:745 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:745 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:746 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:746 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:747 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:748 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:748 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:749 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:749 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:750 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:750 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:752 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:752 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:753 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:754 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:754 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:755 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@a267eed7
                                 System
[5/10/20 3:17:20:756 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:20:757 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:20:757 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:758 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:759 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:20:759 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:760 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:20:760 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:20:761 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:762 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:762 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:20:763 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:20:763 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:20:764 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:20:765 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:20:765 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:20:766 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:766 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:767 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:767 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:768 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:768 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:769 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:770 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:770 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:771 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:771 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:772 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:772 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:773 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:774 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:774 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:774 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:775 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:776 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:776 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:777 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:20:777 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:778 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:779 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:20:780 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:781 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:781 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:803 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:804 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:805 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:806 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:808 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:809 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:810 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:811 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:811 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:812 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:812 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:812 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:814 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:814 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:815 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:816 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:20:817 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:818 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:818 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:819 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:819 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:820 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:820 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:821 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:822 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:822 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:823 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:824 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:824 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:825 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:825 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:826 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:826 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:20:827 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:828 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:20:828 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:20:829 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:20:829 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:830 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:830 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:831 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:831 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:832 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:832 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:20:833 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:834 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:834 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:20:835 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:835 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:20:836 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:20:836 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:837 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:838 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:20:838 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:20:839 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:20:839 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:20:840 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:20:841 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:20:841 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:842 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:842 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@93a148a9
                                 Specified
[5/10/20 3:17:20:843 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:20:844 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:844 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:845 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:845 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:846 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:847 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:847 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:848 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:849 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:849 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:850 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:850 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:851 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:851 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:852 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:851 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:853 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:853 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:854 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:855 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:20:855 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:856 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:856 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:20:857 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:858 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:858 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:859 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:859 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:860 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:20:860 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:861 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:861 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:862 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:863 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:20:863 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:20:864 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:865 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:865 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:866 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:866 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:867 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:20:868 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:868 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:869 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:869 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:870 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:20:870 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:20:871 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:872 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:872 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:873 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:873 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:874 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:875 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:875 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:876 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:20:876 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:877 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:878 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:878 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:879 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:20:879 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:20:880 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:881 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:881 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:882 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:882 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:883 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:20:883 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:884 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:884 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:20:885 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:20:886 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:20:886 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:20:887 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:20:887 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:888 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:20:889 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:890 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:890 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:891 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:891 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:892 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:893 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:893 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:894 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:894 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:895 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:894 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:896 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:896 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:897 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:897 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:20:898 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@3b29dfad
[5/10/20 3:17:20:899 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:20:899 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:900 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:901 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:901 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:902 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:20:902 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:903 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:20:903 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:904 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:905 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:905 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:905 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:20:906 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:20:907 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:907 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:20:908 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:20:909 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@3b29dfad
[5/10/20 3:17:20:909 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:20:910 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:910 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:20:911 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:20:911 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:912 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:912 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:20:913 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:20:914 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:20:914 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:20:915 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:20:915 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:20:924 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@73b8ed0b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configGenPropLayout.jsp
                                 false
[5/10/20 3:17:20:925 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:20:927 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:20:928 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:929 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:930 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:931 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:931 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:932 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:933 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:932 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:934 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:934 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:935 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:935 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3bfafb5a
[5/10/20 3:17:20:936 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:937 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:937 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:20:938 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:938 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:939 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@3bfafb5a
[5/10/20 3:17:20:945 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configGenPropLayout.jsp
[5/10/20 3:17:20:946 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:948 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:949 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:950 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:951 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:951 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:952 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:951 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:953 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:954 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:954 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:955 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@24431cd8
[5/10/20 3:17:20:955 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:20:956 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:956 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:957 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:20:958 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:958 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:20:959 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:20:959 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:20:960 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:20:961 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:20:961 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:20:962 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:20:963 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:20:963 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:20:964 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:20:964 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:965 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:965 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:20:966 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:966 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:967 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:20:967 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:20:968 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:20:968 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:20:969 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:20:969 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configGenPropLayout.jsp
                                 true
[5/10/20 3:17:20:970 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:20:971 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:20:971 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:972 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:973 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:20:973 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:974 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:973 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:975 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:20:975 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:20:976 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:20:977 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@247fd7b5
[5/10/20 3:17:20:977 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:20:978 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:20:978 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@6bdc2891[isclite#isclite.war#/secure/layouts/configGenPropLayout.jsp]
[5/10/20 3:17:20:979 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:979 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:20:980 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:20:981 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:20:981 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:982 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/configGenPropLayout.jsp
                                 isclite
[5/10/20 3:17:20:982 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:20:983 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:20:983 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:20:984 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:20:984 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:20:985 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:20:985 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:20:986 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:986 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:20:987 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:20:987 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:20:988 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:990 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@88c3e3c9
[5/10/20 3:17:20:991 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@88c3e3c9
[5/10/20 3:17:20:991 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@73ffec38
                                 /secure/layouts/configGenPropLayout.jsp
[5/10/20 3:17:20:992 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@73ffec38
                                 /secure/layouts/configGenPropLayout.jsp
[5/10/20 3:17:20:992 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:20:993 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:20:993 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:20:994 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:995 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:995 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:20:996 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:20:996 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:20:997 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:20:998 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@247fd7b5
[5/10/20 3:17:20:998 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@24431cd8
[5/10/20 3:17:20:999 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:000 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:000 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:001 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:001 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:002 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:002 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:003 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:003 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:004 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:004 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:005 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:005 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:006 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:006 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:007 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:007 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:008 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:008 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:009 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:009 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:011 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:011 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:012 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:012 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:012 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:013 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:013 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:014 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:015 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/configGenPropLayout.jsp]: Initialization successful.
[5/10/20 3:17:21:017 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@24431cd8
[5/10/20 3:17:21:017 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:017 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:018 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:019 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:020 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:020 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:021 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:021 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:018 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:022 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:023 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:023 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:024 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:024 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:022 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:026 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:026 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:027 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:027 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:027 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:028 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:029 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:029 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:025 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:031 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:031 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:030 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:032 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@24431cd8
[5/10/20 3:17:21:033 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:032 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:034 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:035 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:035 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:036 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:036 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:037 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:034 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:038 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:038 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:037 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:039 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:040 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:040 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:041 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:041 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:042 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:039 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:043 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:042 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:044 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:044 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:045 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:045 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:043 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:046 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:047 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:047 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:048 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:048 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:050 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:21:051 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:051 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:21:052 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:053 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:053 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@6fdc1dd4
                                 System
[5/10/20 3:17:21:054 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:21:054 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:055 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:056 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:056 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:057 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:057 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:058 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:058 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:059 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:059 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:060 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:060 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:061 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:061 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:062 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:062 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:063 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:063 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:064 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:064 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:065 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:066 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:066 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:067 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:067 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:068 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:069 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:069 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:070 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:071 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:071 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:071 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:072 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:073 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:073 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:074 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:21:074 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:075 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:075 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:21:077 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:077 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:078 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:099 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:101 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:102 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:103 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:104 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:105 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:106 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:107 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:108 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:108 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:109 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:108 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:110 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:111 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:111 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:112 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:21:113 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:113 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:114 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:115 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:115 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:116 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:116 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:117 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:118 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:118 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:119 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:119 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:120 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:120 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:121 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:121 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:122 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:122 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:123 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:124 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:124 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:125 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:125 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:126 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:126 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:127 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:128 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:128 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:21:129 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:129 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:21:130 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:21:131 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:21:131 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:132 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:132 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:133 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:133 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:134 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:135 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:135 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:136 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:136 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:137 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:138 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:138 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:139 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:139 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:140 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:141 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:141 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:142 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:142 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:143 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:143 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:144 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:144 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@d2825257
                                 Specified
[5/10/20 3:17:21:145 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:21:146 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:146 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:147 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:147 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:148 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:149 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:149 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:150 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:150 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:151 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:151 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:152 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:152 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:153 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:153 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:153 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:155 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:155 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:156 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:156 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:21:157 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:157 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:158 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:21:159 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:160 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:160 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:161 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:161 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:162 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:21:162 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:163 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:163 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:164 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:165 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:21:165 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:21:166 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:166 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:167 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:168 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:168 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:169 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:21:169 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:170 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:170 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:171 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:171 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:21:172 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:21:172 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:21:173 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:174 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:21:174 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:175 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:175 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:176 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:177 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:177 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:21:178 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:178 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:179 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:180 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:180 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:21:181 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:21:181 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:182 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:182 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:183 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:183 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:184 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:21:184 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:185 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:186 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:186 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:21:187 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:21:188 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:21:188 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:21:189 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:189 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:21:190 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:191 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:191 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:192 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:192 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:193 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:193 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:194 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:194 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:195 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:196 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:195 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:197 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:197 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:198 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:198 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:21:201 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:21:201 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:202 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:21:202 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:203 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:204 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:204 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:205 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:205 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:21:206 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:21:207 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:21:207 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:21:208 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:21:208 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:209 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:209 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:210 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:210 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:213 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@60cbb8a7
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
                                 false
[5/10/20 3:17:21:214 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:214 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:215 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:215 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:216 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:216 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:217 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:217 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:218 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:217 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:219 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:219 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:220 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:220 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@99a1ca7d
[5/10/20 3:17:21:221 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:222 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:222 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:223 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:223 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:224 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@99a1ca7d
[5/10/20 3:17:21:226 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
[5/10/20 3:17:21:227 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:227 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:228 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:229 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:229 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:230 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:230 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:230 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:231 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:232 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:232 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:233 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@4eb5a71c
[5/10/20 3:17:21:234 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:234 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:235 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:235 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:236 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:236 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:237 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:237 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:238 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:238 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:239 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:240 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:240 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:241 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:241 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:242 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:242 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:243 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:244 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:244 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:245 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:246 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:246 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:21:247 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:247 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:248 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
                                 true
[5/10/20 3:17:21:248 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:249 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:249 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:250 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:251 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:251 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:252 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:251 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:253 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:253 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:254 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:255 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f4ca26ac
[5/10/20 3:17:21:255 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:256 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:256 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@37b13b06[isclite#isclite.war#/com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp]
[5/10/20 3:17:21:257 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:257 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:21:258 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:21:259 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:259 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:260 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
                                 isclite
[5/10/20 3:17:21:260 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:21:261 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:21:262 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:21:262 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:21:263 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:21:263 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:21:264 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:21:265 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:265 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:21:266 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:21:266 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:21:267 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:267 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@62498d21
[5/10/20 3:17:21:268 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@62498d21
[5/10/20 3:17:21:269 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@c30a4d20
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
[5/10/20 3:17:21:269 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@c30a4d20
                                 /com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp
[5/10/20 3:17:21:270 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:21:270 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:21:271 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:271 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:272 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:272 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:273 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:273 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:274 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:275 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f4ca26ac
[5/10/20 3:17:21:275 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@4eb5a71c
[5/10/20 3:17:21:276 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:277 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:277 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:278 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:278 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:279 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:280 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:280 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:281 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:282 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:282 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:283 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:283 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:284 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:284 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:285 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:285 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:286 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:286 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:287 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:288 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:289 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:289 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:290 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:290 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:291 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:291 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:292 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:292 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:293 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/textFieldLayoutNewOnly.jsp]: Initialization successful.
[5/10/20 3:17:21:295 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@4eb5a71c
[5/10/20 3:17:21:295 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:297 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:296 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:298 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:299 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:299 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:300 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:300 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:301 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:302 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:302 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:297 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:303 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:304 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:304 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:304 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:303 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:305 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:306 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:307 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:307 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:308 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:308 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:309 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:309 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:310 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:310 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:311 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:311 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:311 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:312 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:306 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:313 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:306 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:314 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:315 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:315 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:316 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:312 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:317 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:317 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:316 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@4eb5a71c
[5/10/20 3:17:21:318 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:318 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:320 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:320 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:321 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:321 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:319 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:322 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:323 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:323 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:324 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:325 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:325 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:326 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:326 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:327 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:327 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:328 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@9ef3cf99
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/textFieldLayout.jsp
                                 false
[5/10/20 3:17:21:329 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:331 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:331 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:332 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:332 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:333 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:333 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:334 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:334 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:334 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:336 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:336 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:337 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:337 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c0ec1e2b
[5/10/20 3:17:21:338 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:338 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:339 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:340 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:340 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:341 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c0ec1e2b
[5/10/20 3:17:21:342 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:342 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:343 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:343 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:344 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:344 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:345 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:346 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:346 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:347 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:347 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:348 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@c0ec1e2b
[5/10/20 3:17:21:349 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:349 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:350 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:351 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:351 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:352 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:352 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:353 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:353 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:354 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:354 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:355 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:354 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:356 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:356 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:357 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:358 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:358 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@c0ec1e2b
[5/10/20 3:17:21:359 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:359 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@99a1ca7d
[5/10/20 3:17:21:360 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:361 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:361 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:362 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:362 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:363 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:363 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:364 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:364 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:365 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:366 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:366 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:366 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:367 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:368 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:369 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:369 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:370 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@99a1ca7d
[5/10/20 3:17:21:371 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:373 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@1c30b9eb
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 false
[5/10/20 3:17:21:374 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:374 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:375 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:375 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:376 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:376 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:377 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:378 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:378 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:378 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:379 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:380 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:380 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:381 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7b5b3761
[5/10/20 3:17:21:382 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:382 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:383 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:383 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:384 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:384 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7b5b3761
[5/10/20 3:17:21:387 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
[5/10/20 3:17:21:388 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:388 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:389 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:389 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:390 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:391 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:391 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:391 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:393 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:393 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:394 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:394 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@5e67c33d
[5/10/20 3:17:21:395 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:395 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:396 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:396 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:397 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:398 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:398 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:399 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:399 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:400 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:400 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:401 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:401 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:402 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:403 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:403 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:404 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:404 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:405 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:405 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:406 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:407 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:407 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:21:408 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:408 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:409 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 true
[5/10/20 3:17:21:409 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:410 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:410 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:411 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:412 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:412 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:413 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:412 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:414 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:414 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:415 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:416 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@decb27f1
[5/10/20 3:17:21:416 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:417 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:417 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@f68e192f[isclite#isclite.war#/secure/layouts/dynamicSelectionLayout.jsp]
[5/10/20 3:17:21:418 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:418 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:21:419 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:21:419 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:420 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:420 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 isclite
[5/10/20 3:17:21:421 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:21:422 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:21:422 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:21:423 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:21:423 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:21:424 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:21:424 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:21:425 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:426 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:21:426 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:21:427 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:21:427 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:428 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@e69b6abd
[5/10/20 3:17:21:429 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@e69b6abd
[5/10/20 3:17:21:429 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@da2afaf4
                                 /secure/layouts/dynamicSelectionLayout.jsp
[5/10/20 3:17:21:430 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@da2afaf4
                                 /secure/layouts/dynamicSelectionLayout.jsp
[5/10/20 3:17:21:430 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:21:431 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:21:431 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:432 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:433 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:433 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:434 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:434 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:435 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:435 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@decb27f1
[5/10/20 3:17:21:436 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@5e67c33d
[5/10/20 3:17:21:437 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:438 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:438 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:439 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:439 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:440 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:440 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:441 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:441 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:442 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:442 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:443 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:443 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:444 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:444 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:445 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:445 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:446 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:446 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:447 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:447 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:448 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:448 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:448 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:449 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:449 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:450 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:450 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:451 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:452 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/dynamicSelectionLayout.jsp]: Initialization successful.
[5/10/20 3:17:21:454 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@5e67c33d
[5/10/20 3:17:21:454 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:455 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:455 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:454 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:456 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:457 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:458 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:458 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:459 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:459 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:456 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:460 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:461 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:461 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:462 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:462 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:463 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:463 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:464 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:460 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:465 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:466 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:466 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:467 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:466 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:468 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:469 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:469 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:470 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:464 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:471 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:472 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:472 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:473 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:473 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:473 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:474 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:474 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:475 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:476 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:476 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:470 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@5e67c33d
[5/10/20 3:17:21:477 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:477 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:479 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:479 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:480 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:480 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:478 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:481 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:482 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:482 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:483 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:484 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:484 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:485 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:485 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:486 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:486 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:488 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@7b5b3761
[5/10/20 3:17:21:488 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:489 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:490 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:490 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:491 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:491 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:492 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:493 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:493 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:494 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:494 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:495 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:494 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:496 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:496 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:497 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:498 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:498 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@7b5b3761
[5/10/20 3:17:21:499 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:501 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@fefed4e5
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
                                 false
[5/10/20 3:17:21:501 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:502 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:502 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:503 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:503 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:504 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:504 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:505 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:506 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:505 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:507 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:507 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:508 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:508 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f4340c7a
[5/10/20 3:17:21:509 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:509 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:510 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:511 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:511 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:512 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@f4340c7a
[5/10/20 3:17:21:514 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
[5/10/20 3:17:21:515 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:516 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:516 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:517 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:517 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:518 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:519 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:518 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:520 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:520 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:521 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:521 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ec740386
[5/10/20 3:17:21:522 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:523 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:523 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:524 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:524 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:525 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:526 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:526 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:527 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:527 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:528 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:528 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:529 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:530 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:530 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:531 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:531 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:532 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:532 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:533 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:534 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:534 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:535 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:21:535 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:536 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:537 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
                                 true
[5/10/20 3:17:21:537 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:538 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:538 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:539 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:539 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:540 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:541 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:540 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:542 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:542 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:543 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:543 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7c515a41
[5/10/20 3:17:21:544 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:545 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:545 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@e4d107f7[isclite#isclite.war#/com.ibm.ws.console.security/keyStoreGetLayout.jsp]
[5/10/20 3:17:21:546 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:546 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:21:547 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:21:547 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:548 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:549 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
                                 isclite
[5/10/20 3:17:21:549 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:21:550 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:21:550 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:21:551 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:21:551 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:21:552 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:21:552 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:21:553 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:554 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:21:554 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:21:555 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:21:555 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:556 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@2e06b275
[5/10/20 3:17:21:557 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@2e06b275
[5/10/20 3:17:21:557 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@6601913e
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
[5/10/20 3:17:21:558 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@6601913e
                                 /com.ibm.ws.console.security/keyStoreGetLayout.jsp
[5/10/20 3:17:21:558 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:21:559 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:21:559 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:560 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:560 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:561 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:561 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:562 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:563 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:563 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7c515a41
[5/10/20 3:17:21:564 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@ec740386
[5/10/20 3:17:21:565 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:565 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:566 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:566 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:567 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:567 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:568 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:568 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:569 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:569 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:569 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:570 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:570 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:571 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:571 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:572 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:572 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:573 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:573 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:574 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:574 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:575 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:575 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:576 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:576 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:577 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:577 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:577 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:578 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:579 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/keyStoreGetLayout.jsp]: Initialization successful.
[5/10/20 3:17:21:581 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@ec740386
[5/10/20 3:17:21:581 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:582 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:581 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:583 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:584 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:585 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:585 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:586 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:587 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:587 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:588 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:582 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:589 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:590 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:591 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:591 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:589 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:592 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:593 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:594 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:594 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:595 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:595 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:593 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:596 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:593 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:598 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:598 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:599 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:599 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:596 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:600 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@ec740386
[5/10/20 3:17:21:601 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:600 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:602 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:603 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:603 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:604 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:604 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:604 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:605 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:605 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:606 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:602 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:607 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:606 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:608 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:609 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:609 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:610 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:608 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:611 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:611 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:612 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:612 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:613 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:614 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:614 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:615 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:616 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@6b018595
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 false
[5/10/20 3:17:21:617 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:617 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:618 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:618 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:619 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:620 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:620 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:621 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:621 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:621 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:622 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:623 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:623 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:624 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c936964
[5/10/20 3:17:21:625 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:625 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:626 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:626 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:627 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:627 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c936964
[5/10/20 3:17:21:628 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:629 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:629 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:630 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:631 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:631 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:632 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:632 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:633 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:633 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:634 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:635 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@c936964
[5/10/20 3:17:21:636 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:636 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:637 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:638 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:638 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:639 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:639 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:640 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:641 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:641 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:642 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:642 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:642 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:643 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:644 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:644 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:645 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:645 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@c936964
[5/10/20 3:17:21:646 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:647 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@f4340c7a
[5/10/20 3:17:21:648 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:648 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:649 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:649 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:650 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:650 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:651 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:651 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:652 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:652 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:653 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:654 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:653 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:655 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:655 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:656 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:656 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:657 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@f4340c7a
[5/10/20 3:17:21:658 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:659 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@2c0f9ce3
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 false
[5/10/20 3:17:21:659 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:660 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:661 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:661 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:662 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:663 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:664 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:664 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:665 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:664 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:666 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:667 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:668 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:668 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@6680ba2e
[5/10/20 3:17:21:669 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:669 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:670 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:670 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:671 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:672 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@6680ba2e
[5/10/20 3:17:21:673 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:673 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:674 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:674 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:675 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:676 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:676 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:677 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:677 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:678 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:678 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:680 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@6680ba2e
[5/10/20 3:17:21:680 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:681 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:681 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:682 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:683 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:683 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:684 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:685 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:685 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:686 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:686 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:687 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:686 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:688 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:688 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:689 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:690 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:690 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@6680ba2e
[5/10/20 3:17:21:691 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:692 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@1e738112
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 false
[5/10/20 3:17:21:692 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:693 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:693 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:694 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:695 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:695 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:696 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:696 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:697 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:696 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:698 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:698 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:699 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:700 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@67c5e07d
[5/10/20 3:17:21:700 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:701 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:701 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:702 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:702 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:703 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@67c5e07d
[5/10/20 3:17:21:704 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:705 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:705 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:706 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:706 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:707 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:707 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:709 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:710 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:710 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:711 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:712 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@67c5e07d
[5/10/20 3:17:21:713 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:713 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:714 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:714 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:715 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:716 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:716 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:717 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:717 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:718 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:718 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:719 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:718 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:720 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:721 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:721 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:722 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:723 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@67c5e07d
[5/10/20 3:17:21:723 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:725 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@30dea691
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
                                 false
[5/10/20 3:17:21:726 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:726 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:727 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:727 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:728 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:728 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:729 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:729 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:730 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:729 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:731 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:732 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:732 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:733 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@999b3791
[5/10/20 3:17:21:733 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:734 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:734 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:735 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:736 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:736 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@999b3791
[5/10/20 3:17:21:739 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
[5/10/20 3:17:21:739 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:740 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:740 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:741 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:741 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:742 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:742 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:742 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:744 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:744 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:745 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:745 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@303cd18b
[5/10/20 3:17:21:746 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:746 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:747 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:748 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:748 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:749 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:749 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:750 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:750 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:751 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:751 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:752 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:753 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:753 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:754 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:754 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:755 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:755 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:756 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:756 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:757 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:757 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:758 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:21:759 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:759 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:760 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
                                 true
[5/10/20 3:17:21:760 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:761 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:761 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:762 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:762 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:763 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:764 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:763 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:765 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:765 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:766 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:767 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1dfc9bb
[5/10/20 3:17:21:767 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:768 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:769 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@2cc7905c[isclite#isclite.war#/com.ibm.ws.console.security/mgmtScopeLayout.jsp]
[5/10/20 3:17:21:769 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:770 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:21:770 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:21:771 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:771 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:772 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
                                 isclite
[5/10/20 3:17:21:772 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:21:773 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:21:774 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:21:774 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:21:775 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:21:775 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:21:776 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:21:777 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:777 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:21:778 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:21:778 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:21:779 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:779 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d0678e0f
[5/10/20 3:17:21:780 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d0678e0f
[5/10/20 3:17:21:780 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@18470306
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
[5/10/20 3:17:21:781 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@18470306
                                 /com.ibm.ws.console.security/mgmtScopeLayout.jsp
[5/10/20 3:17:21:781 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:21:782 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:21:783 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:783 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:784 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:784 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:785 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:785 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:786 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:787 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1dfc9bb
[5/10/20 3:17:21:787 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@303cd18b
[5/10/20 3:17:21:788 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:789 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:789 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:790 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:790 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:791 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:791 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:792 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:792 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:792 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:793 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:793 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:794 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:794 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:795 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:795 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:796 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:796 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:797 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:797 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:797 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:798 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:798 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:799 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:799 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:800 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:800 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:801 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:801 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:802 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/mgmtScopeLayout.jsp]: Initialization successful.
[5/10/20 3:17:21:804 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@303cd18b
[5/10/20 3:17:21:804 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:806 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:806 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:807 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:807 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:805 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:808 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:808 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:809 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:809 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:810 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:811 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:812 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:812 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:813 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:813 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:814 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:814 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:815 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:814 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:810 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:816 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:817 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:817 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:818 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:818 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:819 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:819 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:820 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:820 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:821 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:821 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:822 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:822 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:823 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:823 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:824 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:816 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:825 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:825 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:826 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:824 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:826 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@303cd18b
[5/10/20 3:17:21:828 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:827 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:829 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:829 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:830 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:828 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:831 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:831 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:832 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:832 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:833 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:833 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:834 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:834 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:835 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:835 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:837 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@c39d1e87
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/textFieldLayout.jsp
                                 false
[5/10/20 3:17:21:837 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:838 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:838 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:839 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:839 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:840 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:840 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:841 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:842 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:841 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:843 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:843 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:844 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:845 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1b51df16
[5/10/20 3:17:21:845 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:846 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:846 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:847 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:847 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:848 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1b51df16
[5/10/20 3:17:21:849 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:849 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:850 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:851 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:851 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:852 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:852 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:853 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:853 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:854 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:855 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:856 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@1b51df16
[5/10/20 3:17:21:856 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:857 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:857 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:858 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:858 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:859 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:860 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:860 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:861 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:861 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:862 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:862 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:862 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:863 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:864 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:865 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:865 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:866 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@1b51df16
[5/10/20 3:17:21:866 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:867 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@999b3791
[5/10/20 3:17:21:867 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:868 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:869 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:869 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:870 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:870 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:871 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:871 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:872 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:872 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:873 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:873 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:873 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:874 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:875 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:876 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:876 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:877 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@999b3791
[5/10/20 3:17:21:877 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:878 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@3bfafb5a
[5/10/20 3:17:21:879 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:880 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:880 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:881 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:881 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:882 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:883 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:883 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:884 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:884 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:885 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:886 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:885 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:21:887 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:21:887 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:888 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:21:889 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:21:889 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@3bfafb5a
[5/10/20 3:17:21:890 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:21:891 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:891 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:21:892 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:21:892 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:893 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:893 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:21:894 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:21:894 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:21:895 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:21:895 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:21:896 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:21:899 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@da532964
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
                                 false
[5/10/20 3:17:21:900 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:21:900 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:21:901 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:902 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:902 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:903 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:904 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:905 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:905 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:905 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:907 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:907 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:908 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:908 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e7919a63
[5/10/20 3:17:21:909 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:909 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:910 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:21:911 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:911 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:912 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e7919a63
[5/10/20 3:17:21:915 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
[5/10/20 3:17:21:915 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:916 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:916 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:917 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:918 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:918 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:919 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:918 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:920 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:920 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:921 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:921 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@49146071
[5/10/20 3:17:21:922 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:922 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:923 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:924 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:924 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:925 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:925 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:926 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:926 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:927 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:927 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:928 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:21:929 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:929 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:930 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:930 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:931 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:932 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:932 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:933 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:933 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:934 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:934 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:21:935 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:21:935 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:21:936 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
                                 true
[5/10/20 3:17:21:936 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:937 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:938 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:938 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:939 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:21:939 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:940 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:939 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:941 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:21:941 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:21:942 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:21:943 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@521bec1f
[5/10/20 3:17:21:943 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:21:944 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:21:944 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@2e086cf5[isclite#isclite.war#/com.ibm.ws.console.security/sslAddPropLayout.jsp]
[5/10/20 3:17:21:945 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:945 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:21:946 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:21:946 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:21:947 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:948 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
                                 isclite
[5/10/20 3:17:21:948 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:21:949 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:21:949 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:21:950 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:21:950 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:21:951 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:21:952 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:21:952 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:953 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:21:953 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:21:954 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:21:954 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:955 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d23cc71e
[5/10/20 3:17:21:956 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d23cc71e
[5/10/20 3:17:21:956 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@9986dd1f
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
[5/10/20 3:17:21:957 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@9986dd1f
                                 /com.ibm.ws.console.security/sslAddPropLayout.jsp
[5/10/20 3:17:21:957 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:21:958 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:21:958 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:21:959 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:960 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:960 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:961 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:961 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:962 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:963 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@521bec1f
[5/10/20 3:17:21:963 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@49146071
[5/10/20 3:17:21:964 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:965 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:965 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:965 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:966 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:966 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:967 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:967 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:968 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:968 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:969 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:969 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:969 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:970 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:971 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:971 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:972 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:972 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:972 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:973 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:973 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:974 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:974 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:975 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:975 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:976 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:976 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:977 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:977 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:978 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/sslAddPropLayout.jsp]: Initialization successful.
[5/10/20 3:17:21:980 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@49146071
[5/10/20 3:17:21:980 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:981 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:21:982 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:982 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:983 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:21:983 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:984 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:21:984 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:21:985 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:21:985 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:21:986 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:21:986 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:21:987 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:21:987 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:21:988 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:21:988 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:21:989 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:989 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:990 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:21:990 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:21:991 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:991 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:21:992 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:992 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:993 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:21:993 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:994 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:21:994 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:995 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:981 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:21:996 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:21:996 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:997 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:21:997 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:21:998 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:21:998 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:21:999 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:21:999 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:000 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:000 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:001 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:000 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:002 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:002 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:003 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:003 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:004 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@49146071
[5/10/20 3:17:22:004 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:005 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:006 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:007 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:007 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:008 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:008 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:009 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:009 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:010 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:010 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:011 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:013 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:013 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:014 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:014 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:015 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:016 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@c1426350
                                 System
[5/10/20 3:17:22:017 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:22:018 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:018 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:019 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:019 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:020 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:020 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:021 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:022 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:022 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:023 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:023 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:024 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:024 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:025 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:025 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:026 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:027 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:027 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:028 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:028 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:029 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:029 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:030 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:031 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:031 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:032 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:032 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:033 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:034 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:034 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:035 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:034 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:036 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:037 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:037 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:038 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:039 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:040 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:040 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:047 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:048 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:049 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:072 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:073 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:074 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:075 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:076 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:077 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:078 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:079 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:080 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:080 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:081 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:080 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:082 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:083 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:083 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:084 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:22:085 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:086 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:086 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:087 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:088 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:089 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:089 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:090 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:091 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:091 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:092 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:092 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:093 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:093 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:094 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:094 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:095 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:095 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:096 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:096 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:097 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:097 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:098 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:098 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:099 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:100 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:100 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:101 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:101 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:102 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:102 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:103 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:103 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:104 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:104 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:105 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:105 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:106 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:106 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:107 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:108 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:108 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:109 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:109 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:110 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:110 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:111 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:111 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:112 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:113 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:113 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:114 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:114 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:115 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:115 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:116 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@b97177de
                                 Specified
[5/10/20 3:17:22:117 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:22:117 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:118 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:118 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:119 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:120 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:120 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:121 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:121 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:122 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:122 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:123 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:123 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:124 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:125 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:125 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:125 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:126 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:127 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:127 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:128 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:128 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:129 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:129 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:130 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:131 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:131 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:132 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:133 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:133 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:134 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:134 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:135 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:135 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:136 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:137 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:138 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:138 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:139 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:139 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:140 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:140 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:141 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:142 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:142 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:143 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:143 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:144 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:145 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:146 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:146 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:147 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:147 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:148 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:148 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:149 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:149 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:150 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:151 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:151 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:152 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:152 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:153 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:154 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:154 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:155 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:155 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:156 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:156 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:157 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:157 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:158 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:158 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:159 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:160 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:160 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:161 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:161 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:162 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:163 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:163 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:164 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:164 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:165 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:165 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:166 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:167 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:167 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:168 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:167 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:169 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:169 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:170 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:170 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:22:172 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:172 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:173 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:173 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:174 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:174 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@f7653241
                                 System
[5/10/20 3:17:22:175 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:22:176 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:176 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:177 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:178 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:178 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:179 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:179 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:180 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:180 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:181 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:181 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:182 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:182 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:183 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:183 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:184 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:184 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:185 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:186 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:186 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:200 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:200 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:201 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:202 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:202 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:203 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:203 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:204 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:205 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:205 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:206 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:205 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:207 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:207 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:208 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:208 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:209 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:209 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:210 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:211 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:211 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:212 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:233 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:234 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:236 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:237 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:238 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:239 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:240 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:241 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:241 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:242 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:242 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:242 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:244 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:244 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:245 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:245 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:22:247 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:247 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:248 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:248 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:249 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:249 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:250 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:250 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:251 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:252 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:252 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:253 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:253 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:254 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:255 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:255 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:256 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:256 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:257 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:258 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:258 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:259 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:259 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:260 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:260 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:261 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:262 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:262 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:263 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:263 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:264 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:265 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:265 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:266 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:266 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:267 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:268 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:268 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:269 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:269 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:270 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:271 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:271 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:272 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:272 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:273 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:273 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:274 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:275 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:275 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:276 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:276 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:277 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:278 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:278 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:279 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:280 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:280 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:281 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:282 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:282 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:283 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:284 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:284 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:285 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:285 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:286 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:286 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:287 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:287 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:288 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:289 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:289 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@e7919a63
[5/10/20 3:17:22:290 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:22:291 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:291 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:292 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:292 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:293 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:294 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:294 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:295 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:295 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:296 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:296 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:296 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:297 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:298 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:298 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:299 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:299 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@e7919a63
[5/10/20 3:17:22:300 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:301 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:301 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:302 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:302 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:303 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:303 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:304 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:305 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:305 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:306 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:306 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:308 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@2964536
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@a54f4de
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/relatedItemsLayout.jsp
                                 false
[5/10/20 3:17:22:309 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/com.ibm.ws.console.security.forwardCmd.do?csrfid=-384698864&forwardName=SSLConfig.content.main&sfname=repertoire&mgmtScope=all&resourceUri=security.xml&parentRefId=Security_1&contextId=cells%3ADefaultCell01&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:22:309 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:22:310 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:310 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:311 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:311 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:312 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:22:313 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:313 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:313 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:22:314 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:315 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:316 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:22:316 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@45280fb7
[5/10/20 3:17:22:317 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:22:317 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:22:318 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:22:318 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:319 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:320 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@45280fb7
[5/10/20 3:17:22:320 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:321 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:322 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:322 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:323 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:323 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:324 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:325 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:325 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:326 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:326 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:329 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:329 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:330 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:330 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:331 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:331 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@e0d66452
                                 System
[5/10/20 3:17:22:332 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:22:333 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:333 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:334 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:335 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:335 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:336 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:336 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:337 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:337 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:338 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:338 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:339 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:339 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:340 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:340 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:341 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:342 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:342 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:343 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:343 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:344 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:345 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:346 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:346 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:347 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:347 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:348 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:349 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:349 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:350 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:351 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:350 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:352 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:352 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:353 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:353 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:354 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:354 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:355 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:356 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:357 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:357 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:379 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:380 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:381 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:382 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:383 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:384 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:385 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:386 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:386 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:387 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:388 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:387 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:389 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:389 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:390 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:391 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:22:391 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:392 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:393 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:393 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:394 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:395 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:395 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:396 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:396 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:397 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:398 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:399 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:399 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:400 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:401 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:402 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:402 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:403 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:404 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:404 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:405 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:405 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:406 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:407 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:407 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:408 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:408 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:409 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:409 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:410 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:411 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:411 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:412 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:412 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:413 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:414 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:414 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:415 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:415 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:416 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:417 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:417 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:418 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:418 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:419 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:419 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:420 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:421 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:421 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:422 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:422 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:423 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:423 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:424 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:424 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:425 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@5a09e0dc
                                 Specified
[5/10/20 3:17:22:426 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:22:427 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:427 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:428 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:428 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:429 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:430 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:430 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:431 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:431 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:432 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:432 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:433 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:433 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:434 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:434 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:434 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:435 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:436 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:437 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:437 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:438 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:438 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:439 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:440 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:440 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:441 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:441 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:442 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:443 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:443 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:444 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:445 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:446 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:446 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:447 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:448 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:448 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:449 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:449 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:450 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:450 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:451 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:452 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:452 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:453 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:453 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:454 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:454 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:455 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:455 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:456 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:456 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:457 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:458 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:458 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:459 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:459 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:460 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:460 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:461 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:462 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:462 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:463 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:463 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:464 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:464 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:465 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:466 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:466 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:467 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:467 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:468 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:468 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:469 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:469 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:470 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:471 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:471 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:472 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:472 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:473 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:474 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:474 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:475 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:476 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:476 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:477 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:478 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:477 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:479 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:479 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:480 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:480 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:22:481 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:482 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:482 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:483 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:483 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:484 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:484 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:485 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:486 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:22:486 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:487 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:22:488 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:22:488 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:22:489 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:490 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:490 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:491 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:491 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:492 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@45280fb7
[5/10/20 3:17:22:493 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:22:493 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:494 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:495 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:495 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:496 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:497 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:497 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:498 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:498 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:499 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:499 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:499 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:500 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:501 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:502 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:502 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:503 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@45280fb7
[5/10/20 3:17:22:503 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:504 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@88ce9664
[5/10/20 3:17:22:505 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:22:505 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:506 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:507 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:507 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:508 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:508 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:509 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:509 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:510 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:511 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:511 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:511 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:512 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:513 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:513 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:514 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:515 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@88ce9664
[5/10/20 3:17:22:515 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:516 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:516 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:517 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:518 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:518 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:519 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:519 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:520 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:520 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:521 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:521 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:522 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:523 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:523 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:524 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:524 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:525 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:525 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:526 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:526 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:527 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:528 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:529 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:22:529 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:530 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:22:530 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:531 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:531 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@59592fcb
                                 System
[5/10/20 3:17:22:532 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:22:533 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:22:533 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:534 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:534 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:22:535 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:535 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:22:536 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:22:537 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:537 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:538 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:22:538 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:22:539 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:22:539 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:22:540 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:22:540 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:22:541 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:541 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:542 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:543 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:543 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:544 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:544 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:545 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:22:545 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:546 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:547 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:547 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:548 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:548 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:549 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:550 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:549 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:551 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:551 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:552 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:552 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:22:553 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:553 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:554 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:22:555 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:555 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:22:556 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:22:556 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:557 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:22:557 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:22:558 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:559 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:559 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:22:560 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:22:560 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:22:561 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:22:562 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:562 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:563 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:564 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:564 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:565 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:565 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:566 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:566 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:567 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:567 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:567 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:568 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:569 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:569 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:570 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:22:570 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:571 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:571 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:572 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:572 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:573 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:573 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:574 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:574 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:575 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:576 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:582 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@d096975c
[5/10/20 3:17:22:583 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:22:584 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:586 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:587 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:588 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:589 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:590 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:22:591 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:592 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:594 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:595 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:22:596 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:22:595 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:22:599 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:22:600 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:601 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:601 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:22:602 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@d096975c
[5/10/20 3:17:22:603 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:603 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:604 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:22:605 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:22:605 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:22:606 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:22:607 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:22:607 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:22:608 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:22:608 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:22:609 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:22:610 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:22:610 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@57ec2c56
[5/10/20 3:17:22:611 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:22:612 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:22:613 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:22:614 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:614 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:22:615 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:22:615 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:22:616 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:22:617 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:22:618 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:22:618 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:22:619 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:22:620 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@57ec2c56
[5/10/20 3:17:22:621 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:22:622 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:22:624 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:22:624 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:25:868 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:17:25:870 UTC] 00000098 ContextManage >  clearCallerContext Entry
[5/10/20 3:17:25:871 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:25:872 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:25:873 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:25:874 UTC] 00000098 ContextManage <  clearCallerContext Exit
[5/10/20 3:17:25:875 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:17:25:876 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@6165d9fa
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@551a7c69
                                 /ibm/console
                                 admin_host
                                 action
                                 true
[5/10/20 3:17:25:877 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:25:878 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/com.ibm.ws.console.security.forwardCmd.do, Path Info=null
[5/10/20 3:17:25:879 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:25:879 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:25:880 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:25:881 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:17:25:882 UTC] 00000098 ContextManage 3   Returning: true
[5/10/20 3:17:25:883 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:25:883 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:25:884 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:17:25:885 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:25:886 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:17:25:887 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:17:25:888 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@efd52697
[5/10/20 3:17:25:888 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:25:889 UTC] 00000098 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:17:25:890 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:25:891 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:25:891 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:17:25:892 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:25:893 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:25:894 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:17:25:894 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:25:895 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:25:896 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:25:897 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@3ce90e9c[isclite#isclite.war#action]
[5/10/20 3:17:25:897 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:25:898 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:25:899 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:17:25:900 UTC] 00000098 EJSWebCollabo 3   preInvoke pushing admin
[5/10/20 3:17:25:900 UTC] 00000098 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@efd52697
[5/10/20 3:17:25:901 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:25:902 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:25:902 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:25:903 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:25:904 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:25:904 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:25:905 UTC] 00000098 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@d6800105[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:25:906 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:25:906 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:25:907 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:25:907 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:25:908 UTC] 00000098 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@6165d9fa
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@551a7c69
                                 admin_host:/ibm/console
                                 true
                                 isclite
[5/10/20 3:17:25:909 UTC] 00000098 URLHandler    3   URI requested: /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:25:909 UTC] 00000098 URLHandler    3   URI returned: /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:25:910 UTC] 00000098 LRUCache      >  get Entry
                                 isclite
[5/10/20 3:17:25:911 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:25:911 UTC] 00000098 PermissionRol 3   App permission cache found for isclite
[5/10/20 3:17:25:912 UTC] 00000098 LRUCache      >  get Entry
                                 com.ibm.ws.security.web.WebAccessPermission@10e6530d
[5/10/20 3:17:25:913 UTC] 00000098 LRUCache      <  get Exit
[5/10/20 3:17:25:913 UTC] 00000098 PermissionRol 3   isclite, /com.ibm.ws.console.security.forwardCmd.do:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
,         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:25:914 UTC] 00000098 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:17:25:915 UTC] 00000098 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@f2eee7e8
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
[5/10/20 3:17:25:915 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:25:916 UTC] 00000098 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 
  Authorization Table [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AuthorizationTableImpl@8bef5cf4 ]
  Authorization Table contains [ 4 ] role assignments
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@535bf73f ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 1 ] special subjects
          Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.ServerImpl@93671b63 ]
            Name      [ Server ]
            Access ID [ Server ]
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@a26b0e0 ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@8feb60dd ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects
    Role Assignment   [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.RoleAssignmentImpl@9212975a ]
        Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]
        Role Assignment contains [ 0 ] users
        Role Assignment contains [ 0 ] groups
        Role Assignment contains [ 0 ] special subjects

                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:17:25:917 UTC] 00000098 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:17:25:917 UTC] 00000098 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:17:25:918 UTC] 00000098 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:17:25:918 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
[5/10/20 3:17:25:919 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:25:920 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:25:920 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:25:921 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:921 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:922 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:923 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:25:923 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:924 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:924 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:925 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:926 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:926 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:927 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:928 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:928 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:929 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:929 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:930 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:930 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:931 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:932 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:25:932 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:933 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:934 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:25:934 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:935 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:935 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:936 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:937 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:937 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:938 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:938 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:939 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:940 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:940 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:941 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:941 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:942 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:942 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:25:943 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:944 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:944 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:25:945 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:945 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:946 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:947 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:947 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:948 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:948 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:949 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:949 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:950 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:950 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:951 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:952 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:952 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:953 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:25:954 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:954 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:955 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:25:955 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:956 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:957 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:957 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:958 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:958 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:959 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:959 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:960 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:960 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:961 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:961 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:962 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:963 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:963 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:25:964 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:964 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:965 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:25:965 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:966 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:967 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:967 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:968 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:968 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:969 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:969 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:970 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:970 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:971 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:972 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:972 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:973 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:973 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:25:974 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:25:975 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:975 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:25:976 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:976 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:977 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:977 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:978 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:978 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:979 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:979 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:980 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:980 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:981 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:982 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:982 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:983 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:983 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:25:984 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:984 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:985 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:25:985 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:986 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:987 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:987 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:988 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:988 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:989 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:989 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:25:990 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:25:990 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:25:991 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:991 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:992 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:993 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:993 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:25:994 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:25:994 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:25:995 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:25:995 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:25:996 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:25:996 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:25:997 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:25:998 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:25:998 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:25:999 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:25:999 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:000 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:001 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:001 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:002 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:002 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:003 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:003 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:26:004 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:004 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:005 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:26:005 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:006 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:006 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:007 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:008 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:008 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:009 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:009 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:010 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:010 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:011 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:012 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:012 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:013 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:014 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:26:014 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:015 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:015 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:26:016 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:016 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:017 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:017 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:018 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:018 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:019 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:019 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:020 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:020 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:021 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:021 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:022 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:022 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:023 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:26:023 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:024 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:025 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:26:025 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:026 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:026 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:027 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:027 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:028 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:028 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:029 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:030 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:030 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:031 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:031 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:032 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:032 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:033 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:26:033 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:034 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:035 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:26:035 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:036 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:036 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:037 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:038 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:038 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:039 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:039 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:040 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:040 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:041 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:042 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:042 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:043 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:044 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:26:044 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:045 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:046 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:26:046 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:047 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:048 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:048 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:049 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:050 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:050 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:051 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:052 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:053 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:053 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:054 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:055 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:055 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:056 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:26:056 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:057 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:057 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:26:058 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:058 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:059 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:059 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:060 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:060 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:061 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:062 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:062 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:063 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:063 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:064 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:064 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:065 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:065 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:26:066 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:066 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:067 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:26:068 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:068 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:069 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:069 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:070 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:071 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:071 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:072 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:072 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:073 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:073 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:074 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:075 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:075 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:076 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:26:076 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:077 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:077 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:26:078 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:079 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:079 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:080 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:080 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:081 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:081 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:082 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:082 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:083 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:084 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:084 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:085 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:085 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:086 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:26:086 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:087 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:087 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:26:088 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:088 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:089 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:089 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:090 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:090 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:091 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:092 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:092 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:093 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:093 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:094 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:095 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:095 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:096 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:26:096 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:097 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:097 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:26:098 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:098 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:099 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:099 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:100 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:101 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:101 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:102 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:102 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:103 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:103 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:104 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:104 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:105 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:106 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:26:106 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:107 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:107 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:26:108 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:108 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:109 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:109 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:110 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:110 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:111 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:111 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:112 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:112 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:113 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:114 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:114 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:115 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:115 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:26:116 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:116 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:117 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:26:118 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:118 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:119 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:119 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:120 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:120 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:121 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:121 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:122 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:122 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:123 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:123 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:124 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:125 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:125 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:26:126 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:126 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:127 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:26:128 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:128 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:129 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:129 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:130 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:130 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:131 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:131 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:132 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:133 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:133 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:134 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:134 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:135 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:136 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:26:136 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:137 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:137 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:26:138 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:138 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:139 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:139 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:140 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:140 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:141 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:141 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:142 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:142 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:143 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:144 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:144 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:145 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:145 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:26:146 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:146 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:147 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:26:147 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:148 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:148 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:149 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:150 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:150 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:151 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:151 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:152 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:153 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:153 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:154 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:154 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:155 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:155 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:26:156 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:157 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:157 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:26:158 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:159 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:159 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:160 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:160 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:161 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:161 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:162 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:162 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:163 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:163 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:164 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:164 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:165 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:166 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:26:166 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:167 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:167 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:26:168 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:168 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:169 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:170 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:170 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:171 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:171 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:172 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:172 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:173 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:173 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:174 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:175 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:175 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:176 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:26:176 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:177 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:177 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:26:178 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:178 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:179 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:179 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:180 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:180 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:181 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:182 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:182 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:183 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:183 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:184 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:184 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:185 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:185 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:26:186 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:186 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:187 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:26:188 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:188 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:189 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:189 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:190 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:190 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:191 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:192 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:192 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:193 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:193 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:194 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:194 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:195 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:195 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:26:196 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:196 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:197 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:26:198 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:198 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:199 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:199 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:200 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:200 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:201 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:201 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:202 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:202 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:203 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:203 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:204 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:204 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:205 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:26:205 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:206 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:207 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:26:207 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:208 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:208 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:209 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:209 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:210 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:210 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:211 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:211 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:212 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:212 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:213 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:213 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:214 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:215 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:26:215 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:216 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:216 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:26:217 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:217 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:218 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:218 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:219 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:220 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:220 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:221 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:221 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:222 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:222 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:223 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:224 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:224 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:225 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:26:225 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:226 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:226 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:26:227 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:227 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:228 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:229 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:229 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:230 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:231 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:231 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:232 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:232 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:233 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:233 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:234 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:234 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:235 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:26:236 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:236 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:237 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:26:237 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:238 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:238 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:239 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:239 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:240 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:241 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:241 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:242 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:242 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:243 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:243 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:244 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:244 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:245 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:26:245 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:246 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:246 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:26:247 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:247 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:248 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:249 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:249 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:250 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:250 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:251 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:251 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:252 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:253 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:253 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:254 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:254 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:255 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:26:255 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:256 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:256 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:26:257 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:257 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:258 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:259 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:260 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:260 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:261 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:261 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:262 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:262 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:263 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:263 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:264 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:264 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:26:265 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:265 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:266 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:26:267 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:267 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:268 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:268 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:269 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:270 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:270 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:271 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:271 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:272 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:272 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:273 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:273 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:274 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:275 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:26:275 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:276 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:276 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:26:277 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:277 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:278 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:279 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:279 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:280 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:280 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:281 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:282 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:282 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:283 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:283 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:284 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:284 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:285 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:26:286 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:286 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:287 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:26:287 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:288 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:288 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:289 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:289 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:290 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:291 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:291 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:292 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:292 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:293 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:294 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:294 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:295 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:295 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:26:296 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:296 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:297 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:26:298 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:298 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:299 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:299 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:300 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:300 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:301 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:301 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:302 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:303 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:303 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:304 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:304 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:305 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:305 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:26:306 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:306 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:307 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:26:308 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:308 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:309 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:309 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:310 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:311 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:311 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:312 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:312 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:313 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:313 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:314 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:314 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:315 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:315 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:26:316 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:316 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:317 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:26:318 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:318 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:319 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:319 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:320 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:321 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:321 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:322 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:322 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:323 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:323 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:324 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:325 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:325 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:326 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:26:326 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:327 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:327 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:26:328 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:329 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:329 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:330 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:330 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:331 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:332 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:332 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:333 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:333 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:334 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:334 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:335 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:335 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:336 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:26:337 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:337 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:338 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:26:338 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:339 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:339 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:340 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:340 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:341 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:341 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:342 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:342 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:343 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:344 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:344 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:345 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:345 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:346 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:26:346 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:347 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:347 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:26:348 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:348 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:349 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:350 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:350 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:351 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:351 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:352 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:353 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:353 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:354 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:354 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:355 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:355 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:356 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:26:356 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:357 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:357 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:26:358 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:358 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:359 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:360 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:361 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:361 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:362 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:362 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:363 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:363 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:364 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:365 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:366 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:26:366 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:367 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:367 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:26:368 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:368 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:369 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:370 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:370 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:371 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:371 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:372 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:373 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:373 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:374 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:375 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:375 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:376 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:376 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:26:377 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:378 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:378 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:26:379 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:379 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:380 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:381 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:381 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:382 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:382 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:383 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:383 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:384 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:384 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:385 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:386 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:386 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:387 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:26:387 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:388 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:388 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:26:389 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:389 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:390 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:391 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:391 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:392 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:392 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:393 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:393 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:394 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:394 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:395 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:396 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:396 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:26:397 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:397 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:398 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:26:399 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:399 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:400 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:401 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:401 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:402 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:402 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:403 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:404 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:404 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:405 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:406 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:407 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:26:408 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:409 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:410 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:26:410 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:411 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:411 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:412 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:413 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:413 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:414 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:414 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:415 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:415 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:416 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:417 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:417 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:418 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:419 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:26:420 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:421 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:26:421 UTC] 00000098 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:26:422 UTC] 00000098 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:17:26:424 UTC] 00000098 WebCollaborat >  invokeTAI Entry
[5/10/20 3:17:26:424 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:17:26:425 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:17:26:426 UTC] 00000098 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:17:26:426 UTC] 00000098 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:17:26:427 UTC] 00000098 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:17:26:428 UTC] 00000098 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:17:26:429 UTC] 00000098 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:17:26:429 UTC] 00000098 WebCollaborat >  shouldPerformLogin Entry
                                 isclite
                                 true
                                 false
[5/10/20 3:17:26:430 UTC] 00000098 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:17:26:431 UTC] 00000098 WebCollaborat 3   webSecAttr=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:17:26:431 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:26:432 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/com.ibm.ws.console.security.forwardCmd.do]
[5/10/20 3:17:26:432 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:26:433 UTC] 00000098 TrustAssociat >  getInstance Entry
[5/10/20 3:17:26:434 UTC] 00000098 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:17:26:434 UTC] 00000098 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:17:26:435 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:17:26:436 UTC] 00000098 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@d6800105[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:17:26:436 UTC] 00000098 WebAuthentica 3   challengeType = FORM Authorization header = null
[5/10/20 3:17:26:437 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:26:438 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:26:438 UTC] 00000098 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:17:26:439 UTC] 00000098 WebAuthentica >  handleSSO Entry
[5/10/20 3:17:26:440 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:17:26:440 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:17:26:441 UTC] 00000098 WebAuthentica 3   Attempting primary cookie validation for: LtpaToken2
[5/10/20 3:17:26:441 UTC] 00000098 WebAuthentica >  validateCookie Entry
                                 [Ljavax.servlet.http.Cookie;@10e00a64
                                 LtpaToken2
[5/10/20 3:17:26:442 UTC] 00000098 CookieHelper  >  getCookieValues Entry
                                 LtpaToken2
[5/10/20 3:17:26:442 UTC] 00000098 CookieHelper  <  getCookieValues Exit
                                 [acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==]
[5/10/20 3:17:26:443 UTC] 00000098 WebAuthentica >  validate Entry
[5/10/20 3:17:26:444 UTC] 00000098 WebAuthentica >  setDomainContext Entry
[5/10/20 3:17:26:444 UTC] 00000098 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:17:26:445 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:445 UTC] 00000098 ContextManage >  login Entry
                                 defaultWIMFileBasedRealm
                                 [B@b1f8bdec
                                 system.WEB_INBOUND
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@6165d9fa
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@551a7c69
                                 {RedirectURL=null, WebAppName=isclite, security.domain.type=administration, realm_name=defaultWIMFileBasedRealm}
                                 <null>
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:17:26:446 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:26:447 UTC] 00000098 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:17:26:447 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:26:448 UTC] 00000098 ContextManage 3   Web inbound login config: system.WEB_INBOUND
[5/10/20 3:17:26:448 UTC] 00000098 ContextManage 3   Looking for opaque token on the thread before Subject cache lookup.
[5/10/20 3:17:26:449 UTC] 00000098 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 [B@b1f8bdec
                                 <null>
[5/10/20 3:17:26:449 UTC] 00000098 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:17:26:450 UTC] 00000098 ContextManage 3   Looking for subject from cache using token as lookup.
[5/10/20 3:17:26:451 UTC] 00000098 AuthCache     >  getSubject Entry
                                     69c020d5 729db5de 912b6d15 04965053 42d78026 c921f5f0 c6925a39 97a38ff4 
    b0734e79 0cb65c85 e0d348bf 3f505529 c1c49842 7b4560f2 9d00a7ad 10b6465a 
    ad8fc2e7 22ddb609 39575683 805946a5 151bcd15 4c359985 6ed1739c 8f79e0bd 
    c1509104 98661ec3 7b3cc7e3 ae518af1 1de892e7 8a0f7752 c0f41b90 4124efff 
    2f76eff6 14dfe87f 531c179e 8694c2ac cea813c2 80482c98 f1a2f191 d93f7e12 
    acb5f67a 2c5262ce 1c2f1426 2a858026 76e2da06 95faf81d 4dc14eed 449bf1e3 
    bbc8dc8b 6da0b373 a6da1fd2 3a461774 27a6e650 75e902e8 ad6369b1 a1695d73 
    be25a3a7 a1d7aee6 25df500e 055af3d2 1f5024ed 9530d079 d84f3a42 03b227e2 
    676d2dbc 09b5d0cf c376ed37 67ca5676 8f031a6d 3a715e6f c6bcc02a d907c2d3 
    87ad87d7 3af0053d a38fb47c 8ca29802 6ad7c611 00e17c13 5d7d66cf 9fb66176 
    552794e6 377a7a9a f5b53d1d 521a9f30 d01c6b35 5e3e0402 dbfe66c1 df18860c 
    c0b439e9 0a3197e5 0d41ccab 4db573f5 1edf6ad2 40d3d01a 913cc154 b39dcf91 
    3d7d8682 6e6cdac2 2a4fb7c6 890f9fe3 adfc23d8 7c32278a 12c1392f 94e08b58 
    f8bbf189 a3c03722 d364fdd1 1288dc1b e63c146f 30bf70d5 18064c14 64a102a6 
    2677ebfe cd07c178 4e52c8f8 282e6a9f a95e62ad e9b87b7c ea4a0bf1 93405858 
    a4ca9142 8e769219 90516b63 2fe5b56c
[5/10/20 3:17:26:451 UTC] 00000098 AuthCache     >  getSubject Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:26:452 UTC] 00000098 Cache         >  get Entry
                                 com.ibm.ws.security.util.ByteArray@bda81f99
[5/10/20 3:17:26:452 UTC] 00000098 Cache         <  get Exit
                                 com.ibm.ws.security.auth.CacheObject@93d7ea30
[5/10/20 3:17:26:453 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:26:453 UTC] 00000098 AuthCache     <  getSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:26:454 UTC] 00000098 ContextManage >  isTokenMatch Entry
[5/10/20 3:17:26:454 UTC] 00000098 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:17:26:455 UTC] 00000098 SubjectHelper 3   Found default SSO token.
[5/10/20 3:17:26:456 UTC] 00000098 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:17:26:457 UTC] 00000098 ContextManage <  isTokenMatch: true Exit
[5/10/20 3:17:26:457 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:26:458 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:26:458 UTC] 00000098 AuthCache     >  getInstance Entry
[5/10/20 3:17:26:459 UTC] 00000098 AuthCache     3   getInstance SecurityConfigManager instance com.ibm.ws.security.config.SecurityConfigManagerImpl@dec4f4c1
[5/10/20 3:17:26:459 UTC] 00000098 AuthCache     3   getInstance using domainId admin
[5/10/20 3:17:26:460 UTC] 00000098 AuthCache     3   getInstance found AuthCache in instanceCache AuthCache: -1328712432 domainId: admin
[5/10/20 3:17:26:461 UTC] 00000098 AuthCache     <  getInstance AuthCache: -1328712432 domainId: admin Exit
[5/10/20 3:17:26:461 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:26:462 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:26:462 UTC] 00000098 WSCredentialT >  checkCushionValidityOfAllTokens Entry
                                 600000
                                 false
[5/10/20 3:17:26:463 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:26:464 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087520000
[5/10/20 3:17:26:464 UTC] 00000098 WSCredentialI >  isForwardable Entry
[5/10/20 3:17:26:465 UTC] 00000098 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:17:26:465 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:26:466 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:26:467 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:467 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:26:468 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:26:468 UTC] 00000098 WSCredentialT 3   Total number of Subject tokens to check: 3
[5/10/20 3:17:26:469 UTC] 00000098 WSCredentialT 3   Time remaining is 6273 seconds, for token: com.ibm.ws.security.token.AuthenticationTokenImpl
[5/10/20 3:17:26:469 UTC] 00000098 WSCredentialT 3   Time remaining is 6270 seconds, for token: com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:17:26:470 UTC] 00000098 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:12:00 UTC 2020
[5/10/20 3:17:26:470 UTC] 00000098 WSCredentialT 3   Time remaining is 6273 seconds, for token: com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:17:26:471 UTC] 00000098 WSCredentialT <  checkCushionValidityOfAllTokens -> true Exit
[5/10/20 3:17:26:472 UTC] 00000098 ContextManage 3   login(realm, token, . . .): is subject valid? true
[5/10/20 3:17:26:472 UTC] 00000098 ContextManage <  login(realm, token, authMech, . . .) Exit
[5/10/20 3:17:26:473 UTC] 00000098 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:17:26:473 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:474 UTC] 00000098 WebAuthentica >  checkSubject  Entry
[5/10/20 3:17:26:474 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:475 UTC] 00000098 WebAuthentica <  checkSubject : true Exit
[5/10/20 3:17:26:476 UTC] 00000098 WebAuthentica <  validate Exit
[5/10/20 3:17:26:476 UTC] 00000098 WebAuthentica 3   validateCookie the LTPA token was valid.
[5/10/20 3:17:26:477 UTC] 00000098 WebAuthentica <  validateCookie successful ltpa token validation of acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA== Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:26:478 UTC] 00000098 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 FORM
[5/10/20 3:17:26:478 UTC] 00000098 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: FORM
[5/10/20 3:17:26:479 UTC] 00000098 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:17:26:479 UTC] 00000098 WebAuthentica <  handleSSO: found cookie Exit
[5/10/20 3:17:26:480 UTC] 00000098 WebAuthentica >  restorePostParams Entry
[5/10/20 3:17:26:480 UTC] 00000098 WebAuthentica 3    method : GET URL:/ibm/console/com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:26:481 UTC] 00000098 WebAuthentica 3   postParamSaveMethod string: Cookie
[5/10/20 3:17:26:482 UTC] 00000098 WebAuthentica 3   postParamSaveMethod value: 0
[5/10/20 3:17:26:482 UTC] 00000098 WebAuthentica <  restorePostParams Exit
[5/10/20 3:17:26:483 UTC] 00000098 WebAuthentica <  authenticate 1 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:17:26:483 UTC] 00000098 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:17:26:484 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:484 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:26:485 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:26:486 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:26:486 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:487 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:26:487 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:17:26:488 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:26:489 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:26:489 UTC] 00000098 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:26:490 UTC] 00000098 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:26:490 UTC] 00000098 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:17:26:491 UTC] 00000098 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:17:26:492 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:26:493 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:17:26:493 UTC] 00000098 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:26:494 UTC] 00000098 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:17:26:494 UTC] 00000098 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:17:26:495 UTC] 00000098 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:17:26:496 UTC] 00000098 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:17:26:496 UTC] 00000098 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:17:26:496 UTC] 00000098 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:17:26:497 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:26:498 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:26:499 UTC] 00000098 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:17:26:499 UTC] 00000098 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:17:26:500 UTC] 00000098 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:17:26:501 UTC] 00000098 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:17:26:501 UTC] 00000098 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:17:26:502 UTC] 00000098 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:17:26:502 UTC] 00000098 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:17:26:503 UTC] 00000098 AuthzPropToke 3   Expiration set to: Sun May 10 05:17:26 UTC 2020
[5/10/20 3:17:26:503 UTC] 00000098 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:17:26:504 UTC] 00000098 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:17:26:504 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:26:505 UTC] 00000098 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:17:26:505 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:26:504 UTC] 00000098 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:26:506 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:26:507 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:26:506 UTC] 00000098 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:26:508 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:17:26:509 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:26:509 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:26:510 UTC] 00000098 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:17:26:510 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:26:511 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:26:512 UTC] 00000098 WebCollaborat >  validSecAttrs Entry
                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 false
                                 isclite
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@6165d9fa
                                 admin_host
                                 false
[5/10/20 3:17:26:512 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:26:513 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:26:513 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:26:514 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:26:515 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:26:515 UTC] 00000098 WebConstraint >  getConstraints:  Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
[5/10/20 3:17:26:516 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:26:516 UTC] 00000098 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:17:26:517 UTC] 00000098 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:17:26:518 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:518 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:519 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:519 UTC] 00000098 WebConstraint 3           url: /
[5/10/20 3:17:26:520 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:521 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:521 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:522 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:522 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:523 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:523 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:524 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:525 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:525 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:526 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:526 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:527 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:527 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:528 UTC] 00000098 WebResourceCo 3   Checking URL: /
[5/10/20 3:17:26:528 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:529 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:529 UTC] 00000098 WebConstraint 3           url: /secure/*
[5/10/20 3:17:26:530 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:530 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:531 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:532 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:532 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:533 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:533 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:534 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:534 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:535 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:536 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:536 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:537 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:537 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:538 UTC] 00000098 WebResourceCo 3   Checking URL: /secure/*
[5/10/20 3:17:26:538 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:539 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:539 UTC] 00000098 WebConstraint 3           url: /servlet/*
[5/10/20 3:17:26:540 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:541 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:541 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:542 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:542 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:543 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:543 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:544 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:545 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:545 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:546 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:546 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:547 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:547 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:548 UTC] 00000098 WebResourceCo 3   Checking URL: /servlet/*
[5/10/20 3:17:26:549 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:549 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:550 UTC] 00000098 WebConstraint 3           url: /html/isclite/images/*
[5/10/20 3:17:26:550 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:551 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:551 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:552 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:553 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:553 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:554 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:555 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:556 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:557 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:557 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:558 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:558 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:559 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:559 UTC] 00000098 WebResourceCo 3   Checking URL: /html/isclite/images/*
[5/10/20 3:17:26:560 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:561 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:561 UTC] 00000098 WebConstraint 3           url: *.do
[5/10/20 3:17:26:562 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:562 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:563 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:564 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:564 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:565 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:565 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:566 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:566 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:567 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:567 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:568 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:568 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:569 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:569 UTC] 00000098 WebResourceCo 3   Checking URL: *.do
[5/10/20 3:17:26:570 UTC] 00000098 WebResourceCo <  matches (Extension) : *.do Exit
[5/10/20 3:17:26:571 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:571 UTC] 00000098 WebConstraint 3           url: /nodesyncstat
[5/10/20 3:17:26:572 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:572 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:573 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:573 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:574 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:574 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:575 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:575 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:576 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:576 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:577 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:577 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:578 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:579 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:579 UTC] 00000098 WebResourceCo 3   Checking URL: /nodesyncstat
[5/10/20 3:17:26:580 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:580 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:581 UTC] 00000098 WebConstraint 3           url: /status/*
[5/10/20 3:17:26:581 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:582 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:582 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:583 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:584 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:584 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:585 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:585 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:586 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:587 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:587 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:588 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:588 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:589 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:589 UTC] 00000098 WebResourceCo 3   Checking URL: /status/*
[5/10/20 3:17:26:590 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:590 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:591 UTC] 00000098 WebConstraint 3           url: /dts/*
[5/10/20 3:17:26:591 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:592 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:592 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:593 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:594 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:594 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:595 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:595 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:596 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:596 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:597 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:597 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:598 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:598 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:599 UTC] 00000098 WebResourceCo 3   Checking URL: /dts/*
[5/10/20 3:17:26:600 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:600 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:601 UTC] 00000098 WebConstraint 3           url: /guidedactivity/*
[5/10/20 3:17:26:601 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:602 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:602 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:603 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:603 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:604 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:604 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:605 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:606 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:606 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:607 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:607 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:608 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:608 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:609 UTC] 00000098 WebResourceCo 3   Checking URL: /guidedactivity/*
[5/10/20 3:17:26:609 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:610 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:610 UTC] 00000098 WebConstraint 3           url: /sibstatus/*
[5/10/20 3:17:26:611 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:612 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:612 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:613 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:614 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:614 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:615 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:615 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:616 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:616 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:617 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:617 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:618 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:619 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:619 UTC] 00000098 WebResourceCo 3   Checking URL: /sibstatus/*
[5/10/20 3:17:26:620 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:621 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:621 UTC] 00000098 WebConstraint 3           url: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:26:622 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:622 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:623 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:623 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:624 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:625 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:625 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:626 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:626 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:627 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:627 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:628 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:629 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:629 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:630 UTC] 00000098 WebResourceCo 3   Checking URL: com.ibm.ws.console.security/securityConfigReport.jsp
[5/10/20 3:17:26:630 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:631 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:631 UTC] 00000098 WebConstraint 3           url: /statuspoll/*
[5/10/20 3:17:26:632 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:632 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:633 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:633 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:634 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:634 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:635 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:636 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:636 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:637 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:637 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:638 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:638 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:639 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:640 UTC] 00000098 WebResourceCo 3   Checking URL: /statuspoll/*
[5/10/20 3:17:26:640 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:641 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:641 UTC] 00000098 WebConstraint 3           url: /ClusterRollout/*
[5/10/20 3:17:26:642 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:642 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:643 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:643 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:644 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:645 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:645 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:646 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:646 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:647 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:647 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:648 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:649 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:649 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:650 UTC] 00000098 WebResourceCo 3   Checking URL: /ClusterRollout/*
[5/10/20 3:17:26:651 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:651 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:652 UTC] 00000098 WebConstraint 3           url: /AppInstallStatusServlet/*
[5/10/20 3:17:26:653 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:653 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:654 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:655 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:655 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:656 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:656 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:657 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:657 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:658 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:659 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:659 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:660 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:661 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:661 UTC] 00000098 WebResourceCo 3   Checking URL: /AppInstallStatusServlet/*
[5/10/20 3:17:26:662 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:662 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:663 UTC] 00000098 WebConstraint 3           url: /AppManagementStatus/*
[5/10/20 3:17:26:663 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:664 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:664 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:665 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:665 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:666 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:667 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:667 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:668 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:669 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:669 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:670 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:671 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:671 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:672 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementStatus/*
[5/10/20 3:17:26:672 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:673 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:674 UTC] 00000098 WebConstraint 3           url: /AppManagementPerServerStatus/*
[5/10/20 3:17:26:674 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:675 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:676 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:676 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:677 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:677 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:678 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:678 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:679 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:680 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:680 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:681 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:681 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:682 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:683 UTC] 00000098 WebResourceCo 3   Checking URL: /AppManagementPerServerStatus/*
[5/10/20 3:17:26:683 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:684 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:684 UTC] 00000098 WebConstraint 3           url: /LibertyAdvisorSummary/*
[5/10/20 3:17:26:685 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:685 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:686 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:687 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:687 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:688 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:688 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:689 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:689 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:690 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:691 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:691 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:692 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:692 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:693 UTC] 00000098 WebResourceCo 3   Checking URL: /LibertyAdvisorSummary/*
[5/10/20 3:17:26:693 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:694 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:695 UTC] 00000098 WebConstraint 3           url: /addNodeListener
[5/10/20 3:17:26:695 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:696 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:696 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:697 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:697 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:698 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:699 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:699 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:700 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:700 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:701 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:702 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:703 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:703 UTC] 00000098 WebResourceCo 3   Checking URL: /addNodeListener
[5/10/20 3:17:26:704 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:704 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:705 UTC] 00000098 WebConstraint 3           url: /removeNodeListener
[5/10/20 3:17:26:706 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:706 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:707 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:708 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:708 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:709 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:709 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:710 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:710 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:711 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:712 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:712 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:713 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:713 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:714 UTC] 00000098 WebResourceCo 3   Checking URL: /removeNodeListener
[5/10/20 3:17:26:714 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:715 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:716 UTC] 00000098 WebConstraint 3           url: /opmode/*
[5/10/20 3:17:26:716 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:717 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:717 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:718 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:718 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:719 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:719 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:720 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:720 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:721 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:722 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:722 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:723 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:723 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:724 UTC] 00000098 WebResourceCo 3   Checking URL: /opmode/*
[5/10/20 3:17:26:725 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:725 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:726 UTC] 00000098 WebConstraint 3           url: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:26:726 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:727 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:727 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:728 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:729 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:729 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:730 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:730 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:731 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:731 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:732 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:733 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:733 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:734 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:734 UTC] 00000098 WebResourceCo 3   Checking URL: /com.ibm.ws.console.xdoperations/*
[5/10/20 3:17:26:735 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:735 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:736 UTC] 00000098 WebConstraint 3           url: /ChartServlet/*
[5/10/20 3:17:26:736 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:737 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:738 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:738 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:739 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:739 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:740 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:741 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:741 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:742 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:743 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:743 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:744 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:744 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:745 UTC] 00000098 WebResourceCo 3   Checking URL: /ChartServlet/*
[5/10/20 3:17:26:745 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:746 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:746 UTC] 00000098 WebConstraint 3           url: /TargetServlet/*
[5/10/20 3:17:26:747 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:748 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:748 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:749 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:749 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:750 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:750 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:751 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:751 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:752 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:752 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:753 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:753 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:754 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:754 UTC] 00000098 WebResourceCo 3   Checking URL: /TargetServlet/*
[5/10/20 3:17:26:755 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:756 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:756 UTC] 00000098 WebConstraint 3           url: /getTraceStrings
[5/10/20 3:17:26:757 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:758 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:758 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:759 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:759 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:760 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:760 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:761 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:761 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:762 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:763 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:763 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:764 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:764 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:765 UTC] 00000098 WebResourceCo 3   Checking URL: /getTraceStrings
[5/10/20 3:17:26:765 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:766 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:767 UTC] 00000098 WebConstraint 3           url: /logViewerServlet
[5/10/20 3:17:26:767 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:768 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:768 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:769 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:769 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:770 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:770 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:771 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:771 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:772 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:772 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:773 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:774 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:774 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:775 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerServlet
[5/10/20 3:17:26:775 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:776 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:776 UTC] 00000098 WebConstraint 3           url: /logViewerInstanceServlet
[5/10/20 3:17:26:777 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:777 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:778 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:778 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:779 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:779 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:780 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:780 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:781 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:782 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:782 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:783 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:783 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:784 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:784 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerInstanceServlet
[5/10/20 3:17:26:785 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:786 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:786 UTC] 00000098 WebConstraint 3           url: /logHeaderServlet
[5/10/20 3:17:26:787 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:787 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:788 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:788 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:789 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:790 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:790 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:791 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:791 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:792 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:792 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:793 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:793 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:794 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:795 UTC] 00000098 WebResourceCo 3   Checking URL: /logHeaderServlet
[5/10/20 3:17:26:795 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:796 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:796 UTC] 00000098 WebConstraint 3           url: /instanceListServlet
[5/10/20 3:17:26:797 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:797 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:798 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:798 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:799 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:800 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:800 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:801 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:802 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:802 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:803 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:803 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:804 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:804 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:805 UTC] 00000098 WebResourceCo 3   Checking URL: /instanceListServlet
[5/10/20 3:17:26:806 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:806 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:807 UTC] 00000098 WebConstraint 3           url: /logViewerFilterServlet
[5/10/20 3:17:26:807 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:808 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:808 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:809 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:810 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:810 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:811 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:811 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:812 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:812 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:813 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:813 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:814 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:814 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:815 UTC] 00000098 WebResourceCo 3   Checking URL: /logViewerFilterServlet
[5/10/20 3:17:26:816 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:816 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:817 UTC] 00000098 WebConstraint 3           url: /traceLogServlet
[5/10/20 3:17:26:817 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:818 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:819 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:819 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:820 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:820 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:821 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:822 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:822 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:823 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:823 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:824 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:824 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:825 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:825 UTC] 00000098 WebResourceCo 3   Checking URL: /traceLogServlet
[5/10/20 3:17:26:826 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:827 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:827 UTC] 00000098 WebConstraint 3           url: /logMessageLookupServlet
[5/10/20 3:17:26:828 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:828 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:829 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:829 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:830 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:830 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:831 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:831 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:832 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:832 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:833 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:833 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:834 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:834 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:835 UTC] 00000098 WebResourceCo 3   Checking URL: /logMessageLookupServlet
[5/10/20 3:17:26:835 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:836 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:836 UTC] 00000098 WebConstraint 3           url: /logExportServlet
[5/10/20 3:17:26:837 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:837 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:838 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:839 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:839 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:840 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:841 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:841 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:842 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:842 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:843 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:843 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:844 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:845 UTC] 00000098 WebResourceCo 3   Checking URL: /logExportServlet
[5/10/20 3:17:26:845 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:846 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:846 UTC] 00000098 WebConstraint 3           url: /ffdcFileViewServlet
[5/10/20 3:17:26:847 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:847 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:848 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:848 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:849 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:849 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:850 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:851 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:851 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:852 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:852 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:853 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:853 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:854 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:854 UTC] 00000098 WebResourceCo 3   Checking URL: /ffdcFileViewServlet
[5/10/20 3:17:26:855 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:855 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:856 UTC] 00000098 WebConstraint 3           url: /BLAManagementStatus/*
[5/10/20 3:17:26:857 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:857 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:858 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:858 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:859 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:859 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:860 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:860 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:861 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:861 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:862 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:863 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:863 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:864 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:864 UTC] 00000098 WebResourceCo 3   Checking URL: /BLAManagementStatus/*
[5/10/20 3:17:26:865 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:865 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:866 UTC] 00000098 WebConstraint 3           url: /BLACreateStatusServlet/*
[5/10/20 3:17:26:866 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:867 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:867 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:868 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:868 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:869 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:869 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:870 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:871 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:871 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:872 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:872 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:873 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:873 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:874 UTC] 00000098 WebResourceCo 3   Checking URL: /BLACreateStatusServlet/*
[5/10/20 3:17:26:874 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:875 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:876 UTC] 00000098 WebConstraint 3           url: /CUStatus/*
[5/10/20 3:17:26:876 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:877 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:877 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:878 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:878 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:879 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:880 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:880 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:881 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:881 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:882 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:882 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:883 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:883 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:884 UTC] 00000098 WebResourceCo 3   Checking URL: /CUStatus/*
[5/10/20 3:17:26:884 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:885 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:885 UTC] 00000098 WebConstraint 3           url: /elasticityclass/*
[5/10/20 3:17:26:886 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:887 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:887 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:888 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:888 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:889 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:889 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:890 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:890 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:891 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:891 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:892 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:893 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:893 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:894 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticityclass/*
[5/10/20 3:17:26:894 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:895 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:895 UTC] 00000098 WebConstraint 3           url: /elasticity/*
[5/10/20 3:17:26:896 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:896 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:897 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:898 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:898 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:899 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:899 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:900 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:900 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:901 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:902 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:902 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:903 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:903 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:904 UTC] 00000098 WebResourceCo 3   Checking URL: /elasticity/*
[5/10/20 3:17:26:905 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:905 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:906 UTC] 00000098 WebConstraint 3           url: /healthclass/*
[5/10/20 3:17:26:906 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:907 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:907 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:908 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:908 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:909 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:909 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:910 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:911 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:911 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:912 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:912 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:913 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:914 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:914 UTC] 00000098 WebResourceCo 3   Checking URL: /healthclass/*
[5/10/20 3:17:26:915 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:915 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:916 UTC] 00000098 WebConstraint 3           url: /customprocessdefs/*
[5/10/20 3:17:26:917 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:917 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:918 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:918 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:919 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:919 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:920 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:920 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:921 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:921 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:922 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:923 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:923 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:924 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:924 UTC] 00000098 WebResourceCo 3   Checking URL: /customprocessdefs/*
[5/10/20 3:17:26:925 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:925 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:926 UTC] 00000098 WebConstraint 3           url: /WebServicesStatus/*
[5/10/20 3:17:26:926 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:927 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:927 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:928 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:929 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:929 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:930 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:930 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:931 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:931 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:932 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:932 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:933 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:934 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:934 UTC] 00000098 WebResourceCo 3   Checking URL: /WebServicesStatus/*
[5/10/20 3:17:26:935 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:935 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:936 UTC] 00000098 WebConstraint 3           url: /downloadClassLoaderXML
[5/10/20 3:17:26:936 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:937 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:937 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:938 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:939 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:939 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:940 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:940 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:941 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:941 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:942 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:942 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:943 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:944 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:944 UTC] 00000098 WebResourceCo 3   Checking URL: /downloadClassLoaderXML
[5/10/20 3:17:26:945 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:946 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:946 UTC] 00000098 WebConstraint 3           url: /XDAgentRPCServlet/*
[5/10/20 3:17:26:947 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:947 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:948 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:948 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:949 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:949 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:950 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:950 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:951 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:951 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:952 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:952 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:953 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:954 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:954 UTC] 00000098 WebResourceCo 3   Checking URL: /XDAgentRPCServlet/*
[5/10/20 3:17:26:955 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:955 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:956 UTC] 00000098 WebConstraint 3           url: /xdagentstatus/*
[5/10/20 3:17:26:956 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:957 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:957 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:958 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:959 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:959 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:960 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:960 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:961 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:961 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:962 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:962 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:963 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:964 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:964 UTC] 00000098 WebResourceCo 3   Checking URL: /xdagentstatus/*
[5/10/20 3:17:26:965 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:965 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:966 UTC] 00000098 WebConstraint 3           url: /GridEndpointAction/*
[5/10/20 3:17:26:966 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:967 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:967 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:968 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:968 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:969 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:969 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:970 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:971 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:971 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:972 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:972 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:973 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:973 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:974 UTC] 00000098 WebResourceCo 3   Checking URL: /GridEndpointAction/*
[5/10/20 3:17:26:974 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:975 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:976 UTC] 00000098 WebConstraint 3           url: /middlewaredescriptors/*
[5/10/20 3:17:26:976 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:977 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:977 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:978 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:979 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:979 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:980 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:980 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:981 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:981 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:982 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:982 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:983 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:983 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:984 UTC] 00000098 WebResourceCo 3   Checking URL: /middlewaredescriptors/*
[5/10/20 3:17:26:985 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:985 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:986 UTC] 00000098 WebConstraint 3           url: /wastask/*
[5/10/20 3:17:26:986 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:987 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:987 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:988 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:989 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:989 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:26:990 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:26:990 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:26:991 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:26:991 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:26:992 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:992 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:993 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:993 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:994 UTC] 00000098 WebResourceCo 3   Checking URL: /wastask/*
[5/10/20 3:17:26:995 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:26:995 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:26:996 UTC] 00000098 WebConstraint 3           url: /wastargetmonitor/*
[5/10/20 3:17:26:996 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:26:997 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:26:998 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:26:998 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:26:999 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:26:999 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:27:000 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:27:000 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:27:001 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:27:002 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:27:002 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:27:003 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:27:003 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:27:004 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:27:004 UTC] 00000098 WebResourceCo 3   Checking URL: /wastargetmonitor/*
[5/10/20 3:17:27:005 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:27:005 UTC] 00000098 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:17:27:006 UTC] 00000098 WebConstraint 3           url: /ibm/console/targetmonitor/*
[5/10/20 3:17:27:006 UTC] 00000098 WebResourceCo >  matches Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 true
[5/10/20 3:17:27:007 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:27:008 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:27:008 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:27:009 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:27:009 UTC] 00000098 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:17:27:010 UTC] 00000098 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:17:27:010 UTC] 00000098 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:17:27:011 UTC] 00000098 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:17:27:011 UTC] 00000098 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:17:27:012 UTC] 00000098 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:17:27:012 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: DELETE
[5/10/20 3:17:27:013 UTC] 00000098 WebResourceCo 3   memberOfList, methodName: GET methodList[1]: GET
[5/10/20 3:17:27:014 UTC] 00000098 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:17:27:014 UTC] 00000098 WebResourceCo 3   Checking URL: /ibm/console/targetmonitor/*
[5/10/20 3:17:27:015 UTC] 00000098 WebResourceCo <  no match Exit
[5/10/20 3:17:27:015 UTC] 00000098 WebConstraint <  getConstraints Exit
[5/10/20 3:17:27:016 UTC] 00000098 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /com.ibm.ws.console.security.forwardCmd.do
                                 GET
                                 REQUEST
[5/10/20 3:17:27:017 UTC] 00000098 WebCollaborat 3    We have a custom login or error page request, web app login URL:[/logon.jsp], errorPage URL:[/logonError.jsp], and the requested URI:[/com.ibm.ws.console.security.forwardCmd.do]
[5/10/20 3:17:27:017 UTC] 00000098 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:17:27:018 UTC] 00000098 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:17:27:018 UTC] 00000098 WebCollaborat 3    List of required roles for uri /com.ibm.ws.console.security.forwardCmd.do is: 
[5/10/20 3:17:27:019 UTC] 00000098 WebCollaborat 3    required role: administrator
[5/10/20 3:17:27:019 UTC] 00000098 WebCollaborat 3    required role: operator
[5/10/20 3:17:27:020 UTC] 00000098 WebCollaborat 3    required role: configurator
[5/10/20 3:17:27:021 UTC] 00000098 WebCollaborat 3    required role: monitor
[5/10/20 3:17:27:021 UTC] 00000098 WebCollaborat 3    required role: nobody
[5/10/20 3:17:27:022 UTC] 00000098 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:17:27:022 UTC] 00000098 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/ibm/console
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:27:023 UTC] 00000098 WebRequestImp >  getAppVHost Entry
[5/10/20 3:17:27:023 UTC] 00000098 WebRequestImp <  getAppVHost Exit
                                 appVHost=admin_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:17:27:024 UTC] 00000098 WebCollaborat >  isURIBoundByConstraint Entry
                                 isclite
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:27:024 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:27:025 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:27:026 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:27:026 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:27:027 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:27:027 UTC] 00000098 WebConstraint >  existsExactMatchURI Entry
                                 /com.ibm.ws.console.security.forwardCmd.do
[5/10/20 3:17:27:028 UTC] 00000098 WebConstraint 3   webConstraintsTable.length = 49
[5/10/20 3:17:27:028 UTC] 00000098 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:17:27:029 UTC] 00000098 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:17:27:029 UTC] 00000098 WebCollaborat 3   isURIBound for uri: /com.ibm.ws.console.security.forwardCmd.do: false
[5/10/20 3:17:27:030 UTC] 00000098 WebCollaborat 3   securityConstraints for uri /com.ibm.ws.console.security.forwardCmd.do are: com.ibm.ws.security.web.WebResourceCollectionConstraints@a3f1561d
[5/10/20 3:17:27:031 UTC] 00000098 WebCollaborat 3   URI -  /com.ibm.ws.console.security.forwardCmd.do.GET is protected
[5/10/20 3:17:27:031 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:032 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:032 UTC] 00000098 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:033 UTC] 00000098 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:17:27:034 UTC] 00000098 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:17:27:034 UTC] 00000098 WSCredentialI >  getSecurityName Entry
[5/10/20 3:17:27:035 UTC] 00000098 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:17:27:035 UTC] 00000098 WSCredentialI >  getRealmName Entry
[5/10/20 3:17:27:036 UTC] 00000098 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:036 UTC] 00000098 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:17:27:037 UTC] 00000098 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:17:27:038 UTC] 00000098 WebCollaborat 3   required roles: administrator
[5/10/20 3:17:27:038 UTC] 00000098 WebCollaborat 3   required roles: operator
[5/10/20 3:17:27:039 UTC] 00000098 WebCollaborat 3   required roles: configurator
[5/10/20 3:17:27:039 UTC] 00000098 WebCollaborat 3   required roles: monitor
[5/10/20 3:17:27:040 UTC] 00000098 WebCollaborat 3   required roles: nobody
[5/10/20 3:17:27:041 UTC] 00000098 WebCollaborat 3   http method: DELETE
[5/10/20 3:17:27:041 UTC] 00000098 WebCollaborat 3   http method: GET
[5/10/20 3:17:27:042 UTC] 00000098 WebCollaborat 3   http method: POST
[5/10/20 3:17:27:042 UTC] 00000098 WebCollaborat 3   http method: PUT
[5/10/20 3:17:27:043 UTC] 00000098 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:17:27:044 UTC] 00000098 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:17:27:044 UTC] 00000098 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@f2eee7e8
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@b9386145
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:045 UTC] 00000098 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:17:27:045 UTC] 00000098 BaseAccessMan >  getNamesFromRoles Entry
                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@d91fc2cd ]
        Role Name     [ administrator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@e22a28a4 ]
        Role Name     [ operator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@45c7db35 ]
        Role Name     [ configurator ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@49b0bd5a ]
        Role Name     [ monitor ]

                                         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@c1ff7ee3 ]
        Role Name     [ nobody ]

[5/10/20 3:17:27:046 UTC] 00000098 BaseAccessMan <  getNamesFromRoles Exit
                                 administrator
                                 operator
                                 configurator
                                 monitor
                                 nobody
[5/10/20 3:17:27:047 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:047 UTC] 00000098 ContextManage 3   getProperty : com.ibm.websphere.security.authorizationTable
[5/10/20 3:17:27:048 UTC] 00000098 ContextManage 3   Returning: 
[5/10/20 3:17:27:048 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:049 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:049 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:050 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:051 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:051 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:052 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:052 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:053 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:053 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:054 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:054 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:055 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:056 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:056 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:057 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:057 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:058 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:058 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:059 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:060 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:060 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:061 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:061 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:062 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:063 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:063 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:064 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:064 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:065 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:065 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:066 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:066 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:067 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:067 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:068 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:069 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:069 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:070 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:070 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:071 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:071 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:072 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:072 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:073 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:073 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:074 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:074 UTC] 00000098 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:17:27:075 UTC] 00000098 WSAccessManag <  isGrantedAnyRole Exit
                                 true
[5/10/20 3:17:27:075 UTC] 00000098 WebCollaborat <  checkAuthorization Exit
[5/10/20 3:17:27:076 UTC] 00000098 WebCollaborat 3   Authorization check for uri: /com.ibm.ws.console.security.forwardCmd.do succeeded. 
[5/10/20 3:17:27:077 UTC] 00000098 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.PermitReply@f62d46e4
[5/10/20 3:17:27:077 UTC] 00000098 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.PermitReply@f62d46e4
[5/10/20 3:17:27:078 UTC] 00000098 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:17:27:078 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:079 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:080 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 com.ibm.ws.security.web.WebRequestImpl@d6800105[uri=null,webAttributes=webAppName[isclite]
isProtected[true]
realm[WEBAPP]
challengeType[FORM]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=admin_host
appContextRoot=/ibm/console
appContext=null
isVHostAndContextRootSet=true
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 action
                                 isclite
[5/10/20 3:17:27:080 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:27:081 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:27:081 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:27:082 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:27:082 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:27:083 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:27:083 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:27:084 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:085 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:27:085 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:27:086 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:27:086 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:087 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@4d3058e3
[5/10/20 3:17:27:088 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@4d3058e3
[5/10/20 3:17:27:088 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@9bb127ce
                                 action
[5/10/20 3:17:27:089 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@9bb127ce
                                 action
[5/10/20 3:17:27:089 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:27:090 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:27:090 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:091 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:091 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:092 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:093 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:093 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:094 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:094 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@efd52697
[5/10/20 3:17:27:095 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:096 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:096 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:097 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:097 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:098 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:099 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:099 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:100 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:100 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:101 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:101 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:102 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:103 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:103 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:104 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:104 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:105 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:105 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:106 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:106 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:107 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:108 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:108 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:109 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:109 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:110 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:111 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:111 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:112 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:112 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:113 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:114 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:114 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:115 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:115 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:116 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:116 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:117 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:118 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:118 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:120 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:120 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:121 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:121 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:122 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:122 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:123 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:123 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:124 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:125 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:125 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:126 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:126 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:127 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:127 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:128 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:129 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:129 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:130 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:130 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:131 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:132 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:132 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:133 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:133 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:134 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:134 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:135 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:135 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:136 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:137 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:137 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:138 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:138 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:139 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:139 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:140 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:141 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:141 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:142 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:143 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:143 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:144 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:144 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:145 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:145 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:146 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:146 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:147 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:147 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:148 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:149 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:149 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:150 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:150 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:151 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:151 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:152 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:152 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:153 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:153 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:154 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:155 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:155 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:156 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:156 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:157 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:157 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:158 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:158 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:159 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:160 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:160 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:161 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:161 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:162 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:162 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:163 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:163 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:164 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:165 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:165 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:166 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:166 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:167 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:167 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:168 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:168 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:169 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:169 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:170 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:170 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:171 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:172 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:172 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:173 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:173 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:174 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:174 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:175 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:175 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:176 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:176 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:177 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:177 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:178 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:179 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:180 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:180 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:181 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:181 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:182 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:182 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:183 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:184 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:184 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:185 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:185 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:186 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:186 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:187 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:187 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:188 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:188 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:189 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:190 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:190 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:194 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:195 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:196 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:197 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:197 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:198 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:198 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:199 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:199 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:200 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:200 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:210 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:211 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:212 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:213 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:214 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:215 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:215 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:216 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:217 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:217 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:218 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:218 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:219 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:220 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:220 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:221 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:222 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.console.core.action.BaseDetailController$1@9bf60037
                                 System
[5/10/20 3:17:27:222 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.console.core.action.BaseDetailController.getParentObject(BaseDetailController.java:409)
[5/10/20 3:17:27:223 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:27:223 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:224 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:225 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:27:225 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:226 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:27:227 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:27:227 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:228 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:228 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:27:229 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:27:229 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:27:230 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:27:230 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:27:231 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:27:231 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:232 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:233 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:233 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:234 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:234 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:235 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:236 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:236 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:237 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:237 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:238 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:238 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:239 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:240 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:240 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:240 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:241 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:242 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:242 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:243 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:27:243 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:244 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:244 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:27:245 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:246 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:246 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:247 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:247 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:248 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:248 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:249 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:249 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:250 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:250 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:250 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:251 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:252 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:252 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:253 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:27:254 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:255 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:255 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:256 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:257 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:257 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:258 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:258 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:259 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:259 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:260 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:261 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:261 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:262 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:262 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:263 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:264 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:264 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:265 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:265 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:266 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:267 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:267 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:268 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:268 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:269 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:270 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:270 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:271 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:271 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:272 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:272 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:274 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:274 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:275 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:276 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:276 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:277 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:278 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:279 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:280 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:281 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:281 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:282 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:283 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:283 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:284 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:284 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:285 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:286 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:286 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:287 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:288 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:288 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:289 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:289 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:290 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:291 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:291 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:292 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:292 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:293 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:293 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:294 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:295 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:295 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:296 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:296 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:297 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:298 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:298 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:299 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:299 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:300 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:301 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:301 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:302 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:303 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:304 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:304 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:305 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:305 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:306 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:307 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:308 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:309 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:309 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:310 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:310 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:311 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:312 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:312 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:313 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:313 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:314 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:314 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:315 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:315 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:316 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:317 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:317 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:318 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:318 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:319 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:319 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:320 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:320 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:321 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:322 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:323 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@9447ad74;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:323 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:324 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:324 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:325 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:325 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:326 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:326 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:327 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:328 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:328 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:329 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:329 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:330 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:331 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:331 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:332 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:332 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:333 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:333 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:334 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:334 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:335 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:335 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:336 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:337 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:337 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:338 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:338 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:339 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:339 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:340 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:340 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:341 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:342 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:342 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:343 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:343 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:344 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:345 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:345 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:346 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:346 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:347 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:347 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:348 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:348 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:349 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:350 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:350 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:351 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:351 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:352 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:353 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:353 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:354 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:354 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:355 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:356 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:356 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:357 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:357 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:358 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:358 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:359 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:359 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:360 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:360 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:361 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:361 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:363 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@80223276;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:363 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:364 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:365 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:365 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:366 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:366 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:367 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:368 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:368 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:369 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:369 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:370 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:370 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:371 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:371 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:372 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:372 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:373 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:374 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:374 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:375 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:375 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:376 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:377 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:377 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:378 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:379 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:379 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:380 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:380 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:381 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:381 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:382 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:383 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:383 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:384 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:385 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:385 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:386 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:386 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:387 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:387 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:388 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:389 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:389 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:390 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:390 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:391 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:392 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:393 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:393 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:394 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:395 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:395 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:396 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:396 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:397 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:398 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:398 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:399 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:399 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:400 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:401 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:401 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:402 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:403 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:403 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:404 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:404 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:405 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:406 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:407 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:407 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:408 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:409 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:409 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:410 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:411 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:411 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:413 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:413 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:414 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:414 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:415 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:416 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:416 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:417 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:417 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:418 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:419 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:419 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:420 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:420 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:421 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:421 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:422 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:423 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:423 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:424 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:425 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:425 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:426 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:427 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:427 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:428 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:429 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:429 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:430 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:431 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:431 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:432 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:432 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:433 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:434 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:434 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:435 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:435 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:436 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:437 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:437 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:438 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@c22700a2;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:439 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:439 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:440 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:440 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:441 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:441 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:442 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:443 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:443 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:444 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:444 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:445 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:445 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:446 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:447 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:447 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:448 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:448 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:449 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:450 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:451 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:451 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:452 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:453 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:453 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:454 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:454 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:455 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:455 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:456 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:456 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:457 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:458 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:459 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:459 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:460 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:460 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:461 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:462 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:462 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:463 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:463 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:464 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:464 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:465 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:466 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:466 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:467 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:467 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:468 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:468 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:469 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:470 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:470 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:471 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:472 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:472 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:473 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:474 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:474 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:475 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:475 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:476 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:476 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:477 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:477 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:478 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:478 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:479 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:480 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@3541c88a;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:480 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:481 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:481 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:482 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:482 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:483 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:483 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:484 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:484 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:485 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:486 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:486 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:487 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:487 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:488 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:489 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:489 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:490 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:490 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:491 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:491 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:493 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:493 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:494 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:494 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:495 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:495 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:496 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:496 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:497 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:497 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:498 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:498 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:499 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:500 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:500 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:501 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:501 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:502 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:502 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:503 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:504 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:504 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:505 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:505 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:506 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:507 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:507 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:508 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:508 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:509 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:509 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:510 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:511 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:511 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:512 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:513 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:513 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:514 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:514 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:515 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:516 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:516 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:517 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:517 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:518 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:518 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:519 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:519 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:520 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:520 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:521 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:522 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:522 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:523 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:523 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:524 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:524 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:525 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:525 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:526 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:527 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:527 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:528 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:528 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:529 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:529 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:530 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:530 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:531 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:532 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:532 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:533 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:534 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:535 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:535 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:536 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:538 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:539 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:540 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:542 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:542 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:543 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:544 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:544 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:545 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:545 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:546 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:546 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:547 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:548 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:548 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:549 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:550 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:550 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:551 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:551 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:552 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:552 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:553 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:554 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:554 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:555 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:556 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:556 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:557 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:558 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:558 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:559 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:559 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:560 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:561 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:562 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:562 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:563 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:564 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:564 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:565 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:566 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:566 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:567 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:567 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:568 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:569 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:569 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:570 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:570 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:571 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:572 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:572 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:573 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:573 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:574 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:575 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:575 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:576 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:576 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:577 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:577 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:578 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:579 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:579 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:580 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:581 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:581 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:582 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:583 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:583 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:585 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:585 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:586 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:586 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:587 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:587 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:588 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:588 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:589 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:590 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:591 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:591 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:592 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:592 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:593 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:594 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:594 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:595 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:595 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:596 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:597 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:597 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:598 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:598 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:599 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:600 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:600 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:601 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:601 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:602 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:603 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:603 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:604 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:605 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:605 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:606 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:606 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:607 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:607 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:608 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:608 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:609 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:610 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:610 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:611 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:611 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:612 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:613 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:613 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:614 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:614 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:615 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:615 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:616 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:616 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:617 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:617 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:618 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:619 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:619 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:620 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:620 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:621 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:622 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:623 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:623 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:624 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:625 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:625 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:626 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:626 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:627 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:628 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:628 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:629 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:629 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:630 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:630 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:631 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:631 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:632 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:633 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:633 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:634 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:634 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:635 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:635 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:636 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:636 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:637 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@d94901bc;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:637 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:638 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:638 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:639 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:639 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:640 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:641 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:641 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:642 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:642 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:643 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:643 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:644 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:644 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:645 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:645 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:646 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:647 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:647 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:648 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:648 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:649 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:649 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:650 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:650 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:651 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:652 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:652 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:653 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:653 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:654 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:655 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:655 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:656 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:656 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:657 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:657 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:658 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:659 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:659 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:660 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:660 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:661 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:661 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:662 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:663 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:663 UTC] 00000098 distSecurityC >  getConfigurator Entry
[5/10/20 3:17:27:664 UTC] 00000098 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:17:27:665 UTC] 00000098 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:17:27:666 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:666 UTC] 00000098 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:667 UTC] 00000098 distSecurityC <  getConfigurator Exit
[5/10/20 3:17:27:668 UTC] 00000098 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 scope
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:668 UTC] 00000098 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:17:27:669 UTC] 00000098 RoleBasedAuth >  isCallerInRole Entry
                                 administrator
[5/10/20 3:17:27:670 UTC] 00000098 RoleBasedAuth >  getEffectiveCredentials Entry
[5/10/20 3:17:27:670 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:671 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:671 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:672 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:672 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:673 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:673 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:674 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:674 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:675 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:676 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:676 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:677 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:677 UTC] 00000098 RoleBasedAuth <  getEffectiveCredentials Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl$CredHolder@601bad55;cred=com.ibm.ws.security.auth.WSCredentialImpl@e34c9463;subject=Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
;threadMissingCredentials=false
[5/10/20 3:17:27:678 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:679 UTC] 00000098 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:17:27:679 UTC] 00000098 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:17:27:680 UTC] 00000098 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:680 UTC] 00000098 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:17:27:681 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:681 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:682 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:682 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:17:27:683 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:17:27:684 UTC] 00000098 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:17:27:684 UTC] 00000098 RoleBasedSubj 3   server allowed
[5/10/20 3:17:27:685 UTC] 00000098 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:17:27:685 UTC] 00000098 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:17:27:686 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:687 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:687 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:688 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:689 UTC] 00000098 RoleBasedSubj 3   accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:17:27:689 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:690 UTC] 00000098 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:690 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:691 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:691 UTC] 00000098 ContextManage >  isInternalServerId Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:692 UTC] 00000098 ContextManage >  getDefaultRealm Entry
[5/10/20 3:17:27:692 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:693 UTC] 00000098 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:17:27:694 UTC] 00000098 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:17:27:694 UTC] 00000098 ContextManage <  isInternalServerCredential Exit
                                 false
[5/10/20 3:17:27:695 UTC] 00000098 RoleBasedSubj 3   isServerId? false
[5/10/20 3:17:27:695 UTC] 00000098 RoleBasedSubj 3   isGrantedAnyRole: accessId is: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:696 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:696 UTC] 00000098 RoleBasedSubj 3   about to check for isAllAuthenticatedUsersInTrustedRealmsGranted
[5/10/20 3:17:27:697 UTC] 00000098 RoleBasedSubj >  isAllAuthenticatedUsersInTrustedRealmsGranted Entry
[5/10/20 3:17:27:697 UTC] 00000098 RoleBasedSubj <  isAllAuthenticatedUsersInTrustedRealmsGranted Exit
[5/10/20 3:17:27:698 UTC] 00000098 RoleBasedSubj >  isAdminGranted Entry
[5/10/20 3:17:27:699 UTC] 00000098 RoleBasedSubj 3   adminID allowed
[5/10/20 3:17:27:699 UTC] 00000098 RoleBasedSubj >  isAdminId Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:17:27:700 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:700 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:701 UTC] 00000098 RoleBasedSubj 3   adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:701 UTC] 00000098 RoleBasedSubj 3   ignoreCase set: adminAccessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm accessId: user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:17:27:702 UTC] 00000098 RoleBasedSubj <  isAdminId returning true Exit
[5/10/20 3:17:27:703 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole default=false  (admin)  Entry
[5/10/20 3:17:27:704 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.enableAuditForIsCallerInRole  (admin)  val=true Exit
[5/10/20 3:17:27:704 UTC] 00000098 RoleBasedAuth <  isCallerInRole Exit
                                 true
[5/10/20 3:17:27:705 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:706 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:706 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:707 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:707 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:708 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:708 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:709 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:709 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:710 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:711 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:711 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:712 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:713 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:713 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:714 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:715 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:716 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:716 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:717 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:718 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:718 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:719 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:719 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:720 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:720 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:721 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:722 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:722 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:723 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:723 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:724 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:725 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:726 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:726 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:727 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:727 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:728 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:728 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:729 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:729 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:730 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:731 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:731 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:732 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:732 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:733 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:733 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:734 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:734 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:735 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:738 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:739 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:740 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:741 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:742 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:742 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:743 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:743 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:744 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:745 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:745 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:746 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:746 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:747 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:747 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:748 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:749 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:750 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:750 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:751 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:751 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:752 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:752 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:753 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:754 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:754 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:755 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:755 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:756 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:756 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:757 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:758 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:758 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:759 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:759 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:760 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:760 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:761 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:762 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:762 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:763 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:763 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:27:764 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:765 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:27:765 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:27:766 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:27:766 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:767 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:767 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:768 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:768 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:769 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:770 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:27:770 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:771 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:771 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:27:772 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:772 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:27:773 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:27:773 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:774 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:774 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:27:775 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:27:776 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:27:776 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:27:777 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:27:777 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:27:778 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:779 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:779 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@7cb28dc8
                                 Specified
[5/10/20 3:17:27:780 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:27:781 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:781 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:782 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:782 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:783 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:784 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:784 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:785 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:785 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:786 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:786 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:787 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:788 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:788 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:789 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:788 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:791 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:791 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:792 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:792 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:27:793 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:793 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:794 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:27:795 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:795 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:796 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:796 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:797 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:798 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:27:798 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:799 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:799 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:800 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:800 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:27:801 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:27:801 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:802 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:803 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:803 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:804 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:804 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:27:805 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:805 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:806 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:806 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:807 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:27:807 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:27:808 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:809 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:809 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:810 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:810 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:811 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:812 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:812 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:813 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:27:813 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:814 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:814 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:815 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:816 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:27:816 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:27:817 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:817 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:818 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:819 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:819 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:27:820 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:27:820 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:821 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:822 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:27:822 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:27:823 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:27:823 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:27:824 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:825 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:825 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:826 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:826 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:827 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:828 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:828 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:829 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:829 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:830 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:830 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:831 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:832 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:831 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:833 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:834 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:834 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:835 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:27:835 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:27:836 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:837 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:27:837 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 com.ibm.ws.console.core.servlet.CSRFResponseWrapper@ca2c4a9f
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configboxLayout.jsp
                                 false
[5/10/20 3:17:27:838 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:27:839 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:27:839 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:840 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:840 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:841 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:841 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:27:842 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:843 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:842 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:844 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:844 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:845 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:846 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@23556bcb
[5/10/20 3:17:27:846 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:27:847 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:27:847 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:27:848 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:848 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:849 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@23556bcb
[5/10/20 3:17:27:850 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:851 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:851 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:852 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:852 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:853 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:854 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:854 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:855 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:855 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:856 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:857 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:857 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:858 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:858 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:859 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:860 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:860 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:861 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:861 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:862 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:862 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:863 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@aeffe3c4
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/browser_detection.jsp
                                 false
[5/10/20 3:17:27:864 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:27:864 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:27:865 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:866 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:866 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:867 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:867 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:27:868 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:868 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:868 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:869 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:870 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:870 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:871 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7c18c8eb
[5/10/20 3:17:27:871 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:27:872 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:27:873 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:27:873 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:874 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:875 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7c18c8eb
[5/10/20 3:17:27:876 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:876 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:877 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:877 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:878 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:878 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:879 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:880 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:880 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:881 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:881 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:882 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@50c66542
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/bidi.jsp
                                 false
[5/10/20 3:17:27:883 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:27:883 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:27:884 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:884 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:885 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:885 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:886 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:27:887 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:887 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:887 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:888 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:889 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:889 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:890 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@373f453e
[5/10/20 3:17:27:890 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:27:891 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:27:891 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:27:892 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:892 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:893 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@373f453e
[5/10/20 3:17:27:894 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:895 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:895 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:896 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:896 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:897 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:898 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:898 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:899 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:899 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:900 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:901 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@373f453e
[5/10/20 3:17:27:901 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:27:902 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:902 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:903 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:904 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:904 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:905 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:905 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:906 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:907 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:907 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:908 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:907 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:909 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:909 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:910 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:911 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:911 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@373f453e
[5/10/20 3:17:27:912 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:27:912 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:913 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:913 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:914 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:914 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:915 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:916 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:917 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:917 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:918 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:918 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:919 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:919 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:920 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:920 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:921 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:921 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:922 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:923 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:923 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:924 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:924 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:925 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@7c18c8eb
[5/10/20 3:17:27:926 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:27:926 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:927 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:927 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:928 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:928 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:929 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:930 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:930 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:931 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:931 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:932 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:931 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:933 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:933 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:934 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:934 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:935 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@7c18c8eb
[5/10/20 3:17:27:936 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:27:937 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@9153a642
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/content_accessibility.jsp
                                 false
[5/10/20 3:17:27:937 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:27:938 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:27:938 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:939 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:939 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:940 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:940 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:27:941 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:942 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:941 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:943 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:943 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:944 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:944 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@da046dce
[5/10/20 3:17:27:945 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:27:945 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:27:946 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:27:946 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:947 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:948 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@da046dce
[5/10/20 3:17:27:948 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:949 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:950 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:950 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:951 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:951 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:952 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:952 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:953 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:954 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:954 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:955 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@da046dce
[5/10/20 3:17:27:955 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:27:956 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:27:957 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:958 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:958 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:27:959 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:27:959 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:960 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:27:960 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:961 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:961 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:962 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:961 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:27:963 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:27:964 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:27:964 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:27:965 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:27:965 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@da046dce
[5/10/20 3:17:27:966 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:27:966 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:967 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:968 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:968 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:969 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:969 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:970 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:970 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:971 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:971 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:972 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:975 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@6c588975
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/detailTitleLayout.jsp
                                 false
[5/10/20 3:17:27:976 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:27:977 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:27:977 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:27:978 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:27:979 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:979 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:980 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:27:980 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:981 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:980 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:982 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:27:983 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:27:983 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:27:984 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1c2678cc
[5/10/20 3:17:27:984 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:27:985 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:27:985 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:27:986 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:27:986 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:27:987 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@1c2678cc
[5/10/20 3:17:27:988 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:988 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:989 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:27:989 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:27:990 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:27:990 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:27:991 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:27:991 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:27:992 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:27:992 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:27:993 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:27:997 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:27:998 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:27:999 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:000 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:000 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:001 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:001 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:002 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:003 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:003 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:004 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:005 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:006 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:007 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:007 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:008 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:009 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:009 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:010 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:011 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:011 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:012 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:014 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:014 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:015 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:016 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:016 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:017 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:018 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:019 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:019 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:020 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:020 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:021 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:021 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:022 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:023 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:023 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:024 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:024 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:025 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:026 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:026 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:027 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:028 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@50edf179
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/scopeTitle.jsp
                                 false
[5/10/20 3:17:28:028 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:029 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:030 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:030 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:031 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:031 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:032 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:032 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:033 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:032 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:034 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:034 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:035 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:036 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@164c6445
[5/10/20 3:17:28:036 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:037 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:037 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:038 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:038 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:039 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@164c6445
[5/10/20 3:17:28:040 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:040 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:041 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:041 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:042 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:042 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:043 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:043 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:044 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:044 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:045 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:046 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@164c6445
[5/10/20 3:17:28:046 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:047 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:047 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:048 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:048 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:049 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:050 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:051 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:051 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:052 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:052 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:053 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:052 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:054 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:054 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:055 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:056 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:056 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@164c6445
[5/10/20 3:17:28:057 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:058 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@14306aa9
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/portletToolbar.jsp
                                 false
[5/10/20 3:17:28:058 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:059 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:059 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:060 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:060 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:061 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:061 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:062 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:062 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:062 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:064 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:064 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:065 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:065 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@707d699
[5/10/20 3:17:28:066 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:066 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:067 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:067 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:068 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:068 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@707d699
[5/10/20 3:17:28:069 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:070 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:070 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:071 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:072 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:072 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:073 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:073 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:074 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:074 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:075 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:076 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:28:076 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:077 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:28:077 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:078 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:078 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@6d7255d2
                                 System
[5/10/20 3:17:28:079 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:28:080 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:080 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:081 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:081 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:082 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:082 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:083 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:083 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:084 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:084 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:085 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:085 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:086 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:086 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:087 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:088 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:088 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:089 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:090 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:090 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:091 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:092 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:092 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:093 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:093 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:094 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:094 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:095 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:095 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:096 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:097 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:096 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:098 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:098 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:099 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:099 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:28:100 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:100 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:101 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:28:101 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:102 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:102 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:103 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:103 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:104 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:28:105 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:105 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:106 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:106 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:107 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:28:107 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:28:108 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:109 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:109 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:110 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:110 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:111 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:111 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:112 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:112 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:113 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:114 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:113 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:114 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:115 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:115 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:116 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:28:117 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@707d699
[5/10/20 3:17:28:117 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:118 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:118 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:119 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:120 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:120 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:121 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:121 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:122 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:122 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:123 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:123 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:123 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:124 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:125 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:126 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:126 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:127 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@707d699
[5/10/20 3:17:28:127 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:128 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:129 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:129 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:130 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:131 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:131 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:132 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:132 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:133 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:133 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:134 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:135 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@1c2678cc
[5/10/20 3:17:28:135 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:136 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:136 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:137 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:138 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:138 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:139 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:139 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:140 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:140 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:141 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:141 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:141 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:142 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:143 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:143 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:144 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:144 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@1c2678cc
[5/10/20 3:17:28:145 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:146 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:146 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:147 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:147 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:148 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:148 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:149 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:150 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:150 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:151 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:151 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:157 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@d11ea9ca
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/configGenPropLayout.jsp
                                 false
[5/10/20 3:17:28:159 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:160 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:160 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:161 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:163 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:164 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:165 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:166 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:167 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:166 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:168 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:169 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:169 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:170 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9750a16
[5/10/20 3:17:28:171 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:171 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:172 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:173 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:174 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:175 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@9750a16
[5/10/20 3:17:28:176 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:177 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:177 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:178 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:178 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:179 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:180 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:180 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:181 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:182 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:183 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:185 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:28:185 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:186 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:28:186 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:187 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:188 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.wsspi.RegistryLoader$2@e796e12f
                                 System
[5/10/20 3:17:28:189 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.wsspi.RegistryLoader.getPluginRegistry(RegistryLoader.java:223)
[5/10/20 3:17:28:190 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:190 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:191 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:192 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:192 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:193 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:194 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:194 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:195 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:195 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:196 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:197 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:197 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:198 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:198 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:199 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:199 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:200 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:200 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:201 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:202 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:202 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:203 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:203 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:204 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:204 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:205 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:206 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:206 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:207 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:207 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:207 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:208 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:209 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:209 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:210 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:28:211 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:211 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:212 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:28:213 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:214 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:214 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:236 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:237 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:238 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:238 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:239 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:240 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:241 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:241 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:242 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:243 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:243 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:243 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:245 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:245 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:246 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:246 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:28:247 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:248 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:248 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:249 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:250 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:251 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:251 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:252 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:252 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:253 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:253 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:254 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:255 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:255 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:256 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:257 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:257 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:258 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:258 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:259 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:259 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:260 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:260 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:261 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:262 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:262 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:263 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:263 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:28:264 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:264 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:28:265 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:28:265 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:28:266 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:266 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:267 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:267 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:268 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:268 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:269 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:270 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:270 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:271 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:271 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:272 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:273 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:273 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:274 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:274 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:275 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:275 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:276 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:276 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:277 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:277 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:278 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:278 UTC] 00000098 ContextManage >  runAs Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 com.ibm.ws.management.commands.nodegroup.NodeGroupHelper$1@2b2b3aa1
                                 Specified
[5/10/20 3:17:28:279 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.ws.management.commands.nodegroup.NodeGroupHelper.getCellType(NodeGroupHelper.java:2129)
[5/10/20 3:17:28:280 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:280 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:281 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:282 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:282 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:283 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:283 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:284 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:284 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:285 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:285 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:286 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:287 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:287 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:288 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:287 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:289 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:289 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:290 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:291 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:28:291 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:292 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:293 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:28:293 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:294 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:295 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:295 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:296 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:296 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:28:297 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:297 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:298 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:299 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:299 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:28:300 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:28:300 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:301 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:301 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:302 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:303 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:303 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:28:304 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:304 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:305 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:305 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:306 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:28:307 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:28:307 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:28:308 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:308 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:28:309 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:310 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:310 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:311 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:311 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:312 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:28:313 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:313 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:314 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:314 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:315 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:28:315 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:28:316 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:317 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:317 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:318 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:318 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:319 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:28:320 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:320 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:321 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:321 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:28:322 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:28:322 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:28:323 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:28:324 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:324 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:28:325 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:325 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:326 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:326 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:327 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:328 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:328 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:329 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:329 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:330 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:330 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:330 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:332 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:333 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:333 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:334 UTC] 00000098 ContextManage <  runAs(Specified) Exit
[5/10/20 3:17:28:334 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:28:335 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:336 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:28:336 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:337 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:337 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:338 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:338 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:339 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
[5/10/20 3:17:28:340 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:28:340 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                 <null>
[5/10/20 3:17:28:341 UTC] 00000098 ContextManage <  isServerCred Exit
                                 false
[5/10/20 3:17:28:341 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 false
[5/10/20 3:17:28:342 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:343 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:343 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:344 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:344 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:346 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@3d68141e
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/submitLayout.jsp
                                 false
[5/10/20 3:17:28:346 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:347 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:347 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:348 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:349 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:349 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:350 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:350 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:351 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:350 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:352 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:353 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:353 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:354 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@513a4601
[5/10/20 3:17:28:355 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:355 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:356 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:357 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:358 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:358 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@513a4601
[5/10/20 3:17:28:359 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:360 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:361 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:361 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:362 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:362 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:363 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:364 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:364 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:365 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:366 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:367 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@513a4601
[5/10/20 3:17:28:368 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:369 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:369 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:370 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:370 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:371 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:372 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:372 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:373 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:374 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:374 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:375 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:374 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:376 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:377 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:377 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:378 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:379 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@513a4601
[5/10/20 3:17:28:379 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:380 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@44bd7c6b
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/dynamicSelectionLayout.jsp
                                 false
[5/10/20 3:17:28:381 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:381 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:382 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:382 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:383 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:384 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:384 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:385 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:385 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:385 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:386 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:387 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:387 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:388 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@712aec4b
[5/10/20 3:17:28:388 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:389 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:390 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:390 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:391 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:391 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@712aec4b
[5/10/20 3:17:28:392 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:393 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:394 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:394 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:395 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:395 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:396 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:397 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:398 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:399 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:399 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:400 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@712aec4b
[5/10/20 3:17:28:401 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:402 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:402 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:403 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:404 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:404 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:405 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:405 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:406 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:406 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:407 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:408 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:407 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:409 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:409 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:410 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:410 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:411 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@712aec4b
[5/10/20 3:17:28:412 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:414 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@63a404b3
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/customLayout.jsp
                                 false
[5/10/20 3:17:28:415 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:416 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:417 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:417 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:418 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:418 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:419 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:419 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:420 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:419 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:421 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:422 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:422 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:423 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2f41fea
[5/10/20 3:17:28:423 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:424 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:425 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:426 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:426 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:427 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2f41fea
[5/10/20 3:17:28:429 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/customLayout.jsp
[5/10/20 3:17:28:430 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:431 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:431 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:432 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:432 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:433 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:433 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:433 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:435 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:435 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:436 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:436 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@90a1a69a
[5/10/20 3:17:28:437 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:438 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:438 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:439 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:439 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:440 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:440 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:441 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:442 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:442 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:443 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:443 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:444 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:445 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:445 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:446 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:446 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:447 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:447 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:448 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:449 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:449 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:450 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:28:450 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:451 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:451 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/customLayout.jsp
                                 true
[5/10/20 3:17:28:452 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:452 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:453 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:454 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:454 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:455 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:455 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:455 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:456 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:457 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:458 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:458 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e1ef9dd0
[5/10/20 3:17:28:459 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:459 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:460 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@e7dea25c[isclite#isclite.war#/secure/layouts/customLayout.jsp]
[5/10/20 3:17:28:460 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:461 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:28:461 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:28:462 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:462 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:463 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/customLayout.jsp
                                 isclite
[5/10/20 3:17:28:464 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:28:464 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:28:465 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:28:465 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:28:466 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:28:466 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:28:467 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:28:467 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:468 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:28:469 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:28:469 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:28:470 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:470 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@53aca277
[5/10/20 3:17:28:471 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@53aca277
[5/10/20 3:17:28:471 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@83f0c41c
                                 /secure/layouts/customLayout.jsp
[5/10/20 3:17:28:472 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@83f0c41c
                                 /secure/layouts/customLayout.jsp
[5/10/20 3:17:28:472 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:28:473 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:28:473 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:474 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:475 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:475 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:476 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:476 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:477 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:477 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@e1ef9dd0
[5/10/20 3:17:28:478 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@90a1a69a
[5/10/20 3:17:28:479 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:479 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:480 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:480 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:481 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:481 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:482 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:482 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:482 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:483 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:483 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:484 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:484 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:485 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:485 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:486 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:486 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:487 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:487 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:488 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:488 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:488 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:489 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:489 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:490 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:490 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:491 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:491 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:492 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:493 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/customLayout.jsp]: Initialization successful.
[5/10/20 3:17:28:495 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@90a1a69a
[5/10/20 3:17:28:495 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:496 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:496 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:497 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:497 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:498 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:499 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:499 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:500 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:500 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:501 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:501 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:501 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:502 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:503 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:503 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:504 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:495 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:505 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:506 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:506 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:507 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:507 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:508 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:508 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:509 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:509 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:510 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:510 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:511 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:511 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:512 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:512 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:513 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:513 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:514 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:514 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:515 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:515 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:516 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:516 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:517 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:517 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:518 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:518 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:518 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:505 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@90a1a69a
[5/10/20 3:17:28:520 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:520 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:521 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:522 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:522 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:523 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:524 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:524 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:525 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:525 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:526 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:526 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:529 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@b566a1f3
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
                                 false
[5/10/20 3:17:28:531 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:532 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:533 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:533 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:534 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:534 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:535 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:535 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:536 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:535 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:537 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:538 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:538 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:539 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c93ff4b2
[5/10/20 3:17:28:539 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:540 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:541 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:541 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:542 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:543 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@c93ff4b2
[5/10/20 3:17:28:547 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
[5/10/20 3:17:28:548 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:549 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:550 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:550 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:551 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:552 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:552 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:552 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:554 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:555 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:555 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:556 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@df36db8f
[5/10/20 3:17:28:556 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:557 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:558 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:558 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:559 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:559 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:560 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:561 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:562 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:562 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:563 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:563 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:564 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:564 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:565 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:566 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:566 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:567 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:567 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:568 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:569 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:570 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:571 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:28:571 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:572 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:573 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
                                 true
[5/10/20 3:17:28:573 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:574 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:575 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:576 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:576 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:577 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:578 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:577 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:579 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:580 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:580 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:581 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7235b06e
[5/10/20 3:17:28:582 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:582 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:583 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@47e14749[isclite#isclite.war#/com.ibm.ws.console.security/sslProviderLayout.jsp]
[5/10/20 3:17:28:584 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:585 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:28:586 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:28:586 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:587 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:588 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
                                 isclite
[5/10/20 3:17:28:588 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:28:589 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:28:589 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:28:590 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:28:591 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:28:591 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:28:592 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:28:592 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:593 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:28:593 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:28:594 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:28:595 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:595 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@58334bf0
[5/10/20 3:17:28:596 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@58334bf0
[5/10/20 3:17:28:597 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@bb386485
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
[5/10/20 3:17:28:597 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@bb386485
                                 /com.ibm.ws.console.security/sslProviderLayout.jsp
[5/10/20 3:17:28:600 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:28:601 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:28:601 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:602 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:603 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:604 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:605 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:605 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:606 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:607 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@7235b06e
[5/10/20 3:17:28:607 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@df36db8f
[5/10/20 3:17:28:613 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:614 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:615 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:615 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:616 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:617 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:617 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:618 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:619 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:619 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:619 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:620 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:620 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:621 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:621 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:622 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:622 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:623 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:623 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:624 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:624 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:624 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:625 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:625 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:626 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:626 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:627 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:627 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:628 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:632 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/sslProviderLayout.jsp]: Initialization successful.
[5/10/20 3:17:28:637 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:637 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@df36db8f
[5/10/20 3:17:28:639 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:640 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:640 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:641 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:642 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:638 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:643 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:643 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:644 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:645 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:645 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:646 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:646 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:647 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:647 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:648 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:648 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:649 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:649 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:650 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:650 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:651 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:651 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:652 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:652 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:653 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:653 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:653 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:654 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:654 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:655 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:657 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:657 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:642 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:658 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:659 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:659 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:660 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:661 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:661 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:661 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:662 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:663 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:664 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:664 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:665 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@df36db8f
[5/10/20 3:17:28:666 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:669 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:669 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:670 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:671 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:671 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:672 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:673 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:674 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:674 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:675 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:675 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:681 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@6bcc179e
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/singleRadioButtonLayout.jsp
                                 false
[5/10/20 3:17:28:682 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:683 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:684 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:684 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:685 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:685 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:686 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:687 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:687 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:687 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:688 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:689 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:689 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:690 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@5a45a822
[5/10/20 3:17:28:691 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:691 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:692 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:692 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:693 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:693 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@5a45a822
[5/10/20 3:17:28:696 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/singleRadioButtonLayout.jsp
[5/10/20 3:17:28:696 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:697 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:697 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:698 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:698 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:699 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:700 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:699 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:701 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:701 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:702 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:702 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@bf50af4e
[5/10/20 3:17:28:703 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:703 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:704 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:704 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:705 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:706 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:706 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:707 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:707 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:708 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:708 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:709 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:709 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:710 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:710 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:711 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:712 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:712 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:713 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:714 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:714 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:715 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:715 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:28:716 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:717 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:717 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/singleRadioButtonLayout.jsp
                                 true
[5/10/20 3:17:28:718 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:718 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:719 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:720 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:720 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:721 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:721 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:721 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:722 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:723 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:723 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:724 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2b8273a4
[5/10/20 3:17:28:725 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:725 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:726 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@db992c49[isclite#isclite.war#/secure/layouts/singleRadioButtonLayout.jsp]
[5/10/20 3:17:28:727 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:727 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:28:728 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:28:728 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:729 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:729 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /secure/layouts/singleRadioButtonLayout.jsp
                                 isclite
[5/10/20 3:17:28:730 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:28:731 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:28:731 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:28:732 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:28:732 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:28:733 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:28:733 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:28:734 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:735 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:28:735 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:28:736 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:28:736 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:737 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@557479a0
[5/10/20 3:17:28:737 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@557479a0
[5/10/20 3:17:28:738 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@75b35c0e
                                 /secure/layouts/singleRadioButtonLayout.jsp
[5/10/20 3:17:28:738 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@75b35c0e
                                 /secure/layouts/singleRadioButtonLayout.jsp
[5/10/20 3:17:28:739 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:28:739 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:28:740 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:741 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:741 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:742 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:742 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:743 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:743 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:744 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2b8273a4
[5/10/20 3:17:28:745 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@bf50af4e
[5/10/20 3:17:28:746 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:746 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:747 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:747 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:747 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:748 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:748 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:749 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:749 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:750 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:750 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:751 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:751 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:752 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:752 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:752 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:753 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:753 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:754 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:754 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:755 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:755 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:756 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:756 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:757 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:757 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:758 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:758 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:758 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:760 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/secure/layouts/singleRadioButtonLayout.jsp]: Initialization successful.
[5/10/20 3:17:28:761 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@bf50af4e
[5/10/20 3:17:28:761 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:762 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:763 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:762 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:764 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:765 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:765 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:766 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:763 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:767 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:768 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:768 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:767 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:769 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:770 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:770 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:771 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:771 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:772 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:771 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:773 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:774 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:768 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:775 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:775 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:776 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:776 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:774 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:777 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:777 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:778 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@bf50af4e
[5/10/20 3:17:28:779 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:778 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:780 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:781 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:780 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:782 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:782 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:783 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:783 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:784 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:784 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:785 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:785 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:786 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:786 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:781 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:788 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:788 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@5a45a822
[5/10/20 3:17:28:789 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:790 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:789 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:791 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:791 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:790 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:792 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:793 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:793 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:792 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:794 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:795 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:794 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:796 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:797 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:28:797 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:798 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:796 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:799 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:799 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:800 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:800 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:801 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:800 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:802 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:803 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:803 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:804 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:804 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@5a45a822
[5/10/20 3:17:28:805 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:806 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@dd34ddea
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/submitLayout.jsp
                                 false
[5/10/20 3:17:28:806 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:807 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:808 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:808 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:809 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:809 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:810 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:811 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:811 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:811 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:812 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:813 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:813 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:814 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a77d29ee
[5/10/20 3:17:28:814 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:815 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:815 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:816 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:817 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:817 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@a77d29ee
[5/10/20 3:17:28:818 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:819 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:819 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:820 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:820 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:821 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:821 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:822 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:823 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:823 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:824 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:825 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@a77d29ee
[5/10/20 3:17:28:826 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:826 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:827 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:827 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:828 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:828 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:829 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:830 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:830 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:831 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:831 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:832 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:831 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:833 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:835 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:836 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:837 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:837 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@a77d29ee
[5/10/20 3:17:28:838 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:839 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@32c9e463
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/singleRadioButtonLayout.jsp
                                 false
[5/10/20 3:17:28:839 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:841 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:841 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:842 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:842 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:843 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:844 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:844 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:845 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:844 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:846 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:847 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:847 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:848 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2692f03a
[5/10/20 3:17:28:848 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:849 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:849 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:850 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:850 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:851 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2692f03a
[5/10/20 3:17:28:852 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:853 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:853 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:854 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:854 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:855 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:856 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:856 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:857 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:857 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:858 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:859 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2692f03a
[5/10/20 3:17:28:859 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:860 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:861 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:861 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:862 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:862 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:863 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:863 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:864 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:865 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:865 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:866 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:865 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:867 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:867 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:868 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:868 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:869 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2692f03a
[5/10/20 3:17:28:869 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:870 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@9aa4664
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/textFieldLayout.jsp
                                 false
[5/10/20 3:17:28:871 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:872 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:872 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:873 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:873 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:874 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:874 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:875 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:875 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:875 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:877 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:877 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:878 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:878 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@6cec57c2
[5/10/20 3:17:28:879 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:880 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:880 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:881 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:881 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:882 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@6cec57c2
[5/10/20 3:17:28:883 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:883 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:28:884 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:28:884 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:885 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:886 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:28:886 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:28:887 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:28:887 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:28:888 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:28:889 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:28:890 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@6cec57c2
[5/10/20 3:17:28:890 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:891 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:891 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:892 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:893 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:893 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:894 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:894 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:895 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:896 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:896 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:897 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:896 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:898 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:898 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:899 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:900 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:900 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@6cec57c2
[5/10/20 3:17:28:901 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:901 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@c93ff4b2
[5/10/20 3:17:28:902 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:902 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:903 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:903 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:904 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:905 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:905 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:906 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:906 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:907 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:907 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:908 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:907 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:909 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:910 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:910 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:911 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:911 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@c93ff4b2
[5/10/20 3:17:28:912 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:912 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2f41fea
[5/10/20 3:17:28:913 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:28:914 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:914 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:915 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:915 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:916 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:28:916 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:917 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:28:918 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:918 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:919 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:919 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:919 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:28:920 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:28:921 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:921 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:28:922 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:28:923 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2f41fea
[5/10/20 3:17:28:923 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:28:925 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@a866915a
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
                                 false
[5/10/20 3:17:28:926 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:28:926 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:28:927 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:927 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:928 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:929 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:929 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:930 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:930 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:930 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:931 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:932 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:933 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:933 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2243fb50
[5/10/20 3:17:28:934 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:934 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:935 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:28:935 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:936 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:936 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2243fb50
[5/10/20 3:17:28:939 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
[5/10/20 3:17:28:939 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:940 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:940 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:941 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:942 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:942 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:943 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:942 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:944 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:944 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:945 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:945 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@39558f55
[5/10/20 3:17:28:946 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:947 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:947 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:948 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:948 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:949 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:949 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:950 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:950 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:951 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:952 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:952 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:28:953 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:953 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:954 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:955 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:955 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:956 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:956 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:957 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:957 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:958 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:959 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:28:959 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:28:960 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:28:960 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
                                 true
[5/10/20 3:17:28:961 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:961 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:962 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:962 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:963 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:28:964 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:964 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:964 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:965 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:28:966 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:28:966 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:28:967 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@605ad974
[5/10/20 3:17:28:967 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:28:968 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:28:968 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@b28ab1b6[isclite#isclite.war#/com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp]
[5/10/20 3:17:28:969 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:970 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:28:970 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:28:971 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:28:972 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:972 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
                                 isclite
[5/10/20 3:17:28:973 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:28:973 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:28:974 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:28:974 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:28:975 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:28:975 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:28:976 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:28:977 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:977 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:28:978 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:28:978 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:28:979 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:979 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d05651b
[5/10/20 3:17:28:980 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@d05651b
[5/10/20 3:17:28:980 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@c0a67abd
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
[5/10/20 3:17:28:981 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@c0a67abd
                                 /com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp
[5/10/20 3:17:28:982 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:28:982 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:28:983 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:28:983 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:984 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:985 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:985 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:28:986 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:986 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:28:987 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@605ad974
[5/10/20 3:17:28:987 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@39558f55
[5/10/20 3:17:28:988 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:989 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:28:989 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:990 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:990 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:28:991 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:991 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:28:992 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:28:992 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:28:993 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:28:993 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:28:994 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:28:994 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:28:995 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:28:995 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:28:995 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:28:996 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:997 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:28:997 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:28:997 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:28:998 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:28:998 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:28:999 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:28:999 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:000 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:000 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:001 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:29:001 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:002 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:003 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/cipherGroupUpdateLayout.jsp]: Initialization successful.
[5/10/20 3:17:29:005 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@39558f55
[5/10/20 3:17:29:005 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:006 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:005 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:007 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:29:007 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:008 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:009 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:009 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:010 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:011 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:011 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:012 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:012 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:013 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:012 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:008 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:015 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:015 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:29:016 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:016 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:29:016 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:29:017 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:017 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:018 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:29:018 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:29:014 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:019 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:019 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:29:020 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:29:021 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:29:021 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:29:022 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:022 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:023 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:023 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:023 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:024 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:024 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:025 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:020 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:026 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:026 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:027 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:028 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:29:028 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:029 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:027 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@39558f55
[5/10/20 3:17:29:030 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:031 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:031 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:032 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:032 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:033 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:033 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:034 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:035 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:035 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:036 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:036 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:037 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@9416336d
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/submitLayout.jsp
                                 false
[5/10/20 3:17:29:038 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:29:039 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:29:039 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:040 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:040 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:041 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:042 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:29:043 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:043 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:043 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:045 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:045 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:046 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:047 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@108b74b9
[5/10/20 3:17:29:048 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:29:048 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:29:049 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:29:050 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:050 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:051 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@108b74b9
[5/10/20 3:17:29:052 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:052 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:053 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:054 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:054 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:055 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:055 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:056 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:056 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:057 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:057 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:058 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@108b74b9
[5/10/20 3:17:29:059 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:060 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:060 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:061 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:061 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:062 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:062 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:063 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:063 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:064 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:064 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:065 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:064 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:066 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:067 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:067 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:068 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:069 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@108b74b9
[5/10/20 3:17:29:069 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:070 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2243fb50
[5/10/20 3:17:29:070 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:071 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:072 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:072 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:073 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:073 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:074 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:075 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:075 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:076 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:076 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:077 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:076 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:078 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:079 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:079 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:080 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:080 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2243fb50
[5/10/20 3:17:29:081 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:082 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@226cbbf0
                                 /ibm/console
                                 admin_host
                                 /secure/layouts/customLayout.jsp
                                 false
[5/10/20 3:17:29:083 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:29:083 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:29:084 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:084 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:085 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:085 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:086 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:29:087 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:087 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:087 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:089 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:089 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:090 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:090 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2d6ffee1
[5/10/20 3:17:29:091 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:29:091 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:29:092 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:29:093 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:093 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:094 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@2d6ffee1
[5/10/20 3:17:29:095 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:095 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:096 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:097 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:097 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:098 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:098 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:099 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:100 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:100 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:101 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:103 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.console.core.servlet.WSCUrlFilter$HttpServletRequestWrapperConsole@bff1a766
                                 org.apache.jasper.runtime.ServletResponseWrapperInclude@73c43a7
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
                                 false
[5/10/20 3:17:29:103 UTC] 00000098 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9043]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Referer=[https://localhost:9043/ibm/console/sSLConfigCollection.do?csrfid=-384698864&EditAction=true&refId=SSLConfig_DefaultNode01_1&contextId=cells%3ADefaultCell01&resourceUri=security.xml&perspective=tab.configuration]
Cookie=[com.ibm.ws.console.isBiDiEnabled=false; com.ibm.ws.console.BiDiTextDirection=LTR; com.ibm.ws.console.CSRFToken=-384698864; JSESSIONID=0000Yzn-ElDoEaywpPldxqBgcRA:-1; LtpaToken2=acAg1XKdtd6RK20VBJZQU0LXgCbJIfXwxpJaOZejj/Swc055DLZcheDTSL8/UFUpwcSYQntFYPKdAKetELZGWq2Pwuci3bYJOVdWg4BZRqUVG80VTDWZhW7Rc5yPeeC9wVCRBJhmHsN7PMfjrlGK8R3okueKD3dSwPQbkEEk7/8vdu/2FN/of1McF56GlMKszqgTwoBILJjxovGR2T9+Eqy19nosUmLOHC8UJiqFgCZ24toGlfr4HU3BTu1Em/Hju8jci22gs3Om2h/SOkYXdCem5lB16QLorWNpsaFpXXO+JaOnodeu5iXfUA4FWvPSH1Ak7ZUw0HnYTzpCA7In4mdtLbwJtdDPw3btN2fKVnaPAxptOnFeb8a8wCrZB8LTh62H1zrwBT2jj7R8jKKYAmrXxhEA4XwTXX1mz5+2YXZVJ5TmN3p6mvW1PR1SGp8w0BxrNV4+BALb/mbB3xiGDMC0OekKMZflDUHMq021c/Ue32rSQNPQGpE8wVSznc+RPX2Ggm5s2sIqT7fGiQ+f4638I9h8MieKEsE5L5Tgi1j4u/GJo8A3ItNk/dESiNwb5jwUbzC/cNUYBkwUZKECpiZ36/7NB8F4TlLI+Cguap+pXmKt6bh7fOpKC/GTQFhYpMqRQo52khmQUWtjL+W1bA==; TJE=; TE3=N0:C N1:E N2:C N3:E N4:E N5:C N6:C N7:C N8:C N9:C N10:C N11:C N12:C N13:C N14:C N15:C N16:C N17:E N18:C N19:C N20:C N21:C N22:C N23:C N24:C N25:C N26:C N27:C N28:C N29:C N30:C N31:C N32:C N33:C; sessionCode=1623776755]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:17:29:104 UTC] 00000098 EJSWebCollabo 3    Request Context Path=/ibm/console, Servlet Path=/secure/layouts/configboxLayout.jsp, Path Info=null
[5/10/20 3:17:29:104 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:105 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:105 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:106 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:106 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:29:107 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:107 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:107 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:108 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:109 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:110 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:110 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@449075e0
[5/10/20 3:17:29:111 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:29:111 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:29:112 UTC] 00000098 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:17:29:112 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:113 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:113 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@449075e0
[5/10/20 3:17:29:116 UTC] 00000098 EJSWebCollabo >  preInvoke init/destroy Entry
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
[5/10/20 3:17:29:116 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:117 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:117 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:118 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:119 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:29:119 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:120 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:119 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:121 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:121 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:122 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:122 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@72cda635
[5/10/20 3:17:29:123 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:29:123 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:124 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:125 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:29:125 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:126 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:29:126 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:29:127 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:127 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:128 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:29:128 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:29:129 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:29:129 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:29:130 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:29:130 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:29:131 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:131 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:132 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:133 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:133 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:134 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:29:134 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:29:135 UTC] 00000098 EJSWebCollabo 3   preInvoke for servlet init useAppContextForServletInit: false
[5/10/20 3:17:29:135 UTC] 00000098 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit default=false  (admin)  Entry
[5/10/20 3:17:29:136 UTC] 00000098 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.useAppContextForServletInit  (admin)  val=false Exit
[5/10/20 3:17:29:136 UTC] 00000098 EJSWebCollabo >  preInvoke Entry
                                 <null>
                                 <null>
                                 /ibm/console
                                 admin_host
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
                                 true
[5/10/20 3:17:29:137 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:137 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:138 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:139 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:139 UTC] 00000098 ContextManage >  getPropagationTokens Entry
[5/10/20 3:17:29:140 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:140 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:140 UTC] 00000098 ContextManage <  getPropagationTokens Exit
                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:141 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:142 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:143 UTC] 00000098 WebSecurityCo >  <init> Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 {com.ibm.ws.security.token.PropagationTokenImpl:1=com.ibm.ws.security.token.PropagationTokenImpl@bad3696e}
[5/10/20 3:17:29:143 UTC] 00000098 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@54c51609
[5/10/20 3:17:29:144 UTC] 00000098 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:17:29:144 UTC] 00000098 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:false Exit
[5/10/20 3:17:29:145 UTC] 00000098 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@a5c8314b[isclite#isclite.war#/com.ibm.ws.console.security/cipherAddDeleteLayout.jsp]
[5/10/20 3:17:29:145 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:146 UTC] 00000098 EJSWebCollabo 3   preInvoke
                                 app_name=isclite isAdminApp=true isAppSecurityOn=true
[5/10/20 3:17:29:146 UTC] 00000098 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null false
[5/10/20 3:17:29:147 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:147 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:148 UTC] 00000098 EJSWebCollabo >  delegate Entry
                                 <null>
                                 <null>
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
                                 isclite
[5/10/20 3:17:29:148 UTC] 00000098 WebAppCache   >  getWebAccessContext Entry
                                 isclite
                                 admin_host:/ibm/console
                                 false
[5/10/20 3:17:29:149 UTC] 00000098 WebAppCache   3   Okay, I found the entry for [isclite:admin_host:/ibm/console]
[5/10/20 3:17:29:150 UTC] 00000098 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:17:29:150 UTC] 00000098 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:17:29:151 UTC] 00000098 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:17:29:151 UTC] 00000098 EJSWebCollabo 3   Authentication of RunAs user will be performed using JAAS login configuration.
[5/10/20 3:17:29:152 UTC] 00000098 DelegationFac >  getDelegation() Entry
[5/10/20 3:17:29:152 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:153 UTC] 00000098 ContextManage 3   getProperty : com.ibm.CORBA.delegateCredentials
[5/10/20 3:17:29:153 UTC] 00000098 ContextManage 3   Returning: methoddefined
[5/10/20 3:17:29:154 UTC] 00000098 DelegationFac >  getDelegation(delegationPolicy, jaspiContext, webRequest) Entry
                                 methoddefined
                                 <null>
[5/10/20 3:17:29:155 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:155 UTC] 00000098 DelegationFac <  getDelegation(delegationPolicy, jaspiContext, webRequest) Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@5eda9186
[5/10/20 3:17:29:156 UTC] 00000098 DelegationFac <  getDelegation() Exit
                                 com.ibm.ws.security.delegation.MethodDelegation@5eda9186
[5/10/20 3:17:29:156 UTC] 00000098 MethodDelegat >  delegate Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

                                 admin_host:/ibm/console
                                 com.ibm.ws.security.web.WebAccessContext@ccabe469
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
[5/10/20 3:17:29:157 UTC] 00000098 MethodDelegat >  getRunAsRoleName Entry
                                 com.ibm.ws.security.web.WebAccessContext@ccabe469
                                 /com.ibm.ws.console.security/cipherAddDeleteLayout.jsp
[5/10/20 3:17:29:158 UTC] 00000098 MethodDelegat 3   servletMap :null
[5/10/20 3:17:29:158 UTC] 00000098 MethodDelegat <  getRunAsRoleName Exit
                                 <null>
[5/10/20 3:17:29:159 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:159 UTC] 00000098 MethodDelegat <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:160 UTC] 00000098 EJSWebCollabo <  delegate Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:160 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:161 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:161 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:162 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:162 UTC] 00000098 EJSWebCollabo <  preInvoke Exit
                                 com.ibm.ws.security.web.WebSecurityContext@54c51609
[5/10/20 3:17:29:163 UTC] 00000098 EJSWebCollabo <  preInvoke init/destroy Exit
                                 com.ibm.ws.security.web.WebSecurityContext@72cda635
[5/10/20 3:17:29:164 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:165 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:29:165 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:166 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:166 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:29:167 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:167 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:29:167 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:29:168 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:168 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:169 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:29:169 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:29:170 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:29:171 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:29:171 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:29:172 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:29:172 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:172 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:173 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:174 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:174 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:174 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:175 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:175 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:176 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:176 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:177 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:29:177 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:178 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:179 UTC] 00000098 ServletWrappe I com.ibm.ws.webcontainer.servlet.ServletWrapper init SRVE0242I: [isclite] [/ibm/console] [/com.ibm.ws.console.security/cipherAddDeleteLayout.jsp]: Initialization successful.
[5/10/20 3:17:29:181 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@72cda635
[5/10/20 3:17:29:181 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:182 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:17:29:182 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:181 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:183 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:184 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:185 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:185 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:183 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:186 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:29:186 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:187 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:17:29:186 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:188 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:189 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:189 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:190 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:190 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:191 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:190 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:192 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:192 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:187 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:29:193 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:194 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:194 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:17:29:195 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:29:195 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:17:29:196 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:29:196 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:17:29:197 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:29:197 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:198 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:198 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:199 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:199 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:200 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:200 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:193 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:201 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:201 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:202 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@72cda635
[5/10/20 3:17:29:203 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:202 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:17:29:204 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:204 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:205 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:29:206 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:206 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:205 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:207 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:208 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:208 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:209 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:210 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:210 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:211 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:211 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:212 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:214 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@449075e0
[5/10/20 3:17:29:214 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:215 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:215 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:216 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:217 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:218 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:219 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:219 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:220 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:220 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:221 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:221 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:221 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:223 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:223 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:224 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:224 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:225 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@449075e0
[5/10/20 3:17:29:225 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:226 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@2d6ffee1
[5/10/20 3:17:29:227 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:227 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:228 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:228 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:229 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:230 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:230 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:231 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:231 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:232 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:232 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:233 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:232 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:234 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:235 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:235 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:236 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:236 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@2d6ffee1
[5/10/20 3:17:29:237 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:238 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@9750a16
[5/10/20 3:17:29:239 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:239 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:240 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:241 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:241 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:242 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:242 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:243 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:243 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:244 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:244 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:245 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:244 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:246 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:247 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:247 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:248 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:248 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@9750a16
[5/10/20 3:17:29:249 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:250 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:250 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:251 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:251 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:252 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:253 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:253 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:254 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:254 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:255 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:256 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:256 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:257 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:257 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:258 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:258 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:259 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:260 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:260 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:261 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:261 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:262 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:263 UTC] 00000098 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:17:29:264 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:264 UTC] 00000098 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:17:29:265 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:265 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:266 UTC] 00000098 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.isclite.runtime.ProfileSelectionUtil$1@1a135a24
                                 System
[5/10/20 3:17:29:266 UTC] 00000098 ContextManage 3   Calling routine: com.ibm.isclite.runtime.ProfileSelectionUtil.isStandAloneCell(ProfileSelectionUtil.java:187)
[5/10/20 3:17:29:267 UTC] 00000098 ContextManage >  getServerSubject Entry
[5/10/20 3:17:29:268 UTC] 00000098 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:268 UTC] 00000098 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:269 UTC] 00000098 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:17:29:269 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:270 UTC] 00000098 ContextManage >  getRegistryObject Entry
[5/10/20 3:17:29:270 UTC] 00000098 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:17:29:271 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:271 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:272 UTC] 00000098 WSCredentialI >  getExpiration Entry
[5/10/20 3:17:29:272 UTC] 00000098 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:17:29:273 UTC] 00000098 AuthCache     >  getCushion Entry
[5/10/20 3:17:29:273 UTC] 00000098 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:17:29:274 UTC] 00000098 ContextManage 3   Is server subject valid? true
[5/10/20 3:17:29:274 UTC] 00000098 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:17:29:275 UTC] 00000098 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:275 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:276 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:276 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:277 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:277 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:278 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:279 UTC] 00000098 ContextManage >  getCallerSubject Entry
[5/10/20 3:17:29:279 UTC] 00000098 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:280 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:280 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:281 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:281 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:282 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:283 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:283 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:283 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:284 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:285 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:285 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:286 UTC] 00000098 ContextManage >  setSavedSubjects Entry
[5/10/20 3:17:29:287 UTC] 00000098 ContextManage 3   Setting savedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:287 UTC] 00000098 ContextManage 3   Setting recSavedSubject:Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:288 UTC] 00000098 ContextManage <  setSavedSubjects Exit
[5/10/20 3:17:29:288 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:289 UTC] 00000098 ContextManage >  getInvocationSubject Entry
[5/10/20 3:17:29:289 UTC] 00000098 ContextManage <  getInvocationSubject Exit
[5/10/20 3:17:29:290 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:291 UTC] 00000098 ContextManage >  isServerSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:17:29:291 UTC] 00000098 ContextManage >  isServerCred Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:17:29:292 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:29:292 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:29:293 UTC] 00000098 WSCredentialI >  getServerCredCipher Entry
[5/10/20 3:17:29:293 UTC] 00000098 WSCredentialI <  getServerCredCipher Exit
                                     4edcc500 f32a44ef 6019c87c 770c1c55 77bfbd11 6fafc041 787b34b5 fd23e770 
    10b751a8 29f63162 69258ef0 7aa8427f 38541956 46139511 21046257 1b2766e1
[5/10/20 3:17:29:294 UTC] 00000098 ContextManage <  isServerCred Exit
                                 true
[5/10/20 3:17:29:294 UTC] 00000098 ContextManage <  isServerSubject Exit
                                 true
[5/10/20 3:17:29:295 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:296 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:296 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:297 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:297 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:298 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:298 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:299 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:300 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:300 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:301 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:300 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:302 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:302 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:303 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:303 UTC] 00000098 ContextManage <  runAs(System) Exit
[5/10/20 3:17:29:304 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:304 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:305 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:306 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:306 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:307 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:307 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:308 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:308 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:309 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:309 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:315 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@23556bcb
[5/10/20 3:17:29:316 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
 and received: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1
subjects
[5/10/20 3:17:29:318 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:319 UTC] 00000098 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:320 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:321 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:322 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:323 UTC] 00000098 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@e34c9463
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@fa0c4277
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@40fade90
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@b74bbdd1

[5/10/20 3:17:29:325 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:326 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:327 UTC] 00000098 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:329 UTC] 00000098 PropagationTo >  hashCode Entry
[5/10/20 3:17:29:330 UTC] 00000098 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:17:29:329 UTC] 00000098 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:17:29:332 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:17:29:333 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:334 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:335 UTC] 00000098 EJSWebCollabo 3   Resetting propagation token: com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:17:29:335 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "false" for: com.ibm.ws.security.web.WebSecurityContext@23556bcb
[5/10/20 3:17:29:336 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:337 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:338 UTC] 00000098 ContextManage >  getCallerCredentials Entry
[5/10/20 3:17:29:338 UTC] 00000098 WSCredentialI >  isCurrent Entry
[5/10/20 3:17:29:339 UTC] 00000098 WSCredentialI >  isDestroyed Entry
[5/10/20 3:17:29:340 UTC] 00000098 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:17:29:340 UTC] 00000098 WSCredentialI <  isCurrent Exit
                                 true
[5/10/20 3:17:29:341 UTC] 00000098 ContextManage <  getCallerCredentials Exit
[5/10/20 3:17:29:342 UTC] 00000098 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:17:29:342 UTC] 00000098 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:17:29:343 UTC] 00000098 WSCredentialI >  getAccessId Entry
[5/10/20 3:17:29:344 UTC] 00000098 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:17:29:344 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@efd52697
[5/10/20 3:17:29:345 UTC] 00000098 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:17:29:346 UTC] 00000098 ContextManage >  setInvocationSubject Entry
[5/10/20 3:17:29:347 UTC] 00000098 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:17:29:348 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:348 UTC] 00000098 ContextManage <  setInvocationSubject Exit
[5/10/20 3:17:29:349 UTC] 00000098 ContextManage >  setCallerSubject Entry
[5/10/20 3:17:29:350 UTC] 00000098 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:17:29:351 UTC] 00000098 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:17:29:352 UTC] 00000098 ContextManage >  getInstance Entry
[5/10/20 3:17:29:353 UTC] 00000098 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:17:29:353 UTC] 00000098 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:17:29:354 UTC] 00000098 ContextManage <  setCallerSubject Exit
[5/10/20 3:17:29:355 UTC] 00000098 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@efd52697
[5/10/20 3:17:29:356 UTC] 00000098 EJSWebCollabo 3   postInvoke popped resource  of type Admin
[5/10/20 3:17:29:357 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:29:358 UTC] 00000098 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:17:29:359 UTC] 00000098 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:17:44:734 UTC] 00000078 Cache         >  alarm Entry
                                 <null>
[5/10/20 3:17:44:736 UTC] 00000078 Cache         >  evictStaleEntries Entry
[5/10/20 3:17:44:738 UTC] 00000078 Cache         3   The current cache size is 0( 0, 0, 0)
[5/10/20 3:17:44:739 UTC] 00000078 PlatformCrede >  evicted Entry
                                 []
[5/10/20 3:17:44:740 UTC] 00000078 PlatformCrede <  evicted Exit
[5/10/20 3:17:44:741 UTC] 00000078 Cache         <  evictStaleEntries Exit
[5/10/20 3:17:44:742 UTC] 00000078 Cache         <  alarm Exit
[5/10/20 3:18:26:156 UTC] 000000a1 EJSWebCollabo >  preInvoke Entry
[5/10/20 3:18:26:158 UTC] 000000a1 ContextManage >  clearCallerContext Entry
[5/10/20 3:18:26:158 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:159 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:160 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:18:26:160 UTC] 000000a1 ContextManage <  clearCallerContext Exit
[5/10/20 3:18:26:161 UTC] 000000a1 EJSWebCollabo <  preInvoke Exit
                                 <null>
[5/10/20 3:18:26:162 UTC] 000000a1 SecurityConte >  isSecurityEnabled Entry
[5/10/20 3:18:26:162 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:163 UTC] 000000a1 SecurityConte <  isSecurityEnabled Exit
                                 true
[5/10/20 3:18:26:163 UTC] 000000a1 EJSWebCollabo >  preInvoke Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 /
                                 default_host
                                 <null>
                                 true
[5/10/20 3:18:26:165 UTC] 000000a1 EJSWebCollabo 3   Http Header names and values:
Host=[localhost:9443]
User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:76.0) Gecko/20100101 Firefox/76.0]
Accept=[text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8]
Accept-Language=[en-US,en;q=0.5]
Accept-Encoding=[gzip, deflate, br]
Connection=[keep-alive]
Upgrade-Insecure-Requests=[1]

[5/10/20 3:18:26:165 UTC] 000000a1 EJSWebCollabo 3    Request Context Path=, Servlet Path=, Path Info=/CertLoginSample/servlet
[5/10/20 3:18:26:166 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:167 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:167 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:168 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.CSI.rmiOutboundPropagationEnabled
[5/10/20 3:18:26:169 UTC] 000000a1 ContextManage 3   Returning: true
[5/10/20 3:18:26:169 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:170 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:26:170 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:18:26:171 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:18:26:171 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:18:26:172 UTC] 000000a1 WebSecurityCo >  <init> Entry
                                 <null>
                                 <null>
                                 <null>
[5/10/20 3:18:26:172 UTC] 000000a1 WebSecurityCo <  <init> Exit
                                 com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:26:173 UTC] 000000a1 WebCollaborat >  SetUnauthenticatedSubjectIfNeeded Entry
[5/10/20 3:18:26:173 UTC] 000000a1 WebCollaborat 3   Invoked and received Subject are null, setting it anonymous/unauthenticated.
[5/10/20 3:18:26:174 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:174 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:175 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:176 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:177 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:178 UTC] 000000a1 WebCollaborat <  SetUnauthenticatedSubjectIfNeeded:true Exit
[5/10/20 3:18:26:179 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:179 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:180 UTC] 000000a1 WebCollaborat 3   com.ibm.ws.security.web.WebCollaborator.WebComponentMetaData attribute is set.
[5/10/20 3:18:26:181 UTC] 000000a1 EJSWebCollabo 3   WebComponentMetaData
                                 com.ibm.ws.webcontainer.metadata.WebComponentMetaDataImpl@49b3597f[CertLoginSample_war#CertLoginSample.war#Static File]
[5/10/20 3:18:26:182 UTC] 000000a1 EJSWebCollabo 3   preInvoke pushing app name CertLoginSample_war
[5/10/20 3:18:26:183 UTC] 000000a1 WebSecurityCo 3   Setting pushed security to "true" for: com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:26:184 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:185 UTC] 000000a1 EJSWebCollabo 3   preInvoke
                                 app_name=CertLoginSample_war isAdminApp=false isAppSecurityOn=true
[5/10/20 3:18:26:185 UTC] 000000a1 EJSWebCollabo 3   isAdminAgent: false isFileTransferApp: false req != null true
[5/10/20 3:18:26:186 UTC] 000000a1 WebAppCache   >  getWebAccessContext Entry
                                 CertLoginSample_war
                                 default_host:/
                                 false
[5/10/20 3:18:26:187 UTC] 000000a1 WebAppCache   3   Okay, I found the entry for [CertLoginSample_war:default_host:/]
[5/10/20 3:18:26:187 UTC] 000000a1 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:18:26:188 UTC] 000000a1 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:18:26:188 UTC] 000000a1 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:18:26:189 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:190 UTC] 000000a1 WebCollaborat >  authorize Entry
                                 com.ibm.ws.security.web.WebRequestImpl@22ad828f[uri=null,webAttributes=webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=default_host
appContextRoot=/
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:18:26:191 UTC] 000000a1 WebRequestImp >  getAppVHost Entry
[5/10/20 3:18:26:191 UTC] 000000a1 WebRequestImp <  getAppVHost Exit
                                 appVHost=default_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:18:26:192 UTC] 000000a1 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:18:26:193 UTC] 000000a1 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/
                                 isVHostAndContextRootSet=true
[5/10/20 3:18:26:193 UTC] 000000a1 WebCollaborat 3   additional request info:
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 default_host:/
                                 true
                                 CertLoginSample_war
[5/10/20 3:18:26:194 UTC] 000000a1 URLHandler    3   URI requested: /CertLoginSample/servlet
[5/10/20 3:18:26:195 UTC] 000000a1 URLHandler    3   URI returned: /CertLoginSample/servlet
[5/10/20 3:18:26:195 UTC] 000000a1 LRUCache      >  get Entry
                                 CertLoginSample_war
[5/10/20 3:18:26:196 UTC] 000000a1 LRUCache      <  get Exit
[5/10/20 3:18:26:197 UTC] 000000a1 PermissionRol 3   No app permission cache found for CertLoginSample_war
[5/10/20 3:18:26:197 UTC] 000000a1 LRUCache      >  Constructor 600 Entry
[5/10/20 3:18:26:198 UTC] 000000a1 LRUCache      <  Constructor Exit
[5/10/20 3:18:26:199 UTC] 000000a1 LRUCache      >  put (synchronized) CertLoginSample_war Entry
[5/10/20 3:18:26:199 UTC] 000000a1 LRUCache      <  put Exit
[5/10/20 3:18:26:200 UTC] 000000a1 PermissionRol 3   No permissions found for /CertLoginSample/servlet:GET
[5/10/20 3:18:26:200 UTC] 000000a1 WebConstraint >  getRequiredRoles :  /CertLoginSample/servlet GETisDenySet false Entry
[5/10/20 3:18:26:201 UTC] 000000a1 WebConstraint 3   getRequiredRoles: isDenySet? false
[5/10/20 3:18:26:202 UTC] 000000a1 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:18:26:202 UTC] 000000a1 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:18:26:203 UTC] 000000a1 WebConstraint 3   getRequiredRoles: isDenySet? false allowCustomHTTPMethods? false
[5/10/20 3:18:26:203 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:26:203 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:26:204 UTC] 000000a1 WebConstraint 3   isDenySet: false methodName: GETj: 1
[5/10/20 3:18:26:205 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /CertLoginSample/servlet
                                 GET
                                 true
[5/10/20 3:18:26:205 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:26:206 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:26:206 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:26:207 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:26:207 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:26:208 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:18:26:208 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:18:26:209 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:18:26:210 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:26:210 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:26:211 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:26:211 UTC] 000000a1 WebResourceCo 3   Checking URL: /*
[5/10/20 3:18:26:212 UTC] 000000a1 WebResourceCo <  matches (PathName) : /* Exit
[5/10/20 3:18:26:213 UTC] 000000a1 WebConstraint 3   found a match, p not null
[5/10/20 3:18:26:213 UTC] 000000a1 WebConstraint 3   Required roles are
[5/10/20 3:18:26:214 UTC] 000000a1 WebConstraint 3   Manager
[5/10/20 3:18:26:214 UTC] 000000a1 WebConstraint 3   .
[5/10/20 3:18:26:215 UTC] 000000a1 WebConstraint <  getRequiredRoles Exit
[5/10/20 3:18:26:215 UTC] 000000a1 LRUCache      >  put (synchronized) com.ibm.ws.security.web.WebAccessPermission@b94a4ec0 Entry
[5/10/20 3:18:26:216 UTC] 000000a1 LRUCache      <  put Exit
[5/10/20 3:18:26:217 UTC] 000000a1 PermissionRol 3   CertLoginSample_war, /CertLoginSample/servlet:GET required roles are         Security Role [ org.eclipse.jst.j2ee.common.internal.impl.SecurityRoleImpl@9501a78d ]
        Role Name     [ Manager ]

[5/10/20 3:18:26:217 UTC] 000000a1 WebCollaborat 3   isNoRequiredRole: false isEmptyRole: false
[5/10/20 3:18:26:218 UTC] 000000a1 WSAccessManag >  isEveryoneGranted Entry
                                 com.ibm.ws.security.web.WebAccessContext@510d77c7
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
[5/10/20 3:18:26:218 UTC] 000000a1 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:18:26:219 UTC] 000000a1 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 <null>
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.EveryoneImpl@14a9058b ]
            Name      [ Everyone ]
            Access ID [ Everyone ]

[5/10/20 3:18:26:219 UTC] 000000a1 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:18:26:220 UTC] 000000a1 WSAccessManag <  isEveryoneGranted Exit
                                 false
[5/10/20 3:18:26:221 UTC] 000000a1 WebCollaborat 3   everyoneAllowed=false
[5/10/20 3:18:26:221 UTC] 000000a1 WebConstraint >  getConstraints:  Entry
                                 /CertLoginSample/servlet
                                 GET
[5/10/20 3:18:26:222 UTC] 000000a1 WebConstraint 3   webConstraintsTable.length = 1
[5/10/20 3:18:26:222 UTC] 000000a1 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:18:26:223 UTC] 000000a1 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:18:26:223 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:26:224 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:26:224 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:18:26:225 UTC] 000000a1 WebConstraint 3           url: /*
[5/10/20 3:18:26:225 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /CertLoginSample/servlet
                                 GET
                                 true
[5/10/20 3:18:26:226 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:26:227 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:26:227 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:26:228 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:26:228 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:26:229 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:18:26:229 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:18:26:230 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:18:26:231 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:26:232 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:26:232 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:26:233 UTC] 000000a1 WebResourceCo 3   Checking URL: /*
[5/10/20 3:18:26:233 UTC] 000000a1 WebResourceCo <  matches (PathName) : /* Exit
[5/10/20 3:18:26:234 UTC] 000000a1 WebConstraint <  getConstraints not null Exit
[5/10/20 3:18:26:234 UTC] 000000a1 WebCollaborat 3   securityConstraints=com.ibm.ws.security.web.WebResourceCollectionConstraints@bf2cc04c
[5/10/20 3:18:26:235 UTC] 000000a1 WebCollaborat 3   method:null Request for JSP:null or Static:null
[5/10/20 3:18:26:235 UTC] 000000a1 WebCollaborat >  invokeTAI Entry
[5/10/20 3:18:26:236 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI default=false  (admin)  Entry
[5/10/20 3:18:26:237 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.websphere.security.performTAIForUnprotectedURI  (admin)  val=false Exit
[5/10/20 3:18:26:238 UTC] 000000a1 WebCollaborat 3    everyoneAllowed: false reqRole: There are required role(s) persistCred: true performTAIForUnprotectedURI: false isFileTransferApp: false rsaToken in the request header: null
[5/10/20 3:18:26:238 UTC] 000000a1 WebCollaborat <  invokeTAIReturning doTAI:true Exit
[5/10/20 3:18:26:239 UTC] 000000a1 WebCollaborat 3   isJaspiEnabled checking config
[5/10/20 3:18:26:239 UTC] 000000a1 WebCollaborat <  isJaspiEnabled Exit
                                 false
[5/10/20 3:18:26:240 UTC] 000000a1 WebCollaborat 3   isAuthenticate? false
[5/10/20 3:18:26:241 UTC] 000000a1 WebCollaborat >  shouldPerformLogin Entry
                                 CertLoginSample_war
                                 true
                                 false
[5/10/20 3:18:26:241 UTC] 000000a1 WebCollaborat <  shouldPerformLogin true Exit
[5/10/20 3:18:26:242 UTC] 000000a1 WebCollaborat 3   webSecAttr=webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null] persistCred=true alwaysLogin=false
[5/10/20 3:18:26:243 UTC] 000000a1 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /CertLoginSample/servlet
                                 GET
                                 REQUEST
[5/10/20 3:18:26:243 UTC] 000000a1 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:18:26:244 UTC] 000000a1 TrustAssociat >  getInstance Entry
[5/10/20 3:18:26:245 UTC] 000000a1 TrustAssociat 3   Returning cached instance: com.ibm.ws.security.web.TrustAssociationManager@d9cdb506
[5/10/20 3:18:26:245 UTC] 000000a1 TrustAssociat <  getInstance domainID=admin, com.ibm.ws.security.web.TrustAssociationManager@d9cdb506 Exit
[5/10/20 3:18:26:246 UTC] 000000a1 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthCount event
[5/10/20 3:18:26:246 UTC] 000000a1 WebAuthentica >  authenticate Entry
                                 com.ibm.ws.security.web.WebRequestImpl@22ad828f[uri=null,webAttributes=webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]]
appVHost=default_host
appContextRoot=/
appContext=null
isVHostAndContextRootSet=true
[5/10/20 3:18:26:247 UTC] 000000a1 WebAuthentica 3   challengeType = CLIENT_CERT Authorization header = null
[5/10/20 3:18:26:248 UTC] 000000a1 WebAuthentica >  setDomainContext Entry
[5/10/20 3:18:26:248 UTC] 000000a1 WebAuthentica <  setDomainContext Exit
                                 {security.domain.type=application, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:18:26:249 UTC] 000000a1 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:18:26:250 UTC] 000000a1 WebAuthentica >  handleSSO Entry
[5/10/20 3:18:26:250 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire default=false  (admin)  Entry
[5/10/20 3:18:26:251 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.web.logoutOnHTTPSessionExpire  (admin)  val=false Exit
[5/10/20 3:18:26:251 UTC] 000000a1 WebAuthentica <  handleSSO: no cookies present in the request. Exit
[5/10/20 3:18:26:252 UTC] 000000a1 TrustAssociat 3   isTrustAssociationEnabled returns [false]
[5/10/20 3:18:26:254 UTC] 000000a1 WebAuthentica >  handleCertificates Entry
[5/10/20 3:18:26:255 UTC] 000000a1 WebAuthentica 3   Challenge type used is CERT.
[5/10/20 3:18:26:260 UTC] 000000a1 WebAuthentica 3   Map credential for this certificate.
[5/10/20 3:18:26:261 UTC] 000000a1 WebAuthentica >  setDomainContext Entry
[5/10/20 3:18:26:262 UTC] 000000a1 WebAuthentica <  setDomainContext Exit
                                 {RedirectURL=null, WebAppName=Hello Servlet, security.domain.type=application, realm_name=defaultWIMFileBasedRealm}
[5/10/20 3:18:26:263 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:264 UTC] 000000a1 ContextManage >  login(realm, loginInfo, auth_mech) -> login(defaultWIMFileBasedRealm, [Ljava.security.cert.X509Certificate;@31a741d1, system.WEB_INBOUND) Entry
[5/10/20 3:18:26:264 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:265 UTC] 000000a1 ContextManage 3   checkAuthRetryForThread: changed = false
[5/10/20 3:18:26:266 UTC] 000000a1 ContextManage >  getSubjectFromHashtableCacheKey Entry
                                 <null>
[5/10/20 3:18:26:266 UTC] 000000a1 ContextManage <  getSubjectFromHashtableCacheKey Exit
                                 <null>
[5/10/20 3:18:26:267 UTC] 000000a1 ContextManage 3   Looking for opaque token in thread before doing Subject lookup.
[5/10/20 3:18:26:267 UTC] 000000a1 ContextManage >  getSubjectFromTokenHolderCacheKey Entry
                                 <null>
                                 <null>
[5/10/20 3:18:26:268 UTC] 000000a1 ContextManage <  getSubjectFromTokenHolderCacheKey Exit
                                 <null>
[5/10/20 3:18:26:268 UTC] 000000a1 WSCredentialT >  subjectContainsLoginHashtable Entry
                                 <null>
[5/10/20 3:18:26:269 UTC] 000000a1 WSCredentialT <  subjectContainsLoginHashtable, Subject is null, returning false Exit
[5/10/20 3:18:26:269 UTC] 000000a1 WSCredentialT >  subjectContainsLoginHashtable Entry
                                 <null>
[5/10/20 3:18:26:270 UTC] 000000a1 WSCredentialT <  subjectContainsLoginHashtable, Subject is null, returning false Exit
[5/10/20 3:18:26:271 UTC] 000000a1 ContextManage 3   Looking for Subject using loginInfo(user or cert).
[5/10/20 3:18:26:271 UTC] 000000a1 ContextManage 3   getFromCache
                                 defaultWIMFileBasedRealm
                                 [Ljava.security.cert.X509Certificate;@31a741d1
                                 <null>
[5/10/20 3:18:26:272 UTC] 000000a1 ContextManage 3   Certificate hashCode=926034681
[5/10/20 3:18:26:272 UTC] 000000a1 AuthCache     >  getSubject Entry
                                 926034681
[5/10/20 3:18:26:273 UTC] 000000a1 Cache         >  get Entry
                                 926034681
[5/10/20 3:18:26:273 UTC] 000000a1 Cache         <  get Exit
                                 <null>
[5/10/20 3:18:26:274 UTC] 000000a1 AuthCache     <  getSubject Exit
                                 <null>
[5/10/20 3:18:26:274 UTC] 000000a1 ContextManage <  getFromCache Exit
                                 <null>
[5/10/20 3:18:26:275 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:275 UTC] 000000a1 JaasLoginHelp >  jaas_login(realm,certChain,auth_mech = system.WEB_INBOUND) for web Entry
[5/10/20 3:18:26:276 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:276 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.CSI.rmiInboundPropagationEnabled
[5/10/20 3:18:26:277 UTC] 000000a1 ContextManage 3   Returning: true
[5/10/20 3:18:26:277 UTC] 000000a1 WSCallbackHan >  WSCallbackHandler(realmName,certChain = defaultWIMFileBasedRealm ,certChain, req, resp, appContext) Entry
[5/10/20 3:18:26:278 UTC] 000000a1 Configuration >  getAppConfigurationEntry(system.WEB_INBOUND) Entry
[5/10/20 3:18:26:278 UTC] 000000a1 Configuration 3   Number of loginModule configured for system.WEB_INBOUND : 2
[5/10/20 3:18:26:279 UTC] 000000a1 Configuration 3   loginModule 0 of 2: com.ibm.ws.security.server.lm.ltpaLoginModule LoginModuleControlFlag: required
[5/10/20 3:18:26:280 UTC] 000000a1 Configuration 3   loginModule 1 of 2: com.ibm.ws.security.server.lm.wsMapDefaultInboundLoginModule LoginModuleControlFlag: required
[5/10/20 3:18:26:280 UTC] 000000a1 Configuration <  getAppConfigurationEntry() Exit
                                 javax.security.auth.login.AppConfigurationEntry@4cf6e4c4
                                 javax.security.auth.login.AppConfigurationEntry@64c7ee37
[5/10/20 3:18:26:281 UTC] 000000a1 ltpaLoginModu >  ltpaLoginModule() Entry
[5/10/20 3:18:26:282 UTC] 000000a1 ltpaLoginModu <  ltpaLoginModule() Exit
[5/10/20 3:18:26:282 UTC] 000000a1 ltpaLoginModu >  initialize(subject = "Subject:
", callbackHandler = "javax.security.auth.login.LoginContext$SecureCallbackHandler@23d9e368", sharedState = "{}", options = "{}") Entry
[5/10/20 3:18:26:283 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:283 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:284 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:284 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:285 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:285 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:286 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:286 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:287 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:287 UTC] 000000a1 SecurityServe >  getRegistryImpl defaultWIMFileBasedRealm Entry
[5/10/20 3:18:26:288 UTC] 000000a1 SecurityServe 3   getRegistryImpl returning admin registry impl
[5/10/20 3:18:26:289 UTC] 000000a1 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:289 UTC] 000000a1 ltpaLoginModu 3   WSLoginModuleImpl initialized
[5/10/20 3:18:26:290 UTC] 000000a1 ltpaLoginModu <  initialize(subject, callbackHandler, sharedState, options) Exit
[5/10/20 3:18:26:290 UTC] 000000a1 ltpaLoginModu >  login() Entry
[5/10/20 3:18:26:291 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:292 UTC] 000000a1 WSCredTokenCa >  WSCredTokenCallbackImpl(prompt = "Credential Token: ") Entry
[5/10/20 3:18:26:292 UTC] 000000a1 WSCredTokenCa <  WSCredTokenCallbackImpl(prompt) Exit
[5/10/20 3:18:26:293 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:293 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:294 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:295 UTC] 000000a1 WSRealmNameCa >  WSRealmNameCallbackImpl(prompt = "Realm Name", defaultRealmName = "defaultWIMFileBasedRealm") Entry
[5/10/20 3:18:26:295 UTC] 000000a1 WSRealmNameCa <  WSRealmNameCallbackImpl(prompt, defaultRealmName) Exit
[5/10/20 3:18:26:296 UTC] 000000a1 WSAuthMechOid >  WSAuthMechOidCallbackImpl(prompt = "AuthMechOid: ") Entry
[5/10/20 3:18:26:296 UTC] 000000a1 WSAuthMechOid <  WSAuthMechOidCallbackImpl(prompt) Exit
[5/10/20 3:18:26:297 UTC] 000000a1 WSCallbackHan >  handle(callbacks = "{ javax.security.auth.callback.NameCallback, javax.security.auth.callback.PasswordCallback, com.ibm.websphere.security.auth.callback.WSCredTokenCallbackImpl, com.ibm.wsspi.security.auth.callback.WSServletRequestCallback, com.ibm.wsspi.security.auth.callback.WSServletResponseCallback, com.ibm.wsspi.security.auth.callback.WSAppContextCallback, com.ibm.wsspi.security.auth.callback.WSTokenHolderCallback, com.ibm.websphere.security.auth.callback.WSRealmNameCallbackImpl, com.ibm.wsspi.security.auth.callback.WSX509CertificateChainCallback, com.ibm.websphere.security.auth.callback.WSAuthMechOidCallbackImpl }") Entry
[5/10/20 3:18:26:298 UTC] 000000a1 WSCredTokenCa >  setCredToken(credToken) Entry
[5/10/20 3:18:26:298 UTC] 000000a1 CredentialsHe >  copyCredToken(credToken) Entry
[5/10/20 3:18:26:299 UTC] 000000a1 CredentialsHe 3   credential token is null
[5/10/20 3:18:26:299 UTC] 000000a1 CredentialsHe <  copyCredToken(credToken) Exit
[5/10/20 3:18:26:300 UTC] 000000a1 WSCredTokenCa <  setCredToken(credToken) Exit
[5/10/20 3:18:26:300 UTC] 000000a1 WSRealmNameCa >  setRealmName(realmName = "defaultWIMFileBasedRealm") Entry
[5/10/20 3:18:26:301 UTC] 000000a1 WSRealmNameCa <  setRealmName(realmName) Exit
[5/10/20 3:18:26:302 UTC] 000000a1 WSAuthMechOid >  setAuthMechOid(oid = "null") Entry
[5/10/20 3:18:26:302 UTC] 000000a1 WSAuthMechOid >  getdefaultAuthMechOid() Entry
[5/10/20 3:18:26:303 UTC] 000000a1 WSAuthMechOid <  getdefaultAuthMechOid() -> oid:1.3.18.0.2.30.2 Exit
[5/10/20 3:18:26:303 UTC] 000000a1 WSAuthMechOid <  setAuthMechOid(authMechOid) Exit
[5/10/20 3:18:26:304 UTC] 000000a1 WSCallbackHan <  handle(callbacks) Exit
[5/10/20 3:18:26:304 UTC] 000000a1 WSRealmNameCa >  getRealmName() Entry
[5/10/20 3:18:26:305 UTC] 000000a1 WSRealmNameCa <  getRealmName() -> defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:305 UTC] 000000a1 WSAuthMechOid >  getAuthMechOid() Entry
[5/10/20 3:18:26:306 UTC] 000000a1 WSAuthMechOid <  getAuthMechOid() -> oid:1.3.18.0.2.30.2 Exit
[5/10/20 3:18:26:307 UTC] 000000a1 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:18:26:307 UTC] 000000a1 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:18:26:308 UTC] 000000a1 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:308 UTC] 000000a1 WSCredTokenCa >  getCredToken() Entry
[5/10/20 3:18:26:309 UTC] 000000a1 WSCredTokenCa <  getCredToken() Exit
[5/10/20 3:18:26:309 UTC] 000000a1 CredentialsHe >  copyCredToken(credToken) Entry
[5/10/20 3:18:26:310 UTC] 000000a1 CredentialsHe 3   credential token is null
[5/10/20 3:18:26:310 UTC] 000000a1 CredentialsHe <  copyCredToken(credToken) Exit
[5/10/20 3:18:26:311 UTC] 000000a1 ltpaLoginModu 3   Looking for custom properties in public cred list.
[5/10/20 3:18:26:311 UTC] 000000a1 ltpaLoginModu 3   Looking for custom properties in private cred list.
[5/10/20 3:18:26:312 UTC] 000000a1 ltpaLoginModu 3   uid = null
[5/10/20 3:18:26:312 UTC] 000000a1 ltpaLoginModu 3   realm = defaultWIMFileBasedRealm
[5/10/20 3:18:26:313 UTC] 000000a1 ltpaLoginModu 3   password = <null>
[5/10/20 3:18:26:313 UTC] 000000a1 Util          >  toString(array) Entry
[5/10/20 3:18:26:314 UTC] 000000a1 Util          3   array is null
[5/10/20 3:18:26:314 UTC] 000000a1 Util          <  toString(array) Exit
[5/10/20 3:18:26:315 UTC] 000000a1 ltpaLoginModu 3   cred token = <null>
[5/10/20 3:18:26:315 UTC] 000000a1 ltpaLoginModu 3   X509 cert chain = [Ljava.security.cert.X509Certificate;@31a741d1
[5/10/20 3:18:26:316 UTC] 000000a1 ltpaLoginModu 3   authz token list = null
[5/10/20 3:18:26:316 UTC] 000000a1 ltpaLoginModu 3   custom properties = null
[5/10/20 3:18:26:317 UTC] 000000a1 ltpaLoginModu 3   isHTTPRequest = true
[5/10/20 3:18:26:317 UTC] 000000a1 ltpaLoginModu 3   authMechOid = oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:318 UTC] 000000a1 SubjectHelper >  containsKerberosCredential Entry
[5/10/20 3:18:26:318 UTC] 000000a1 SubjectHelper >  getGSSCredentialFromSubject Entry
[5/10/20 3:18:26:319 UTC] 000000a1 SubjectHelper 3   Found default GSSCredential? false
[5/10/20 3:18:26:319 UTC] 000000a1 SubjectHelper 3   containsKerberosCredential: no GSSCredential in subject private creds
[5/10/20 3:18:26:320 UTC] 000000a1 SubjectHelper <  containsKerberosCredential (false) Exit
[5/10/20 3:18:26:320 UTC] 000000a1 ltpaLoginModu 3   Successfully gathered authentication information
[5/10/20 3:18:26:322 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:322 UTC] 000000a1 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.security.server.lm.ltpaLoginModule$2@103bf7bd
                                 System
[5/10/20 3:18:26:323 UTC] 000000a1 ContextManage 3   Calling routine: com.ibm.ws.security.server.lm.ltpaLoginModule.login(ltpaLoginModule.java:752)
[5/10/20 3:18:26:323 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:324 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:324 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:325 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:325 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:326 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:326 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:327 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:328 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:328 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:329 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:329 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:330 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:330 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:331 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:331 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:332 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:332 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:333 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:333 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:334 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:334 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:335 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:26:335 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:18:26:336 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:336 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:336 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:337 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:337 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:338 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:338 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:339 UTC] 000000a1 ContextManage >  setSavedSubjects Entry
[5/10/20 3:18:26:339 UTC] 000000a1 ContextManage 3   Setting savedSubject:Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:340 UTC] 000000a1 ContextManage 3   Setting null for recSavedSubject
[5/10/20 3:18:26:340 UTC] 000000a1 ContextManage <  setSavedSubjects Exit
[5/10/20 3:18:26:341 UTC] 000000a1 ltpaLoginModu 3   Mapping X509Certificate[] to uid.
[5/10/20 3:18:26:344 UTC] 000000a1 UserMappingIm >  mapCertificateToName Entry
[5/10/20 3:18:26:345 UTC] 000000a1 UserMappingIm >  checkCustomMapping Entry
[5/10/20 3:18:26:346 UTC] 000000a1 UserMappingIm 3   Using custom mapping for certificates: com.example.CustomUserMapping
[5/10/20 3:18:26:350 UTC] 000000a1 UserMappingIm 3   Custom user mapping: com.example.CustomUserMapping successfully loaded
[5/10/20 3:18:26:351 UTC] 000000a1 UserMappingIm <  checkCustomMapping Exit
                                 true
[5/10/20 3:18:26:351 UTC] 000000a1 UserMappingIm 3   Using customMapping for certificates
[5/10/20 3:18:26:352 UTC] 000000a1 SystemOut     O   DEBUG: Entering mapCertificateToName
[5/10/20 3:18:26:353 UTC] 000000a1 SystemOut     O   DEBUG: mapCertificateToName: Printing SubjectDN=CN=localhost, OU=DefaultCell01, OU=DefaultNode01, O=IBM, C=US
[5/10/20 3:18:26:354 UTC] 000000a1 SystemOut     O   DEBUG: Mapping CN=localhost, OU=DefaultCell01, OU=DefaultNode01, O=IBM, C=US to wsadmin
[5/10/20 3:18:26:355 UTC] 000000a1 SystemOut     O   DEBUG: Exiting mapCertificateToName()  Returning : wsadmin
[5/10/20 3:18:26:356 UTC] 000000a1 UserMappingIm <  mapCertificateToName Exit
                                 wsadmin
[5/10/20 3:18:26:357 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:357 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:358 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:358 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:359 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:359 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:18:26:360 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:360 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:361 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:361 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:362 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:362 UTC] 000000a1 ContextManage <  runAs(System) Exit
[5/10/20 3:18:26:363 UTC] 000000a1 ltpaLoginModu 3   Using uid to mapCredential
[5/10/20 3:18:26:363 UTC] 000000a1 ltpaLoginModu 3   Authenticating "defaultWIMFileBasedRealm/wsadmin"
[5/10/20 3:18:26:364 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 wsadmin
[5/10/20 3:18:26:364 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:365 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:365 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:366 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 false
[5/10/20 3:18:26:366 UTC] 000000a1 UserRegistryI >  createCredential Entry
                                 wsadmin
[5/10/20 3:18:26:367 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:367 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:368 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:368 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:369 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:369 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:370 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:370 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:371 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:371 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:371 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:372 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:372 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:373 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:373 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:374 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:374 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:375 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:375 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:376 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:376 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:377 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:377 UTC] 000000a1 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.wim.registry.WIMUserRegistry$6@27160006
                                 System
[5/10/20 3:18:26:378 UTC] 000000a1 ContextManage 3   Calling routine: com.ibm.ws.wim.security.authz.jacc.JACCSecurityManager.runAsSuperUser(JACCSecurityManager.java:438)
[5/10/20 3:18:26:379 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:379 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:380 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:380 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:381 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:381 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:382 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:382 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:383 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:383 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:384 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:384 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:385 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:385 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:386 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:386 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:387 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:387 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:387 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:388 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:388 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:389 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:389 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:26:390 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:18:26:390 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:391 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:391 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:392 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:392 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:393 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:393 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:394 UTC] 000000a1 ContextManage >  setSavedSubjects Entry
[5/10/20 3:18:26:394 UTC] 000000a1 ContextManage 3   Setting savedSubject:Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:395 UTC] 000000a1 ContextManage 3   Setting null for recSavedSubject
[5/10/20 3:18:26:395 UTC] 000000a1 ContextManage <  setSavedSubjects Exit
[5/10/20 3:18:26:400 UTC] 000000a1 WSSubject     >  getRunAsSubject Entry
[5/10/20 3:18:26:401 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:402 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:403 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:403 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:404 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:404 UTC] 000000a1 WSSubject     <  getRunAsSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:405 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:405 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:406 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:406 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:407 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:407 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:408 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:409 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:409 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:410 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:410 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:411 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:412 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:412 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:413 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:413 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:414 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:415 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:415 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:416 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:416 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:417 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:417 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:418 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:419 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:419 UTC] 000000a1 ContextManage >  isGrantedAdminRole Entry
[5/10/20 3:18:26:420 UTC] 000000a1 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:18:26:420 UTC] 000000a1 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:18:26:421 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:422 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:422 UTC] 000000a1 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 domain
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:423 UTC] 000000a1 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:18:26:423 UTC] 000000a1 ContextManage 3   Got the RoleBasedAuthorizer object.
[5/10/20 3:18:26:424 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:424 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:425 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:425 UTC] 000000a1 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:18:26:426 UTC] 000000a1 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:427 UTC] 000000a1 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:18:26:427 UTC] 000000a1 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:18:26:428 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:428 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:429 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:429 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:18:26:430 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:18:26:431 UTC] 000000a1 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:18:26:431 UTC] 000000a1 RoleBasedSubj 3   server allowed
[5/10/20 3:18:26:432 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:432 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:433 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:26:433 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:26:434 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:434 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:435 UTC] 000000a1 RoleBasedSubj 3   accessId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:18:26:435 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:436 UTC] 000000a1 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:18:26:436 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:437 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:437 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:438 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:438 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:439 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:439 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 true
[5/10/20 3:18:26:440 UTC] 000000a1 ContextManage <  isInternalServerCredential Exit
                                 true
[5/10/20 3:18:26:440 UTC] 000000a1 RoleBasedSubj 3   isServerId? - server credential. Returning true
[5/10/20 3:18:26:441 UTC] 000000a1 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:18:26:441 UTC] 000000a1 ContextManage <  isGrantedAdminRole Exit
                                 true
[5/10/20 3:18:26:444 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:445 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:445 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:446 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:446 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:447 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:18:26:447 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:448 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:448 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:449 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:449 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:450 UTC] 000000a1 ContextManage <  runAs(System) Exit
[5/10/20 3:18:26:450 UTC] 000000a1 UserRegistryI >  getRealm Entry
[5/10/20 3:18:26:451 UTC] 000000a1 UserRegistryI <  getRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:451 UTC] 000000a1 RegistryUtil  >  appendRealm Entry
                                 user
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:452 UTC] 000000a1 RegistryUtil  <  appendRealm Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:452 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:453 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:453 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:454 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:454 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:455 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:455 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:456 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:456 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:457 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:458 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:458 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:459 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:459 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:460 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:460 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:461 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:461 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:462 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:462 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:463 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:463 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:464 UTC] 000000a1 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.wim.registry.WIMUserRegistry$12@d1fd33ea
                                 System
[5/10/20 3:18:26:464 UTC] 000000a1 ContextManage 3   Calling routine: com.ibm.ws.wim.security.authz.jacc.JACCSecurityManager.runAsSuperUser(JACCSecurityManager.java:438)
[5/10/20 3:18:26:465 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:466 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:466 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:467 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:467 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:468 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:468 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:468 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:469 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:469 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:470 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:470 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:471 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:471 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:472 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:472 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:473 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:473 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:474 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:474 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:475 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:475 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:476 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:26:476 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:18:26:476 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:477 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:477 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:478 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:478 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:479 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:479 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:480 UTC] 000000a1 ContextManage >  setSavedSubjects Entry
[5/10/20 3:18:26:480 UTC] 000000a1 ContextManage 3   Setting savedSubject:Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:481 UTC] 000000a1 ContextManage 3   Setting null for recSavedSubject
[5/10/20 3:18:26:481 UTC] 000000a1 ContextManage <  setSavedSubjects Exit
[5/10/20 3:18:26:487 UTC] 000000a1 WSSubject     >  getRunAsSubject Entry
[5/10/20 3:18:26:488 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:488 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:489 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:490 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:490 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:491 UTC] 000000a1 WSSubject     <  getRunAsSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:491 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:492 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:492 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:493 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:493 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:494 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:494 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:495 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:496 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:496 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:497 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:497 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:498 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:498 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:499 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:499 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:500 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:500 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:501 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:501 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:502 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:502 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:503 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:503 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:504 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:504 UTC] 000000a1 ContextManage >  isGrantedAdminRole Entry
[5/10/20 3:18:26:505 UTC] 000000a1 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:18:26:505 UTC] 000000a1 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:18:26:506 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:506 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:507 UTC] 000000a1 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 domain
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:507 UTC] 000000a1 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:18:26:508 UTC] 000000a1 ContextManage 3   Got the RoleBasedAuthorizer object.
[5/10/20 3:18:26:508 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:509 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:509 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:510 UTC] 000000a1 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:18:26:510 UTC] 000000a1 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:511 UTC] 000000a1 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:18:26:511 UTC] 000000a1 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:18:26:512 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:512 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:513 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:513 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:18:26:514 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:18:26:514 UTC] 000000a1 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:18:26:515 UTC] 000000a1 RoleBasedSubj 3   server allowed
[5/10/20 3:18:26:515 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:516 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:516 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:26:516 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:26:517 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:517 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:518 UTC] 000000a1 RoleBasedSubj 3   accessId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:18:26:518 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:519 UTC] 000000a1 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:18:26:519 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:520 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:520 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:521 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:521 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:521 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:522 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 true
[5/10/20 3:18:26:522 UTC] 000000a1 ContextManage <  isInternalServerCredential Exit
                                 true
[5/10/20 3:18:26:523 UTC] 000000a1 RoleBasedSubj 3   isServerId? - server credential. Returning true
[5/10/20 3:18:26:523 UTC] 000000a1 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:18:26:524 UTC] 000000a1 ContextManage <  isGrantedAdminRole Exit
                                 true
[5/10/20 3:18:26:531 UTC] 000000a1 WSSubject     >  getRunAsSubject Entry
[5/10/20 3:18:26:532 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:533 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:533 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:534 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:535 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:535 UTC] 000000a1 WSSubject     <  getRunAsSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:536 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:537 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:537 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:538 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:539 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:539 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:540 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:541 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:541 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:542 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:542 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:543 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:543 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:544 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:544 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:545 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:545 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:546 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:546 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:547 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:548 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:548 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:549 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:549 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:550 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:550 UTC] 000000a1 ContextManage >  isGrantedAdminRole Entry
[5/10/20 3:18:26:551 UTC] 000000a1 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:18:26:551 UTC] 000000a1 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:18:26:552 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:552 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:553 UTC] 000000a1 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 domain
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:553 UTC] 000000a1 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:18:26:554 UTC] 000000a1 ContextManage 3   Got the RoleBasedAuthorizer object.
[5/10/20 3:18:26:555 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:555 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:556 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:556 UTC] 000000a1 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:18:26:557 UTC] 000000a1 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:557 UTC] 000000a1 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:18:26:558 UTC] 000000a1 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:18:26:558 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:559 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:559 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:560 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:18:26:560 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:18:26:561 UTC] 000000a1 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:18:26:561 UTC] 000000a1 RoleBasedSubj 3   server allowed
[5/10/20 3:18:26:562 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:562 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:563 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:26:563 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:26:563 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:564 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:564 UTC] 000000a1 RoleBasedSubj 3   accessId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:18:26:565 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:565 UTC] 000000a1 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:18:26:566 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:566 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:567 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:567 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:567 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:568 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:568 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 true
[5/10/20 3:18:26:569 UTC] 000000a1 ContextManage <  isInternalServerCredential Exit
                                 true
[5/10/20 3:18:26:569 UTC] 000000a1 RoleBasedSubj 3   isServerId? - server credential. Returning true
[5/10/20 3:18:26:570 UTC] 000000a1 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:18:26:570 UTC] 000000a1 ContextManage <  isGrantedAdminRole Exit
                                 true
[5/10/20 3:18:26:573 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:574 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:574 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:575 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:575 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:576 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:18:26:576 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:577 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:577 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:578 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:578 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:579 UTC] 000000a1 ContextManage <  runAs(System) Exit
[5/10/20 3:18:26:579 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:580 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:580 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:581 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:581 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:582 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:582 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:583 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:584 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:584 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:585 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:585 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:586 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:586 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:587 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:587 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:588 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:588 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:589 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:589 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:590 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:590 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:591 UTC] 000000a1 ContextManage >  runAs Entry
                                 <null>
                                 com.ibm.ws.wim.registry.WIMUserRegistry$7@1de53d6d
                                 System
[5/10/20 3:18:26:592 UTC] 000000a1 ContextManage 3   Calling routine: com.ibm.ws.wim.security.authz.jacc.JACCSecurityManager.runAsSuperUser(JACCSecurityManager.java:438)
[5/10/20 3:18:26:592 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:593 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:593 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:593 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:594 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:594 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:595 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:595 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:596 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:596 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:597 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:597 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:598 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:598 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:599 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:599 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:600 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:600 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:601 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:601 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:602 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:602 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:603 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:26:603 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 <null>
[5/10/20 3:18:26:604 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:604 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:604 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:605 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:605 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:606 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:606 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:607 UTC] 000000a1 ContextManage >  setSavedSubjects Entry
[5/10/20 3:18:26:607 UTC] 000000a1 ContextManage 3   Setting savedSubject:Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:608 UTC] 000000a1 ContextManage 3   Setting null for recSavedSubject
[5/10/20 3:18:26:608 UTC] 000000a1 ContextManage <  setSavedSubjects Exit
[5/10/20 3:18:26:614 UTC] 000000a1 WSSubject     >  getRunAsSubject Entry
[5/10/20 3:18:26:615 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:616 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:617 UTC] 000000a1 ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:26:617 UTC] 000000a1 ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:26:618 UTC] 000000a1 WSSubject     >  WSSubject.getRunAsSubjectAction.run Entry
[5/10/20 3:18:26:618 UTC] 000000a1 WSSubject     <  getRunAsSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:619 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:619 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:620 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:620 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:621 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:622 UTC] 000000a1 ContextManage >  getServerSubject Entry
[5/10/20 3:18:26:622 UTC] 000000a1 ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:623 UTC] 000000a1 ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:623 UTC] 000000a1 ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:26:624 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:624 UTC] 000000a1 ContextManage >  getRegistryObject Entry
[5/10/20 3:18:26:625 UTC] 000000a1 ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:26:625 UTC] 000000a1 WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:26:626 UTC] 000000a1 WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:26:626 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:627 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:26:628 UTC] 000000a1 AuthCache     >  getCushion Entry
[5/10/20 3:18:26:628 UTC] 000000a1 AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:26:629 UTC] 000000a1 ContextManage 3   Is server subject valid? true
[5/10/20 3:18:26:629 UTC] 000000a1 ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:26:629 UTC] 000000a1 ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:26:630 UTC] 000000a1 ContextManage >  isServerSubjectCreated Entry
[5/10/20 3:18:26:630 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:631 UTC] 000000a1 ContextManage <  isServerSubjectCreated:true Exit
[5/10/20 3:18:26:632 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:633 UTC] 000000a1 ContextManage >  isGrantedAdminRole Entry
[5/10/20 3:18:26:633 UTC] 000000a1 RoleBasedConf >  getConfigurator Entry
[5/10/20 3:18:26:634 UTC] 000000a1 RoleBasedConf >  getConfiguratortrue Entry
[5/10/20 3:18:26:634 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:635 UTC] 000000a1 RoleBasedConf <  getConfigurator Exit
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:635 UTC] 000000a1 RoleBasedConf >  getRoleBasedAuthorizer Entry
                                 admin-authz
                                 domain
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:636 UTC] 000000a1 RoleBasedConf <  getRoleBasedAuthorizer Exit
                                 com.ibm.ws.security.role.RoleBasedAuthorizerImpl@eaf607fc
[5/10/20 3:18:26:636 UTC] 000000a1 ContextManage 3   Got the RoleBasedAuthorizer object.
[5/10/20 3:18:26:637 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:637 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:638 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:638 UTC] 000000a1 RoleBasedAuth 3   calling default authz engine for authorization decision
[5/10/20 3:18:26:639 UTC] 000000a1 RoleBasedConf >  getRoleBasedSubjectMap Entry
                                 admin-authz
                                 com.ibm.ws.security.role.RoleBasedConfiguratorImpl@84ba28af
[5/10/20 3:18:26:639 UTC] 000000a1 RoleBasedConf <  getRoleBasedSubjectMap Exit
                                 com.ibm.ws.security.role.RoleBasedSubjectMap@5cc50d25
[5/10/20 3:18:26:640 UTC] 000000a1 RoleBasedSubj >  isGrantedAnyRole Entry
[5/10/20 3:18:26:640 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:641 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:641 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:642 UTC] 000000a1 RoleBasedSubj >  isAllAuthenticatedUsersGranted Entry
[5/10/20 3:18:26:642 UTC] 000000a1 RoleBasedSubj <  isAllAuthenticatedUsersGanted Exit
[5/10/20 3:18:26:643 UTC] 000000a1 RoleBasedSubj >  isServerGranted Entry
[5/10/20 3:18:26:643 UTC] 000000a1 RoleBasedSubj 3   server allowed
[5/10/20 3:18:26:644 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:26:644 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:26:645 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:26:645 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:26:646 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:646 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:647 UTC] 000000a1 RoleBasedSubj 3   accessId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 serverId: defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1 longServerId: server:defaultwimfilebasedrealm/server:defaultcell01_defaultnode01_server1
[5/10/20 3:18:26:648 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:648 UTC] 000000a1 ContextManage >  isInternalServerCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@eae89400
[5/10/20 3:18:26:648 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:649 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:649 UTC] 000000a1 ContextManage >  isInternalServerId Entry
                                 server:defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
[5/10/20 3:18:26:650 UTC] 000000a1 ContextManage >  getDefaultRealm Entry
[5/10/20 3:18:26:650 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:651 UTC] 000000a1 ContextManage <  getDefaultRealm Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:652 UTC] 000000a1 ContextManage <  isInternalServerId Exit
                                 true
[5/10/20 3:18:26:652 UTC] 000000a1 ContextManage <  isInternalServerCredential Exit
                                 true
[5/10/20 3:18:26:652 UTC] 000000a1 RoleBasedSubj 3   isServerId? - server credential. Returning true
[5/10/20 3:18:26:653 UTC] 000000a1 RoleBasedAuth <  isGrantedRole, result:true Exit
[5/10/20 3:18:26:653 UTC] 000000a1 ContextManage <  isGrantedAdminRole Exit
                                 true
[5/10/20 3:18:26:656 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:26:657 UTC] 000000a1 ContextManage 3   Setting invocation subject: Subject:
	Principal: /UNAUTHENTICATED
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@a5106fed

[5/10/20 3:18:26:657 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:658 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:26:658 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:659 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:18:26:659 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:660 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:660 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Disabled during login. Exit
[5/10/20 3:18:26:661 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:661 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:26:662 UTC] 000000a1 ContextManage <  runAs(System) Exit
[5/10/20 3:18:26:662 UTC] 000000a1 UserRegistryI 3   securityName used in the credential is: 
                                 wsadmin
[5/10/20 3:18:26:663 UTC] 000000a1 WSCredentialI >  <init> Entry
                                 defaultWIMFileBasedRealm
                                 wsadmin
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
                                 ""
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 <null>
                                 []
[5/10/20 3:18:26:663 UTC] 000000a1 WSCredentialI <  <init> Exit
                                 com.ibm.ws.security.auth.WSCredentialImpl@21fa386d
[5/10/20 3:18:26:664 UTC] 000000a1 WSCredentialI >  get Entry
                                 com.ibm.ws.security.zos.PlatformCredential
[5/10/20 3:18:26:664 UTC] 000000a1 WSCredentialI <  get Exit
                                 {}
[5/10/20 3:18:26:665 UTC] 000000a1 WSCredentialI >  set Entry
                                 com.ibm.wsspi.security.cred.refreshGroups
                                 true
[5/10/20 3:18:26:665 UTC] 000000a1 WSCredentialI <  set Exit
                                 {}
[5/10/20 3:18:26:666 UTC] 000000a1 WSCredentialI >  set Entry
                                 com.ibm.wsspi.security.cred.verifyUser
                                 true
[5/10/20 3:18:26:666 UTC] 000000a1 WSCredentialI <  set Exit
                                 {com.ibm.wsspi.security.cred.refreshGroups=true}
[5/10/20 3:18:26:666 UTC] 000000a1 UserRegistryI <  createCredential Exit
                                 com.ibm.ws.security.auth.WSCredentialImpl@21fa386d
[5/10/20 3:18:26:667 UTC] 000000a1 SecurityAuthe 3   SecurityAuthenticationModule received an onCredentialCreationTime event
[5/10/20 3:18:26:667 UTC] 000000a1 SecurityAuthe 3   Security Authentication statistic credCreationTime is null
[5/10/20 3:18:26:668 UTC] 000000a1 LTPAServerObj >  createLTPAToken(final cred) 948041649 Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@21fa386d
[5/10/20 3:18:26:668 UTC] 000000a1 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@21fa386d
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:669 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:669 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:670 UTC] 000000a1 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.LTPATokenFactory
                                 true
[5/10/20 3:18:26:670 UTC] 000000a1 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.LTPATokenFactory@1296ed38
[5/10/20 3:18:26:671 UTC] 000000a1 LTPAToken     >  new LTPAToken from accessID Entry
[5/10/20 3:18:26:671 UTC] 000000a1 LTPAToken     3   Expiration set to: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:672 UTC] 000000a1 LTPAToken     <  new LTPAToken from accessID Exit
[5/10/20 3:18:26:672 UTC] 000000a1 WSCredentialI >  <init> Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@21fa386d
                                 oid:1.3.18.0.2.30.2
                                 <malformed parameter>
                                 true
                                 1589087940000
[5/10/20 3:18:26:673 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:673 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:674 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:674 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:675 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:676 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:676 UTC] 000000a1 WSCredentialI >  getPrimaryGroupId Entry
[5/10/20 3:18:26:677 UTC] 000000a1 WSCredentialI <  getPrimaryGroupId Exit
                                 ""
[5/10/20 3:18:26:677 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:678 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:678 UTC] 000000a1 WSCredentialI >  getRoles Entry
[5/10/20 3:18:26:679 UTC] 000000a1 WSCredentialI <  getRoles Exit
                                 []
[5/10/20 3:18:26:679 UTC] 000000a1 WSCredentialI >  getGroupIds Entry
[5/10/20 3:18:26:680 UTC] 000000a1 WSCredentialI <  getGroupIds Exit
                                 []
[5/10/20 3:18:26:681 UTC] 000000a1 WSCredentialI >  getTable Entry
[5/10/20 3:18:26:681 UTC] 000000a1 WSCredentialI <  getTable Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, com.ibm.wsspi.security.cred.refreshGroups=true}
[5/10/20 3:18:26:682 UTC] 000000a1 WSCredentialI <  <init> Exit
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:683 UTC] 000000a1 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:683 UTC] 000000a1 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:18:26:683 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:684 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:684 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:685 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:685 UTC] 000000a1 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:18:26:686 UTC] 000000a1 SubjectHelper 3   Principal name: defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:18:26:686 UTC] 000000a1 ltpaLoginModu <  login() Exit
[5/10/20 3:18:26:687 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:687 UTC] 000000a1 wsMapDefaultI >  wsMapDefaultInboundLoginModule() Entry
[5/10/20 3:18:26:688 UTC] 000000a1 wsMapDefaultI <  wsMapDefaultInboundLoginModule() Exit
[5/10/20 3:18:26:689 UTC] 000000a1 wsMapDefaultI >  initialize(subject = "Subject:
", callbackHandler = "javax.security.auth.login.LoginContext$SecureCallbackHandler@23d9e368", sharedState = "{Callback=[Ljavax.security.auth.callback.Callback;@99176e76, WSCredential=com.ibm.ws.security.auth.WSCredentialImpl@b54050af, WSPrincipal=defaultWIMFileBasedRealm/wsadmin}", options = "{}") Entry
[5/10/20 3:18:26:689 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:690 UTC] 000000a1 WSCredentialT >  getInstance() Entry
[5/10/20 3:18:26:690 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:691 UTC] 000000a1 WSCredentialT <  getInstance() -1842373918 Exit
[5/10/20 3:18:26:691 UTC] 000000a1 wsMapDefaultI 3   WebInboundLoginModuleImpl initialized
[5/10/20 3:18:26:692 UTC] 000000a1 wsMapDefaultI 3   WebInboundLoginModule cookie ON: false
[5/10/20 3:18:26:692 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.wsspi.security.cred.refreshGroups default=false  (admin)  Entry
[5/10/20 3:18:26:693 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.wsspi.security.cred.refreshGroups  (admin)  val=false Exit
[5/10/20 3:18:26:693 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.wsspi.security.cred.verifyUser default=false  (admin)  Entry
[5/10/20 3:18:26:694 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.wsspi.security.cred.verifyUser  (admin)  val=false Exit
[5/10/20 3:18:26:694 UTC] 000000a1 wsMapDefaultI 3   refreshGroups custom prop is false and verifyUser custom prop is false
[5/10/20 3:18:26:695 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.wsspi.wssecurity.kerberos.failAuthForExpiredKerberosToken default=false  (admin)  Entry
[5/10/20 3:18:26:695 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.wsspi.wssecurity.kerberos.failAuthForExpiredKerberosToken  (admin)  val=false Exit
[5/10/20 3:18:26:696 UTC] 000000a1 wsMapDefaultI 3   SSO is enabled for login: true
[5/10/20 3:18:26:696 UTC] 000000a1 wsMapDefaultI <  initialize(subject, callbackHandler, sharedState, options), generateCookie: false Exit
[5/10/20 3:18:26:697 UTC] 000000a1 wsMapDefaultI >  login() Entry
[5/10/20 3:18:26:697 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:698 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:698 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:699 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:699 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:700 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:700 UTC] 000000a1 wsMapDefaultI 3   *** SHARED STATE ***
[5/10/20 3:18:26:701 UTC] 000000a1 wsMapDefaultI 3   customProperties = null
[5/10/20 3:18:26:701 UTC] 000000a1 wsMapDefaultI 3   credential = com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:702 UTC] 000000a1 wsMapDefaultI 3   principal = defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:18:26:702 UTC] 000000a1 wsMapDefaultI >  checkForRefreshIfExpired Entry
[5/10/20 3:18:26:703 UTC] 000000a1 wsMapDefaultI <  checkForRefreshIfExpired Exit
[5/10/20 3:18:26:703 UTC] 000000a1 WSRealmNameCa >  getRealmName() Entry
[5/10/20 3:18:26:704 UTC] 000000a1 WSRealmNameCa <  getRealmName() -> defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:704 UTC] 000000a1 WSAuthMechOid >  getAuthMechOid() Entry
[5/10/20 3:18:26:705 UTC] 000000a1 WSAuthMechOid <  getAuthMechOid() -> oid:1.3.18.0.2.30.2 Exit
[5/10/20 3:18:26:705 UTC] 000000a1 WSCredTokenCa >  getCredToken() Entry
[5/10/20 3:18:26:706 UTC] 000000a1 WSCredTokenCa <  getCredToken() Exit
[5/10/20 3:18:26:706 UTC] 000000a1 CredentialsHe >  copyCredToken(credToken) Entry
[5/10/20 3:18:26:707 UTC] 000000a1 CredentialsHe 3   credential token is null
[5/10/20 3:18:26:707 UTC] 000000a1 CredentialsHe <  copyCredToken(credToken) Exit
[5/10/20 3:18:26:708 UTC] 000000a1 SubjectHelper >  getGSSCredentialFromSubject Entry
[5/10/20 3:18:26:708 UTC] 000000a1 SubjectHelper 3   Found default GSSCredential? false
[5/10/20 3:18:26:709 UTC] 000000a1 SubjectHelper >  getKerberosTicketFromSubject Entry
                                 Subject:

[5/10/20 3:18:26:709 UTC] 000000a1 SubjectHelper <  getKerberosAuthnTokenFromSubject Exit
                                 Subject:

[5/10/20 3:18:26:710 UTC] 000000a1 SubjectHelper 3   Could not find default KRBAuthnToken.
[5/10/20 3:18:26:710 UTC] 000000a1 SubjectHelper 3   Could not find default Kerberos Ticket.
[5/10/20 3:18:26:711 UTC] 000000a1 wsMapDefaultI 3   *** CALLBACKS ***
[5/10/20 3:18:26:711 UTC] 000000a1 wsMapDefaultI 3   uid = null
[5/10/20 3:18:26:712 UTC] 000000a1 wsMapDefaultI 3   realm = defaultWIMFileBasedRealm
[5/10/20 3:18:26:712 UTC] 000000a1 wsMapDefaultI 3   cred token = null
[5/10/20 3:18:26:713 UTC] 000000a1 wsMapDefaultI 3   X509 cert chain = [Ljava.security.cert.X509Certificate;@31a741d1
[5/10/20 3:18:26:713 UTC] 000000a1 wsMapDefaultI 3   authz token list = null
[5/10/20 3:18:26:714 UTC] 000000a1 wsMapDefaultI 3   kTicket = null
[5/10/20 3:18:26:714 UTC] 000000a1 wsMapDefaultI 3   gssCred = null
[5/10/20 3:18:26:715 UTC] 000000a1 wsMapDefaultI 3   custom Properties = null
[5/10/20 3:18:26:715 UTC] 000000a1 wsMapDefaultI 3   isHTTPRequest = true
[5/10/20 3:18:26:716 UTC] 000000a1 wsMapDefaultI 3   authMechOid = oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:716 UTC] 000000a1 wsMapDefaultI 3   Creating PlatformCredential for WSCredential, if needed.
[5/10/20 3:18:26:717 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:717 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:718 UTC] 000000a1 wsMapDefaultI 3   Mapping WSCredential to SAP tokens.
[5/10/20 3:18:26:718 UTC] 000000a1 wsMapDefaultI 3   Mapping authz token from WSCredential.
[5/10/20 3:18:26:719 UTC] 000000a1 WSCredentialT >  createAuthTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:719 UTC] 000000a1 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:18:26:719 UTC] 000000a1 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:18:26:720 UTC] 000000a1 WSCredentialI >  getTokenObject Entry
[5/10/20 3:18:26:720 UTC] 000000a1 WSCredentialI <  getTokenObject(token not null? true) Exit
[5/10/20 3:18:26:721 UTC] 000000a1 WSCredentialT <  createAuthTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
[5/10/20 3:18:26:721 UTC] 000000a1 WSCredentialT >  createAuthzTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:722 UTC] 000000a1 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:18:26:722 UTC] 000000a1 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:18:26:723 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:723 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:724 UTC] 000000a1 WSCredentialT 3   Creating authorization token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: wsadmin
[5/10/20 3:18:26:724 UTC] 000000a1 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:18:26:725 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:725 UTC] 000000a1 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:18:26:726 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:726 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:727 UTC] 000000a1 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:18:26:727 UTC] 000000a1 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:18:26:728 UTC] 000000a1 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:18:26:728 UTC] 000000a1 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:729 UTC] 000000a1 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:18:26:729 UTC] 000000a1 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:18:26:730 UTC] 000000a1 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:18:26:730 UTC] 000000a1 AuthzPropToke 3   Expiration set to: Sun May 10 05:18:26 UTC 2020
[5/10/20 3:18:26:731 UTC] 000000a1 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:18:26:731 UTC] 000000a1 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:18:26:732 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:732 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:733 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:733 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:733 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:734 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:734 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:735 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:735 UTC] 000000a1 WSCredentialI >  getPrimaryGroupId Entry
[5/10/20 3:18:26:736 UTC] 000000a1 WSCredentialI <  getPrimaryGroupId Exit
                                 ""
[5/10/20 3:18:26:736 UTC] 000000a1 WSCredentialI >  get Entry
                                 com.ibm.wsspi.security.cred.cacheKey
[5/10/20 3:18:26:737 UTC] 000000a1 WSCredentialI <  get Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, com.ibm.wsspi.security.cred.refreshGroups=true}
[5/10/20 3:18:26:737 UTC] 000000a1 WSCredentialI >  getGroupIds Entry
[5/10/20 3:18:26:738 UTC] 000000a1 WSCredentialI <  getGroupIds Exit
                                 []
[5/10/20 3:18:26:738 UTC] 000000a1 WSCredentialT 3   Setting group list: []
[5/10/20 3:18:26:739 UTC] 000000a1 WSCredentialI >  getOID Entry
[5/10/20 3:18:26:739 UTC] 000000a1 WSCredentialI <  getOID Exit
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:739 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:740 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087940000
[5/10/20 3:18:26:740 UTC] 000000a1 WSCredentialI >  getOID Entry
[5/10/20 3:18:26:741 UTC] 000000a1 WSCredentialI <  getOID Exit
                                 oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:741 UTC] 000000a1 WSCredentialI >  isForwardable Entry
[5/10/20 3:18:26:742 UTC] 000000a1 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:18:26:743 UTC] 000000a1 WSCredentialT 3   Forwardable string set as: true
[5/10/20 3:18:26:743 UTC] 000000a1 WSCredentialT <  createAuthzTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f
[5/10/20 3:18:26:744 UTC] 000000a1 WSCredentialT >  createSSOTokenAndSetAttributes Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
                                 false
                                 false
[5/10/20 3:18:26:745 UTC] 000000a1 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:18:26:745 UTC] 000000a1 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:18:26:746 UTC] 000000a1 WSCredentialT >  createSSOTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:747 UTC] 000000a1 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:18:26:748 UTC] 000000a1 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:18:26:748 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:749 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:750 UTC] 000000a1 WSCredentialT 3   Creating sso token using factory com.ibm.ws.security.ltpa.LTPAToken2Factory for caller: wsadmin
[5/10/20 3:18:26:750 UTC] 000000a1 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:18:26:751 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:751 UTC] 000000a1 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:18:26:752 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:753 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:754 UTC] 000000a1 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.LTPAToken2Factory
[5/10/20 3:18:26:754 UTC] 000000a1 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:18:26:755 UTC] 000000a1 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:18:26:755 UTC] 000000a1 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:756 UTC] 000000a1 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.LTPAToken2Factory
                                 true
[5/10/20 3:18:26:757 UTC] 000000a1 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.LTPAToken2Factory@29068ae7
[5/10/20 3:18:26:757 UTC] 000000a1 LTPAToken2    >  new LTPAToken2 from accessID Entry
[5/10/20 3:18:26:758 UTC] 000000a1 LTPAToken2    3   userdata areau:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:759 UTC] 000000a1 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:759 UTC] 000000a1 LTPAToken2    3   Expiration set to: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:760 UTC] 000000a1 LTPAToken2    <  new LTPAToken2 from accessID Exit
[5/10/20 3:18:26:761 UTC] 000000a1 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:18:26:762 UTC] 000000a1 SingleSignonT 3   token name: LtpaToken
[5/10/20 3:18:26:763 UTC] 000000a1 WSCredentialT <  createSSOTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
[5/10/20 3:18:26:764 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:765 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.ws.security.webInboundPropagationEnabled
[5/10/20 3:18:26:766 UTC] 000000a1 ContextManage 3   Returning: true
[5/10/20 3:18:26:767 UTC] 000000a1 AbstractToken 3   Setting attribute with key: process.serverName, value: DefaultCell01:DefaultNode01:server1
[5/10/20 3:18:26:768 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:769 UTC] 000000a1 AbstractToken 3   Setting attribute with key: security.authMechOID, value: oid:1.3.18.0.2.30.2
[5/10/20 3:18:26:769 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:770 UTC] 000000a1 AbstractToken 3   Setting attribute with key: java.naming.provider.url, value: corbaloc:iiop:localhost:2809/WsnAdminNameService
[5/10/20 3:18:26:771 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:771 UTC] 000000a1 AbstractToken 3   Setting attribute with key: type, value: SOAP
[5/10/20 3:18:26:772 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:772 UTC] 000000a1 AbstractToken 3   Setting attribute with key: host, value: localhost
[5/10/20 3:18:26:773 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:773 UTC] 000000a1 AbstractToken 3   Setting attribute with key: port, value: 8880
[5/10/20 3:18:26:774 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:775 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:775 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:776 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087940000
[5/10/20 3:18:26:776 UTC] 000000a1 WSCredentialT 3   Expiration set to: 1589087940000
[5/10/20 3:18:26:777 UTC] 000000a1 AbstractToken 3   Setting attribute with key: expire, value: 1589087940000
[5/10/20 3:18:26:777 UTC] 000000a1 LTPAToken2    3   Token was updated thus clearing encrypted bytes to re-encrypt.
[5/10/20 3:18:26:778 UTC] 000000a1 WSCredentialT <  createSSOTokenAndSetAttributes Exit
                                 com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
[5/10/20 3:18:26:779 UTC] 000000a1 wsMapDefaultI >  addAttributesFromOriginalToken ssoToken=com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41 Entry
[5/10/20 3:18:26:779 UTC] 000000a1 wsMapDefaultI <  initialTokenAttributes from SharedState is null. returning without any operation. Exit
[5/10/20 3:18:26:780 UTC] 000000a1 wsMapDefaultI <  initial login() Exit
[5/10/20 3:18:26:781 UTC] 000000a1 ltpaLoginModu >  commit() Entry
[5/10/20 3:18:26:782 UTC] 000000a1 ltpaLoginModu 3   shared state contains: [com.ibm.wsspi.security.token.wsSingleSignonToken, Callback, com.ibm.wsspi.security.token.wsAuthenticationToken, WSCredential, WSPrincipal, com.ibm.wsspi.security.token.wsAuthorizationToken]
[5/10/20 3:18:26:782 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:783 UTC] 000000a1 ltpaLoginModu 3   Start committing the changes to the Subject ...
[5/10/20 3:18:26:783 UTC] 000000a1 ltpaLoginModu 3   Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:784 UTC] 000000a1 WSCredentialI >  set Entry
                                 wssecurity.identity_name
                                 ClientAuthenticationToken
[5/10/20 3:18:26:784 UTC] 000000a1 WSCredentialI <  set Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, com.ibm.wsspi.security.cred.refreshGroups=true}
[5/10/20 3:18:26:785 UTC] 000000a1 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:18:26:786 UTC] 000000a1 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:18:26:786 UTC] 000000a1 WSCredentialI >  set Entry
                                 wssecurity.identity_value
                                 [B@3681c8a8
[5/10/20 3:18:26:787 UTC] 000000a1 WSCredentialI <  set Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, wssecurity.identity_name=ClientAuthenticationToken, com.ibm.wsspi.security.cred.refreshGroups=true}
[5/10/20 3:18:26:788 UTC] 000000a1 ltpaLoginModu 3   Change committed!
[5/10/20 3:18:26:788 UTC] 000000a1 ltpaLoginModu >  cleanupSharedState() Entry
[5/10/20 3:18:26:789 UTC] 000000a1 ltpaLoginModu 3   Start removing Callbacks, WSPrincipal, and WSCredential from the shared state.
[5/10/20 3:18:26:789 UTC] 000000a1 ltpaLoginModu 3   Removed.
[5/10/20 3:18:26:790 UTC] 000000a1 ltpaLoginModu <  cleanupSharedState() Exit
[5/10/20 3:18:26:790 UTC] 000000a1 ltpaLoginModu <  commit() Exit
[5/10/20 3:18:26:791 UTC] 000000a1 wsMapDefaultI >  commit() Entry
[5/10/20 3:18:26:792 UTC] 000000a1 wsMapDefaultI 3   shared state contains: [com.ibm.wsspi.security.token.wsSingleSignonToken, com.ibm.wsspi.security.token.wsAuthenticationToken, com.ibm.wsspi.security.token.wsAuthorizationToken]
[5/10/20 3:18:26:792 UTC] 000000a1 wsMapDefaultI 3   Start committing the changes to the Subject ...
[5/10/20 3:18:26:793 UTC] 000000a1 wsMapDefaultI 3   wsMapDefaultInboundLoginModule: KRBAuthnToken is null in commit (phase 2) stage
[5/10/20 3:18:26:794 UTC] 000000a1 WSCredentialT >  createSubjectUniqueID Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:794 UTC] 000000a1 WSCredentialT 3   Getting cacheKeyFromHashtable
[5/10/20 3:18:26:795 UTC] 000000a1 WSCredentialT >  getCacheKeyFromHashtable Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:795 UTC] 000000a1 WSCredentialT <  getCacheKeyFromHashtable Exit
                                 <null>
[5/10/20 3:18:26:796 UTC] 000000a1 WSCredentialT >  Did not find cacheKeyFromHashtable Entry
[5/10/20 3:18:26:797 UTC] 000000a1 WSCredentialT 3   Got some private credentials to iterate through.
[5/10/20 3:18:26:797 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:798 UTC] 000000a1 Authenticatio 3   No unique cache key found in token.
[5/10/20 3:18:26:798 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:799 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:800 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:800 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:801 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:801 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:802 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:803 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID returns null for uniqueID. Exit
[5/10/20 3:18:26:803 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID null Exit
[5/10/20 3:18:26:804 UTC] 000000a1 wsMapDefaultI >  setCookieIfEnabled(), cookie enabled: false ssoEnabled: true , httpreq exist: false , httpres exist: false Entry
[5/10/20 3:18:26:804 UTC] 000000a1 wsMapDefaultI <  setCookieIfEnabled(), cookie(s) added: false Exit
[5/10/20 3:18:26:805 UTC] 000000a1 wsMapDefaultI 3   Change committed!
[5/10/20 3:18:26:805 UTC] 000000a1 wsMapDefaultI >  cleanupSharedState() Entry
[5/10/20 3:18:26:806 UTC] 000000a1 wsMapDefaultI 3   Start removing AuthorizationToken, AuthenticationToken, SingleSignonToken, and KRBAuthnToken from the shared state.
[5/10/20 3:18:26:807 UTC] 000000a1 wsMapDefaultI 3   Removed.
[5/10/20 3:18:26:807 UTC] 000000a1 wsMapDefaultI <  cleanupSharedState() Exit
[5/10/20 3:18:26:808 UTC] 000000a1 wsMapDefaultI <  commit() Exit
[5/10/20 3:18:26:808 UTC] 000000a1 JaasLoginHelp <  jaas_login(realm,certChain, auth_mech) for web Exit
[5/10/20 3:18:26:809 UTC] 000000a1 ContextManage >  processSubjectForPropagationAfterLogin Entry
                                 system.WEB_INBOUND
                                 <malformed parameter>
[5/10/20 3:18:26:809 UTC] 000000a1 WSCredentialI >  isForwardable Entry
[5/10/20 3:18:26:810 UTC] 000000a1 WSCredentialI <  isForwardable Exit
                                 true
[5/10/20 3:18:26:811 UTC] 000000a1 ContextManage 3   Getting SSO token from Subject.
[5/10/20 3:18:26:811 UTC] 000000a1 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:18:26:812 UTC] 000000a1 SubjectHelper 3   Found default SSO token.
[5/10/20 3:18:26:812 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:813 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:814 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:814 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:815 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:815 UTC] 000000a1 LTPADigSignat 3   sign.key.cache.size:4 ll:4 l2:4
[5/10/20 3:18:26:816 UTC] 000000a1 LTPACrypto    3   crypto.map.size=5
[5/10/20 3:18:26:817 UTC] 000000a1 LTPACrypto    3   crypto.caching failed:612
[5/10/20 3:18:26:818 UTC] 000000a1 LTPACrypto    3   using CRT
[5/10/20 3:18:26:821 UTC] 000000a1 LTPADigSignat 3   sign [7/4]added:expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealmtrue
[5/10/20 3:18:26:821 UTC] 000000a1 LTPADigSignat 3   signature:#{?.???U?J????t????dy?f?
0??7???W??D??A???Iv?????????b??Fw?m
}??#??V?o??C?6J???????4?1g??O??@i2;i??V?3??{
:<[??W?k{
[5/10/20 3:18:26:822 UTC] 000000a1 LTPAToken2    3   sign()
   data: expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:823 UTC] 000000a1 LTPAToken2    3   sign()
   signature: 237b0e9c2e8ec19a0255d14aa3b09d8a74ffe9f98f647998669b0a30807f8d37e73f1683578ea14485121a0bfe41caa9ce4976e6fbd0c7183f8bc8f891628d19b44677bb6d0a7df4c523928656e06fa8a612439c364ac2df3fc0e588b734963167cc8e4fc8e74069323b6997fb56ce3390bf7b150a3a3c0f5b11f78057976b7b
[5/10/20 3:18:26:823 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:824 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:825 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:826 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:826 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:827 UTC] 000000a1 LTPAToken2    3   encrypt.key.cache.size:4 ell:4 el2:4
[5/10/20 3:18:26:828 UTC] 000000a1 LTPAToken2    3   encrypt()
   ud: expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:829 UTC] 000000a1 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:829 UTC] 000000a1 LTPAToken2    3   tokenData before encrypt: %1589087940000%I3sOnC6OwZoCVdFKo7CdinT/6fmPZHmYZpsKMIB/jTfnPxaDV46hRIUSGgv+Qcqpzkl25vvQxxg/i8j4kWKNGbRGd7ttCn30xSOShlbgb6imEkOcNkrC3z/A5Yi3NJYxZ8yOT8jnQGkyO2mX+1bOM5C/exUKOjwPWxH3gFeXa3s=
[5/10/20 3:18:26:830 UTC] 000000a1 LTPAToken2    3   encrypt()
   toBeEnc: expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm%1589087940000%I3sOnC6OwZoCVdFKo7CdinT/6fmPZHmYZpsKMIB/jTfnPxaDV46hRIUSGgv+Qcqpzkl25vvQxxg/i8j4kWKNGbRGd7ttCn30xSOShlbgb6imEkOcNkrC3z/A5Yi3NJYxZ8yOT8jnQGkyO2mX+1bOM5C/exUKOjwPWxH3gFeXa3s=
[5/10/20 3:18:26:831 UTC] 000000a1 LTPACrypto    3   Cipher used to encrypt: AES/CBC/PKCS5Padding
[5/10/20 3:18:26:831 UTC] 000000a1 LTPACrypto    3   Data size: 490
[5/10/20 3:18:26:832 UTC] 000000a1 LTPACrypto    3   Key size: 24
[5/10/20 3:18:26:833 UTC] 000000a1 LTPACrypto    3   The Provider Cipher used to encrypt: IBMJCE version 1.8
[5/10/20 3:18:26:833 UTC] 000000a1 LTPACrypto    3   The Algoritm Cipher used to encrypt: AES/CBC/PKCS5Padding
[5/10/20 3:18:26:834 UTC] 000000a1 LTPACrypto    >  getIVS16 Entry
[5/10/20 3:18:26:835 UTC] 000000a1 LTPACrypto    >  getIVS Entry
[5/10/20 3:18:26:835 UTC] 000000a1 LTPACrypto    3   size:16 key:e183160ae3be722d5bae150ef57a9ec86cf39ff5b44fc90e
[5/10/20 3:18:26:836 UTC] 000000a1 LTPACrypto    <  getIVS Exit
[5/10/20 3:18:26:836 UTC] 000000a1 LTPACrypto    3   encrypt() Cipher.doFinal()
   data: expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm%1589087940000%I3sOnC6OwZoCVdFKo7CdinT/6fmPZHmYZpsKMIB/jTfnPxaDV46hRIUSGgv+Qcqpzkl25vvQxxg/i8j4kWKNGbRGd7ttCn30xSOShlbgb6imEkOcNkrC3z/A5Yi3NJYxZ8yOT8jnQGkyO2mX+1bOM5C/exUKOjwPWxH3gFeXa3s=
[5/10/20 3:18:26:837 UTC] 000000a1 LTPACrypto    3   Total encryption time: 6
[5/10/20 3:18:26:838 UTC] 000000a1 LTPAToken2    3   encrypt [4/2]added:%1589087940000%I3sOnC6OwZoCVdFKo7CdinT/6fmPZHmYZpsKMIB/jTfnPxaDV46hRIUSGgv+Qcqpzkl25vvQxxg/i8j4kWKNGbRGd7ttCn30xSOShlbgb6imEkOcNkrC3z/A5Yi3NJYxZ8yOT8jnQGkyO2mX+1bOM5C/exUKOjwPWxH3gFeXa3s=
[5/10/20 3:18:26:838 UTC] 000000a1 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:839 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:839 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:840 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:841 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:841 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:842 UTC] 000000a1 LTPAToken2    3   sign.key.cache.size:5 vll:5 el2:5
[5/10/20 3:18:26:843 UTC] 000000a1 LTPACrypto    3   v.size:6
[5/10/20 3:18:26:843 UTC] 000000a1 LTPACrypto    3   verify.caching failed:468
[5/10/20 3:18:26:844 UTC] 000000a1 LTPAToken2    3   verify()
   data: expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:845 UTC] 000000a1 LTPAToken2    3   verify()
   publicKey: com.ibm.ws.security.ltpa.LTPAPublicKey@9b4c9c26
[5/10/20 3:18:26:845 UTC] 000000a1 LTPAToken2    3   verify()
   signature: 237b0e9c2e8ec19a0255d14aa3b09d8a74ffe9f98f647998669b0a30807f8d37e73f1683578ea14485121a0bfe41caa9ce4976e6fbd0c7183f8bc8f891628d19b44677bb6d0a7df4c523928656e06fa8a612439c364ac2df3fc0e588b734963167cc8e4fc8e74069323b6997fb56ce3390bf7b150a3a3c0f5b11f78057976b7b
[5/10/20 3:18:26:846 UTC] 000000a1 LTPAToken2    3   verify() result: true
[5/10/20 3:18:26:846 UTC] 000000a1 LTPAToken2    3   verify [5/3]added:expire:1589087940000$host:localhost$java.naming.provider.url:corbaloc\:iiop\:localhost\:2809/WsnAdminNameService$port:8880$process.serverName:DefaultCell01\:DefaultNode01\:server1$security.authMechOID:oid\:1.3.18.0.2.30.2$type:SOAP$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm123107-10587-128-917911560581021123-65-11251-5086-5-105105595010564-25-5679-114-5210349-10652-73-120-27-6463-33-627454-1006718-90-88111-3286-122-11035-59-1212510109-6911970-7625-11598-111-8-56-1176324-57-48-5-2611873-50-87-5465-2112618-12368-95-11487-1252263-2555-115127-1284810-101102-104121100-113-7-23-1116-118-99-80-9374-47852-102-63-11446-100141233510910897101821001011159766101108105707773871161081179710210110061111441101051091009711511961100105117471091089710182100101115976610110810570777387116108117971021011005892114101115117581173680657983581011121211163650464851465046484656494651464958921001051115868737910499101771041161179746121116105114117991011153649114101118114101115589249481011001117811610811797102101685892494810810810167116108117971021016858101109977811410111811410111546115115101991111141123648565656581161141111123610199105118114101831011099778110105109100651101158747574856505892116115111104108979911110858921121111051055892991111089798114111995810811411746114101100105118111114112461031101051099711046971189710636116115111104108979911110858116115111104364848484852575556485756534958101114105112120101
[5/10/20 3:18:26:847 UTC] 000000a1 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:848 UTC] 000000a1 LTPAToken2    3   security.authMechOID: oid:1.3.18.0.2.30.2 u: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm port: 8880 process.serverName: DefaultCell01:DefaultNode01:server1 expire: 1589087940000 host: localhost java.naming.provider.url: corbaloc:iiop:localhost:2809/WsnAdminNameService type: SOAP Expiration time: 20.05.10 05:19:00:000 UTC
[5/10/20 3:18:26:848 UTC] 000000a1 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:18:26:849 UTC] 000000a1 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:18:26:849 UTC] 000000a1 WSCredentialI >  getExpiration Entry
[5/10/20 3:18:26:850 UTC] 000000a1 WSCredentialI <  getExpiration Exit
                                 1589087940000
[5/10/20 3:18:26:850 UTC] 000000a1 ContextManage 3   timeToLiveSeconds: 7233
[5/10/20 3:18:26:851 UTC] 000000a1 ContextManage 3   current_time: 1589080706850
[5/10/20 3:18:26:851 UTC] 000000a1 ContextManage 3   expiration_time: 1589087940000
[5/10/20 3:18:26:852 UTC] 000000a1 ContextManage 3   timeToLiveMillis: 7233150
[5/10/20 3:18:26:853 UTC] 000000a1 ContextManage 3   timeToLiveSeconds: 7233
[5/10/20 3:18:26:853 UTC] 000000a1 ContextManage 3   Checking DRS using SSO token.
[5/10/20 3:18:26:854 UTC] 000000a1 ContextManage >  getDistributedObject Entry
                                 com.ibm.ws.security.util.ByteArray@89d8c725
[5/10/20 3:18:26:855 UTC] 000000a1 WSCredentialT >  getDistributedObject: com.ibm.ws.security.util.ByteArray@89d8c725 Entry
[5/10/20 3:18:26:855 UTC] 000000a1 WSCredentialT <  getDistributedObject Exit
[5/10/20 3:18:26:856 UTC] 000000a1 ContextManage <  getDistributedObject Exit
                                 <null>
[5/10/20 3:18:26:856 UTC] 000000a1 ContextManage 3   Creating new opaque token.
[5/10/20 3:18:26:857 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:858 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.CSI.rmiInboundPropagationEnabled
[5/10/20 3:18:26:858 UTC] 000000a1 ContextManage 3   Returning: true
[5/10/20 3:18:26:859 UTC] 000000a1 AbstractToken 3   Checking validity of token com.ibm.ws.security.token.SingleSignonTokenImpl
[5/10/20 3:18:26:859 UTC] 000000a1 LTPAToken2    3   Expiration returned from expire field in token: Sun May 10 05:19:00 UTC 2020
[5/10/20 3:18:26:860 UTC] 000000a1 AbstractToken 3   Time left for token: 7233141
[5/10/20 3:18:26:861 UTC] 000000a1 AbstractToken 3   token is valid.
[5/10/20 3:18:26:861 UTC] 000000a1 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:862 UTC] 000000a1 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:862 UTC] 000000a1 LTPAToken     3   userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm formatted userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:863 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:864 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:864 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:865 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:866 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:866 UTC] 000000a1 LTPADigSignat 3   sign.key.cache.size:1 ll:1 l2:1
[5/10/20 3:18:26:867 UTC] 000000a1 LTPACrypto    3   crypto.map.size=6
[5/10/20 3:18:26:868 UTC] 000000a1 LTPACrypto    3   crypto.caching successful:91
[5/10/20 3:18:26:868 UTC] 000000a1 LTPADigSignat 3   sign [8/4]added:u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealmfalse
[5/10/20 3:18:26:869 UTC] 000000a1 LTPADigSignat 3   signature: ?p????L[7?J???C5T8????????Kxj??.??QD??1?`?<??3??	o?F?
A?f??Tp??=BQ??x???? ????"%?.?i???u??1????y	?L???????x8?6??
[5/10/20 3:18:26:870 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:870 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:871 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:871 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:872 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:873 UTC] 000000a1 LTPAToken     3   encrypt.key.cache.size:1 ell:1 el2:1
[5/10/20 3:18:26:873 UTC] 000000a1 LTPAToken     3   userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm formatted userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:874 UTC] 000000a1 LTPAToken     3   userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm userData for encryption: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:875 UTC] 000000a1 LTPAToken     3   tokenData before encrypt: %1589087940000%AJJw7IGl3UxbN/9Kp6mgQzVUOJz8yxMV/7PXpelLeGoWyNUuiPZRRMiJMetgrAY8//wz9oMJb7BGygpBrWb18BtUcNK2BD1CUc7eeAfKf/XOsgCIvL+iIiXwLoZpzM7Edb7IMZQNEcyPvnkJvkzz+dSBGIG2GBQFzng4iTbDDrM=
[5/10/20 3:18:26:875 UTC] 000000a1 LTPAToken     3   whole data before encrypt: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm%1589087940000%AJJw7IGl3UxbN/9Kp6mgQzVUOJz8yxMV/7PXpelLeGoWyNUuiPZRRMiJMetgrAY8//wz9oMJb7BGygpBrWb18BtUcNK2BD1CUc7eeAfKf/XOsgCIvL+iIiXwLoZpzM7Edb7IMZQNEcyPvnkJvkzz+dSBGIG2GBQFzng4iTbDDrM=
[5/10/20 3:18:26:876 UTC] 000000a1 LTPACrypto    3   Cipher used to encrypt: DESede/ECB/PKCS5Padding
[5/10/20 3:18:26:877 UTC] 000000a1 LTPACrypto    3   Data size: 258
[5/10/20 3:18:26:877 UTC] 000000a1 LTPACrypto    3   Key size: 24
[5/10/20 3:18:26:878 UTC] 000000a1 LTPACrypto    3   Total encryption time: 2
[5/10/20 3:18:26:879 UTC] 000000a1 LTPAToken     3   encrypt [4/2]added:%1589087940000%AJJw7IGl3UxbN/9Kp6mgQzVUOJz8yxMV/7PXpelLeGoWyNUuiPZRRMiJMetgrAY8//wz9oMJb7BGygpBrWb18BtUcNK2BD1CUc7eeAfKf/XOsgCIvL+iIiXwLoZpzM7Edb7IMZQNEcyPvnkJvkzz+dSBGIG2GBQFzng4iTbDDrM=
[5/10/20 3:18:26:880 UTC] 000000a1 LTPAServerObj >  getLTPAServer Entry
[5/10/20 3:18:26:881 UTC] 000000a1 LTPAServerObj 3   getLTPAServer using domainId admin
[5/10/20 3:18:26:882 UTC] 000000a1 LTPAServerObj 3   getLTPAServer found LTPAServerObject in cache
[5/10/20 3:18:26:882 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:883 UTC] 000000a1 LTPAServerObj <  getLTPAServer LTPAServerObject: 948041649 domainId: admin Exit
[5/10/20 3:18:26:883 UTC] 000000a1 LTPAToken     3   verify.key.cache.size:1 vll:1 vl2:1
[5/10/20 3:18:26:884 UTC] 000000a1 LTPAToken     3   userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm formatted userData: u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:885 UTC] 000000a1 LTPACrypto    3   v.size:7
[5/10/20 3:18:26:885 UTC] 000000a1 LTPACrypto    3   verify.caching successful:-10
[5/10/20 3:18:26:886 UTC] 000000a1 LTPAToken     3   verify [4/2]added:u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm-7714-6154-11956120-5052024-74-12724-127-44-7-1376-669121-66-113-521713-10849-56-66117-60-50-52105-12246-163734-94-65-68-1200-78-50-11127-547120-34-508166614-74-461128427-16-11102-836510-5470-801119-125-1051-4-1606-8496-2149-119-566881-10-12046-43-562210612075-23-91-41-77-12119-53-4-10056845367-96-87-8974-1559176-35-91-127-20112-11001091089710182100101115976610110810570777387116108117971021011006111144110105109100971151196110010511747109108971018210010111597661011081057077738711610811797102101100589211410111511758117
[5/10/20 3:18:26:886 UTC] 000000a1 LTPAToken     3   u: user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm, Expiration time: 20.05.10 05:19:00:000 UTC
[5/10/20 3:18:26:887 UTC] 000000a1 LTPAToken     3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:888 UTC] 000000a1 AbstractToken 3   Checking validity of token com.ibm.ws.security.token.AuthorizationTokenImpl
[5/10/20 3:18:26:888 UTC] 000000a1 AbstractToken 3   Time left for token: 7199842
[5/10/20 3:18:26:889 UTC] 000000a1 AbstractToken 3   token is valid.
[5/10/20 3:18:26:889 UTC] 000000a1 AuthzPropToke 3   tokenString before encode: 1589087906730|com.ibm.wsspi.security.cred.expiration:1589087940000$com.ibm.wsspi.security.cred.forwardable:true$com.ibm.wsspi.security.cred.longSecurityName:uid=wsadmin,o=defaultWIMFileBasedRealm$com.ibm.wsspi.security.cred.oid:oid\:1.3.18.0.2.30.2$com.ibm.wsspi.security.cred.primaryGroupId:$com.ibm.wsspi.security.cred.realm:defaultWIMFileBasedRealm$com.ibm.wsspi.security.cred.securityName:wsadmin$com.ibm.wsspi.security.cred.uniqueId:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm$u:user\:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:890 UTC] 000000a1 AuthzPropToke 3   com.ibm.wsspi.security.cred.oid: [Ljava.lang.String;@da4a4259, u: [Ljava.lang.String;@1383b0ad, com.ibm.wsspi.security.cred.securityName: [Ljava.lang.String;@9c738eb7, com.ibm.wsspi.security.cred.primaryGroupId: [Ljava.lang.String;@3afa0de5, com.ibm.wsspi.security.cred.realm: [Ljava.lang.String;@97f1420a, com.ibm.wsspi.security.cred.uniqueId: [Ljava.lang.String;@e90df9da, com.ibm.wsspi.security.cred.expiration: [Ljava.lang.String;@ca7c7c09, com.ibm.wsspi.security.cred.forwardable: [Ljava.lang.String;@fa880162, com.ibm.wsspi.security.cred.longSecurityName: [Ljava.lang.String;@44ccdb15, Expiration time: 20.05.10 05:18:26:730 UTC
[5/10/20 3:18:26:891 UTC] 000000a1 AuthzPropToke 3   Returning existing encoded bytes from token object.
[5/10/20 3:18:26:891 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:892 UTC] 000000a1 WSCredentialT >  getForwardablePropagationTokensFromContext Entry
[5/10/20 3:18:26:892 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:893 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:18:26:894 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:18:26:894 UTC] 000000a1 WSCredentialT 3   No propagation token present on the thread.
[5/10/20 3:18:26:895 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:895 UTC] 000000a1 WSCredentialT >  createUniqueIDFromAllTokens Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:896 UTC] 000000a1 WSCredentialT >  createSubjectUniqueID Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:897 UTC] 000000a1 WSCredentialT 3   Getting cacheKeyFromHashtable
[5/10/20 3:18:26:897 UTC] 000000a1 WSCredentialT >  getCacheKeyFromHashtable Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:898 UTC] 000000a1 WSCredentialT <  getCacheKeyFromHashtable Exit
                                 <null>
[5/10/20 3:18:26:899 UTC] 000000a1 WSCredentialT >  Did not find cacheKeyFromHashtable Entry
[5/10/20 3:18:26:899 UTC] 000000a1 WSCredentialT 3   Got some private credentials to iterate through.
[5/10/20 3:18:26:900 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:901 UTC] 000000a1 Authenticatio 3   No unique cache key found in token.
[5/10/20 3:18:26:901 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:902 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:902 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:903 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:903 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:904 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:905 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:905 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID returns null for uniqueID. Exit
[5/10/20 3:18:26:906 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID null Exit
[5/10/20 3:18:26:906 UTC] 000000a1 WSCredentialI >  getRealmUniqueSecurityName Entry
[5/10/20 3:18:26:907 UTC] 000000a1 WSCredentialI <  getRealmUniqueSecurityName Exit
[5/10/20 3:18:26:907 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:908 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:909 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:909 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:910 UTC] 000000a1 WSCredentialI <  getRealmUniqueSecurityName Exit
                                 defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:910 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:911 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:18:26:911 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:18:26:912 UTC] 000000a1 WSCredentialT <  createUniqueIDFromAllTokens: no PropTokens set on thread: defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:913 UTC] 000000a1 WSCredentialT <  createUniqueIDFromAllToken defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:913 UTC] 000000a1 WSCredentialI >  getTable Entry
[5/10/20 3:18:26:914 UTC] 000000a1 WSCredentialI <  getTable Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, wssecurity.identity_name=ClientAuthenticationToken, com.ibm.wsspi.security.cred.refreshGroups=true, wssecurity.identity_value=[B@3681c8a8}
[5/10/20 3:18:26:915 UTC] 000000a1 ContextManage 3   Adding opaque token to distributed cache with timeToLive 7233 seconds.
[5/10/20 3:18:26:915 UTC] 000000a1 WSCredentialT >  putDistributedObject:  Entry
                                 com.ibm.ws.security.util.ByteArray@89d8c725
                                 [B@e45265e1
                                 7233
[5/10/20 3:18:26:916 UTC] 000000a1 WSCredentialT <  putDistributedObject Exit
[5/10/20 3:18:26:916 UTC] 000000a1 ContextManage 3   Input token was null, not adding to DRS.
[5/10/20 3:18:26:917 UTC] 000000a1 SubjectHelper <  getKerberosAuthnTokenFromSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:917 UTC] 000000a1 SubjectHelper 3   Could not find default KRBAuthnToken.
[5/10/20 3:18:26:918 UTC] 000000a1 ContextManage 3   krbAuthnToken token was null, not adding to DRS.
[5/10/20 3:18:26:918 UTC] 000000a1 ContextManage <  processSubjectForPropagationAfterLogin Exit
[5/10/20 3:18:26:919 UTC] 000000a1 ContextManage >  insertToCache Entry
                                 [Ljava.security.cert.X509Certificate;@31a741d1
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

                                 <null>
[5/10/20 3:18:26:920 UTC] 000000a1 ContextManage 3   Insert to cache using certificate hash=926034681
[5/10/20 3:18:26:920 UTC] 000000a1 AuthCache     >  insert Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

                                 <null>
                                 <null>
                                 [Ljava.lang.Object;@a6bc8eee
[5/10/20 3:18:26:921 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:922 UTC] 000000a1 WSCredentialI >  getCredentialToken Entry
[5/10/20 3:18:26:922 UTC] 000000a1 LTPAToken     3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:923 UTC] 000000a1 WSCredentialI 3   Initializing credential token
                                 [B@c045c575
[5/10/20 3:18:26:924 UTC] 000000a1 WSCredentialI <  getCredentialToken Exit
[5/10/20 3:18:26:924 UTC] 000000a1 Cache         >  insert Entry
                                 com.ibm.ws.security.util.ByteArray@37344767
                                 com.ibm.ws.security.auth.CacheObject@e7efd7fb
[5/10/20 3:18:26:925 UTC] 000000a1 Cache         >  isEvictionRequired Entry
[5/10/20 3:18:26:925 UTC] 000000a1 Cache         3   The current cache size is 11( 2, 9, 0)
[5/10/20 3:18:26:926 UTC] 000000a1 Cache         <  isEvictionRequired Exit
                                 false
[5/10/20 3:18:26:926 UTC] 000000a1 Cache         <  insert Exit
[5/10/20 3:18:26:927 UTC] 000000a1 SubjectHelper 3   Processing SSO token with name: LtpaToken
[5/10/20 3:18:26:927 UTC] 000000a1 SubjectHelper 3   Found default SSO token.
[5/10/20 3:18:26:928 UTC] 000000a1 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:928 UTC] 000000a1 Cache         >  insert Entry
                                 com.ibm.ws.security.util.ByteArray@89d8c725
                                 com.ibm.ws.security.auth.CacheObject@e7efd7fb
[5/10/20 3:18:26:929 UTC] 000000a1 Cache         >  isEvictionRequired Entry
[5/10/20 3:18:26:929 UTC] 000000a1 Cache         3   The current cache size is 12( 3, 9, 0)
[5/10/20 3:18:26:930 UTC] 000000a1 Cache         <  isEvictionRequired Exit
                                 false
[5/10/20 3:18:26:930 UTC] 000000a1 Cache         <  insert Exit
[5/10/20 3:18:26:931 UTC] 000000a1 SubjectHelper <  getKerberosAuthnTokenFromSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:932 UTC] 000000a1 SubjectHelper 3   Could not find default KRBAuthnToken.
[5/10/20 3:18:26:932 UTC] 000000a1 WSCredentialT >  getInstance() Entry
[5/10/20 3:18:26:933 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:933 UTC] 000000a1 WSCredentialT <  getInstance() -1842373918 Exit
[5/10/20 3:18:26:934 UTC] 000000a1 WSCredentialT >  getCacheKeyFromHashtable Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:935 UTC] 000000a1 WSCredentialT <  getCacheKeyFromHashtable Exit
                                 <null>
[5/10/20 3:18:26:935 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:936 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:936 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:937 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:937 UTC] 000000a1 Cache         >  insert Entry
                                 defaultWIMFileBasedRealm:wsadmin
                                 com.ibm.ws.security.auth.CacheObject@e7efd7fb
[5/10/20 3:18:26:938 UTC] 000000a1 Cache         >  isEvictionRequired Entry
[5/10/20 3:18:26:939 UTC] 000000a1 Cache         3   The current cache size is 13( 4, 9, 0)
[5/10/20 3:18:26:939 UTC] 000000a1 Cache         <  isEvictionRequired Exit
                                 false
[5/10/20 3:18:26:940 UTC] 000000a1 Cache         <  insert Exit
[5/10/20 3:18:26:941 UTC] 000000a1 WSCredentialT >  getInstance() Entry
[5/10/20 3:18:26:941 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:942 UTC] 000000a1 WSCredentialT <  getInstance() -1842373918 Exit
[5/10/20 3:18:26:942 UTC] 000000a1 WSCredentialT >  createSubjectUniqueID Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:943 UTC] 000000a1 WSCredentialT 3   Getting cacheKeyFromHashtable
[5/10/20 3:18:26:943 UTC] 000000a1 WSCredentialT >  getCacheKeyFromHashtable Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:944 UTC] 000000a1 WSCredentialT <  getCacheKeyFromHashtable Exit
                                 <null>
[5/10/20 3:18:26:945 UTC] 000000a1 WSCredentialT >  Did not find cacheKeyFromHashtable Entry
[5/10/20 3:18:26:945 UTC] 000000a1 WSCredentialT 3   Got some private credentials to iterate through.
[5/10/20 3:18:26:946 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:946 UTC] 000000a1 Authenticatio 3   No unique cache key found in token.
[5/10/20 3:18:26:947 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:947 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:948 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:948 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:949 UTC] 000000a1 WSCredentialT 3   Getting uniqueID from token.
[5/10/20 3:18:26:950 UTC] 000000a1 AbstractToken 3   No unique cache key found in token.
[5/10/20 3:18:26:950 UTC] 000000a1 WSCredentialT 3   Token found, ID/Principal: 
                                 <null>
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:951 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID returns null for uniqueID. Exit
[5/10/20 3:18:26:951 UTC] 000000a1 WSCredentialT <  createSubjectUniqueID null Exit
[5/10/20 3:18:26:952 UTC] 000000a1 WSCredentialI >  get Entry
                                 security.login_uid
[5/10/20 3:18:26:952 UTC] 000000a1 WSCredentialI <  get Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, wssecurity.identity_name=ClientAuthenticationToken, com.ibm.wsspi.security.cred.refreshGroups=true, wssecurity.identity_value=[B@3681c8a8}
[5/10/20 3:18:26:953 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:26:953 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:26:954 UTC] 000000a1 WSCredentialI >  getUniqueSecurityName Entry
[5/10/20 3:18:26:955 UTC] 000000a1 WSCredentialI <  getUniqueSecurityName Exit
                                 uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:955 UTC] 000000a1 Cache         >  insert Entry
                                 defaultWIMFileBasedRealm:uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.auth.CacheObject@e7efd7fb
[5/10/20 3:18:26:956 UTC] 000000a1 Cache         >  isEvictionRequired Entry
[5/10/20 3:18:26:956 UTC] 000000a1 Cache         3   The current cache size is 14( 5, 9, 0)
[5/10/20 3:18:26:957 UTC] 000000a1 Cache         <  isEvictionRequired Exit
                                 false
[5/10/20 3:18:26:957 UTC] 000000a1 Cache         <  insert Exit
[5/10/20 3:18:26:958 UTC] 000000a1 AuthCache     3   Additional lookup keys size: 1
[5/10/20 3:18:26:959 UTC] 000000a1 AuthCache     3   Additional lookup value: 926034681
[5/10/20 3:18:26:959 UTC] 000000a1 Cache         >  insert Entry
                                 926034681
                                 com.ibm.ws.security.auth.CacheObject@e7efd7fb
[5/10/20 3:18:26:960 UTC] 000000a1 Cache         >  isEvictionRequired Entry
[5/10/20 3:18:26:960 UTC] 000000a1 Cache         3   The current cache size is 15( 6, 9, 0)
[5/10/20 3:18:26:961 UTC] 000000a1 Cache         <  isEvictionRequired Exit
                                 false
[5/10/20 3:18:26:961 UTC] 000000a1 Cache         <  insert Exit
[5/10/20 3:18:26:962 UTC] 000000a1 ContextManage >  getPropagationTokens Entry
[5/10/20 3:18:26:962 UTC] 000000a1 ContextManage <  getPropagationTokens Exit
                                 <null>
[5/10/20 3:18:26:963 UTC] 000000a1 AuthCache     <  insert Exit
[5/10/20 3:18:26:964 UTC] 000000a1 ContextManage <  insertToCache Exit
[5/10/20 3:18:26:964 UTC] 000000a1 ContextManage <  login(realm, loginInfo, . . .) Exit
[5/10/20 3:18:26:965 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:26:965 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:26:966 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:26:967 UTC] 000000a1 ContextManage 3   Clearing propagation token from thread.
[5/10/20 3:18:26:967 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:968 UTC] 000000a1 WebAuthentica 3   Storing certificates in the credential
[5/10/20 3:18:26:969 UTC] 000000a1 WSCredentialI >  set Entry
                                 wssecurity.setAttributForIdentityAssertion
                                 
X.509 Cert Path: length = 1.
[
=========================================================Certificate 1 start.
[
[
  Version: V3
  Subject: CN=localhost, OU=DefaultCell01, OU=DefaultNode01, O=IBM, C=US
  Signature Algorithm: SHA256withRSA, OID = 1.2.840.113549.1.1.11

  Key:  IBMJCE RSA Public Key:
modulus:
17520673306128008109107368385324867824548819797098343175230231101712497740144051721343340743714228602714411087787681520175637343717766198972653132820893610949420530251886213838087763132913152400984756303406846533075844261708807614439798980961279378913659170764816368217981650429311760032469917162689442941313195381133695763283163083845463468561921730016718848413570205181260404041784281093139048061331891841232320914861463229410295043339027033064056714391290387948429555608359822798105527008972348482196028721544822856804322628064942396769682519835354976146287348681617901441752981245227804232830801148057028319768353
public exponent:
65537

  Validity: [From: Wed Mar 18 22:52:55 UTC 2020,
               To: Thu Mar 18 22:52:55 UTC 2021]
  Issuer: CN=localhost, OU=Root Certificate, OU=DefaultCell01, OU=DefaultNode01, O=IBM, C=US
  SerialNumber: [494193042360]

Certificate Extensions: 2
[1]: ObjectId: 2.5.29.14 Criticality=false
SubjectKeyIdentifier [
KeyIdentifier [
0000: 49 a6 00 54 b2 65 53 0f                           I..T.eS.
]
]

[2]: ObjectId: 2.5.29.17 Criticality=false
SubjectAlternativeName [
[RFC822Name: ProfileUUID:AppSrv01-BASE-2471615d-da77-4c5a-86c3-10ca3a24c7cd]]

]
  Algorithm: [SHA256withRSA]
  Signature:
0000: a6 45 49 8c d7 73 79 9a  bb 8c e9 c7 62 75 fa 24  .EI..sy.....bu..
0010: 0d 93 81 08 f8 08 c0 fb  32 fd cd 5f f5 84 59 a6  ........2.....Y.
0020: 12 79 6f f4 55 77 ed 5c  5c fd 9b 50 1d bb c2 70  .yo.Uw.....P...p
0030: ba ca 37 20 98 29 5c ef  87 d4 8b fc 89 0b 5b 26  ..7.............
0040: a7 b9 d2 5f 91 9d dd c8  0e fc a4 d4 8a 5b 8c fa  ................
0050: 7b 00 a6 6c df 58 87 93  76 6b 1d ca 7f 2d 60 7e  ...l.X..vk......
0060: 3e b7 91 ab 4c 3a 7c aa  80 dc e3 9b 5b 68 7a 59  ....L........hzY
0070: 72 1f 83 af 41 c0 89 e9  b7 11 65 d0 d5 f9 b5 9d  r...A.....e.....
0080: 73 2f 1d 3e df 03 05 ac  85 c8 e8 51 a4 2d 10 94  s..........Q....
0090: 00 07 cc 3b 6d 80 9d 7f  e8 b6 f3 9c 1a 83 02 bc  ....m...........
00a0: bf 07 a2 63 a7 b5 87 02  8b 28 08 76 b9 97 52 61  ...c.......v..Ra
00b0: e6 3c 19 c6 50 47 eb 09  ee 93 1a 20 06 78 56 e3  ....PG.......xV.
00c0: 8d 7b a9 b6 11 7d b4 18  ec ad 8c df 7a 69 a5 2d  ............zi..
00d0: 9c 12 50 31 db 9c 73 87  b3 60 36 92 0c 2a a4 8a  ..P1..s...6.....
00e0: e3 f0 60 85 87 5d b0 e4  f6 2f 33 fc 97 e6 5b af  ..........3.....
00f0: 5a 7f 48 96 d4 5b a5 0f  6c 16 5e 37 58 55 60 bf  Z.H.....l..7XU..

]
=========================================================Certificate 1 end.



]
[5/10/20 3:18:26:970 UTC] 000000a1 WSCredentialI <  set Exit
                                 {com.ibm.wsspi.security.cred.verifyUser=true, wssecurity.identity_name=ClientAuthenticationToken, com.ibm.wsspi.security.cred.refreshGroups=true, wssecurity.identity_value=[B@3681c8a8}
[5/10/20 3:18:26:970 UTC] 000000a1 WebCollaborat >  setPrivateAttributes Entry
                                 AUTH_TYPE
                                 CLIENT_CERT
[5/10/20 3:18:26:971 UTC] 000000a1 WebCollaborat 3   setPrivateAttributes setting key: AUTH_TYPE to: CLIENT_CERT
[5/10/20 3:18:26:971 UTC] 000000a1 WebCollaborat <  setPrivateAttributes Exit
[5/10/20 3:18:26:972 UTC] 000000a1 WebAuthentica <  handleCertificates Exit
[5/10/20 3:18:26:972 UTC] 000000a1 WebAttributes >  createCookiesStatic Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

                                 <null>
                                 <null>
[5/10/20 3:18:26:973 UTC] 000000a1 WebAttributes 3   Propagation enabled, adding new cookie.
[5/10/20 3:18:26:974 UTC] 000000a1 WebAttributes >  getSingleSignonTokensFromSubject Entry
[5/10/20 3:18:26:975 UTC] 000000a1 WebAttributes <  getSingleSignonTokensFromSubject Exit
[5/10/20 3:18:26:976 UTC] 000000a1 LTPAToken2    3   Returning existing encrypted bytes from token object.
[5/10/20 3:18:26:976 UTC] 000000a1 WebAttributes 3   createCookiesStatic SSO token name: LtpaToken
[5/10/20 3:18:26:977 UTC] 000000a1 WebAttributes >  addCookieToList Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 LtpaToken2
                                 [B@f191ca7b
                                 []
                                 false
[5/10/20 3:18:26:977 UTC] 000000a1 WebAttributes 3   Setting SSO cookie with name: LtpaToken2 logout false, value: RML78T79m5Q9Qq4ZTzTOK28JfQPkyzUzx4X9HW7legKZWXvMCtI8rAbYxZeVawnGKKskSYLVH7qzBrXvZN0DsJuqpRD8OU33VKx6zz182XfYwTK+Arim/MeRpPZBWMrA4hMYpWTpG5f5KpTQR8SnsTlnfkZM0pN69BH7xveI9SyLlSj+TshwAP3ZGDv+HaLcLzPIfkmlUZ8rqi3sEQD5IFFr5EMnqE2DLGXlWsQ87frMAzcrDyGnOD/BrBftXUfoe8RMtaDA4nKlv/K+30uluNLl2PgbMvjB+DKK/dwj3J3wqxMkboodxmw75QvBdTQqbLc1VHLReCkYXCutjHIidnmiikWEgwNHPeLB6i3/e/8TrndsI1mTbfhD/F8CqQ3616RNIckV0283I2+BHlr6Ub3bFc29tLQtdHpY7W0Afchm0ajQIm/Agt+XJ50ec5QmLaDGlzrvrbwkR6j6bZFEwnB2QRct4kux5tYZHQCFeBPnoaN2G5Mc7RmQ6+gHZO1jH6/58FesNOQcON9lww+Wrxvdw1rOsV6TUycPH87xh8Up480tHujUMSvH38YkfM2UnoY655lXKsUtl7wSPF1ZpWhmDNc7gu6gZ1ymLag5uhPcJ29PThLADmDDDBtUSKpMrwLX2Nasq0aHlArujVZx2Q==
[5/10/20 3:18:26:978 UTC] 000000a1 WebAttributes 3   SSO domain setting is disabled 
[5/10/20 3:18:26:978 UTC] 000000a1 WebAttributes 3   Cookie value: RML78T79m5Q9Qq4ZTzTOK28JfQPkyzUzx4X9HW7legKZWXvMCtI8rAbYxZeVawnGKKskSYLVH7qzBrXvZN0DsJuqpRD8OU33VKx6zz182XfYwTK+Arim/MeRpPZBWMrA4hMYpWTpG5f5KpTQR8SnsTlnfkZM0pN69BH7xveI9SyLlSj+TshwAP3ZGDv+HaLcLzPIfkmlUZ8rqi3sEQD5IFFr5EMnqE2DLGXlWsQ87frMAzcrDyGnOD/BrBftXUfoe8RMtaDA4nKlv/K+30uluNLl2PgbMvjB+DKK/dwj3J3wqxMkboodxmw75QvBdTQqbLc1VHLReCkYXCutjHIidnmiikWEgwNHPeLB6i3/e/8TrndsI1mTbfhD/F8CqQ3616RNIckV0283I2+BHlr6Ub3bFc29tLQtdHpY7W0Afchm0ajQIm/Agt+XJ50ec5QmLaDGlzrvrbwkR6j6bZFEwnB2QRct4kux5tYZHQCFeBPnoaN2G5Mc7RmQ6+gHZO1jH6/58FesNOQcON9lww+Wrxvdw1rOsV6TUycPH87xh8Up480tHujUMSvH38YkfM2UnoY655lXKsUtl7wSPF1ZpWhmDNc7gu6gZ1ymLag5uhPcJ29PThLADmDDDBtUSKpMrwLX2Nasq0aHlArujVZx2Q==
[5/10/20 3:18:26:979 UTC] 000000a1 WebAttributes <  addCookieToList Exit
[5/10/20 3:18:26:979 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.ssoInteropModeEnabled default=false  (admin)  Entry
[5/10/20 3:18:26:980 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.ssoInteropModeEnabled  (admin)  val=false Exit
[5/10/20 3:18:26:980 UTC] 000000a1 WebAttributes <  createCookiesStatic: returning 1 cookie(s) to add to response. Exit
[5/10/20 3:18:26:981 UTC] 000000a1 WebAuthentica <  authenticate 4 Exit
                                 AuthenticationResult.SUCCESS
[5/10/20 3:18:26:982 UTC] 000000a1 SecurityAuthe 3   SecurityAuthenticationModule received an onWebAuthTime event
[5/10/20 3:18:26:982 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:983 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:26:984 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:984 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:26:985 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:985 UTC] 000000a1 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:18:26:986 UTC] 000000a1 ContextManage <  getPropagationToken Exit
                                 <null>
[5/10/20 3:18:26:986 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:26:987 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:26:987 UTC] 000000a1 ContextManage >  createPropagationToken Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:26:988 UTC] 000000a1 WSCredentialT >  createPropagationTokenFromWSCredential Entry
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:26:988 UTC] 000000a1 WSCredentialT >  getSecurityConfig Entry
[5/10/20 3:18:26:989 UTC] 000000a1 WSCredentialT <  getSecurityConfig Exit
                                 com.ibm.ws.security.config.SecurityConfigImpl@96672220 /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/config/cells/DefaultCell01/security.xml  (admin) 
[5/10/20 3:18:26:990 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:26:990 UTC] 000000a1 ContextManage 3   getProperty : com.ibm.CSI.CellNodeServer
[5/10/20 3:18:26:991 UTC] 000000a1 ContextManage 3   Returning: DefaultCell01:DefaultNode01:server1
[5/10/20 3:18:26:991 UTC] 000000a1 WSCredentialI >  getRealmSecurityName Entry
[5/10/20 3:18:26:992 UTC] 000000a1 WSCredentialI <  getRealmSecurityName Exit
                                 defaultWIMFileBasedRealm/wsadmin
[5/10/20 3:18:26:992 UTC] 000000a1 WSCredentialT 3   Creating propagation token using factory com.ibm.ws.security.ltpa.AuthzPropTokenFactory for caller: DefaultCell01:DefaultNode01:server1:defaultWIMFileBasedRealm/wsadmin, host: DefaultCell01:DefaultNode01:server1
[5/10/20 3:18:26:993 UTC] 000000a1 WSCredentialT >  getLTPAServerObject Entry
[5/10/20 3:18:26:994 UTC] 000000a1 LTPAServerObj <  getDomainId 948041649 Exit
                                 admin
[5/10/20 3:18:26:994 UTC] 000000a1 WSCredentialT <  getLTPAServerObject Exit
                                 LTPAServerObject: 948041649 domainId: admin
[5/10/20 3:18:26:995 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:26:995 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:26:996 UTC] 000000a1 LTPAServerObj >  createLTPAToken 948041649 Entry
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
[5/10/20 3:18:26:997 UTC] 000000a1 SecurityServe >  getRegistryImpl null Entry
[5/10/20 3:18:26:997 UTC] 000000a1 SecurityServe 3   getRegistryImpl null realm, returning thread context registry impl
[5/10/20 3:18:26:998 UTC] 000000a1 SecurityServe <  getRegistryImpl com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm Exit
[5/10/20 3:18:26:998 UTC] 000000a1 LTPAServerObj >  findFactory 948041649 Entry
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory
                                 true
[5/10/20 3:18:26:999 UTC] 000000a1 LTPAServerObj <  findFactory 948041649 Exit
                                 com.ibm.ws.security.ltpa.AuthzPropTokenFactory@e3c41a32
[5/10/20 3:18:26:999 UTC] 000000a1 AuthzPropToke >  AuthzPropToken from accessID Entry
[5/10/20 3:18:27:000 UTC] 000000a1 AuthzPropToke 3   Expiration set to: Sun May 10 05:18:27 UTC 2020
[5/10/20 3:18:27:000 UTC] 000000a1 AuthzPropToke <  AuthzPropToken from accessID Exit
[5/10/20 3:18:27:001 UTC] 000000a1 LTPAServerObj <  createLTPAToken 948041649 Exit
                                 <malformed parameter>
[5/10/20 3:18:27:001 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:18:27:002 UTC] 000000a1 PropagationTo <  hashCode calculated, current change counter: 1 Exit
[5/10/20 3:18:27:003 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:18:27:001 UTC] 000000a1 WSCredentialT <  createPropagationTokenFromWSCredential Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:18:27:004 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:18:27:004 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:18:27:004 UTC] 000000a1 ContextManage <  createPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:18:27:006 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange, new Exit
[5/10/20 3:18:27:006 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:007 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:27:007 UTC] 000000a1 WebCollaborat 3   isAuthenticate is false
[5/10/20 3:18:27:008 UTC] 000000a1 WebRequestImp >  getAppVHost Entry
[5/10/20 3:18:27:008 UTC] 000000a1 WebRequestImp <  getAppVHost Exit
                                 appVHost=default_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:18:27:009 UTC] 000000a1 WebCollaborat >  validSecAttrs Entry
                                 default_host:/
                                 /CertLoginSample/servlet
                                 GET
                                 false
                                 CertLoginSample_war
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 default_host
                                 false
[5/10/20 3:18:27:010 UTC] 000000a1 WebAppCache   >  getWebAccessContext Entry
                                 CertLoginSample_war
                                 default_host:/
                                 false
[5/10/20 3:18:27:010 UTC] 000000a1 WebAppCache   3   Okay, I found the entry for [CertLoginSample_war:default_host:/]
[5/10/20 3:18:27:011 UTC] 000000a1 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:18:27:011 UTC] 000000a1 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:18:27:012 UTC] 000000a1 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:18:27:012 UTC] 000000a1 WebConstraint >  getConstraints:  Entry
                                 /CertLoginSample/servlet
                                 GET
[5/10/20 3:18:27:013 UTC] 000000a1 WebConstraint 3   webConstraintsTable.length = 1
[5/10/20 3:18:27:014 UTC] 000000a1 SecurityConfi >  getPropertyBool id=security.allowCustomHTTPMethods default=false  (admin)  Entry
[5/10/20 3:18:27:014 UTC] 000000a1 SecurityConfi <  getPropertyBool id=security.allowCustomHTTPMethods  (admin)  val=false Exit
[5/10/20 3:18:27:015 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:27:015 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:27:016 UTC] 000000a1 WebConstraint 3   Looking at webResourceCollectionConstraints with URL patterns: 
[5/10/20 3:18:27:017 UTC] 000000a1 WebConstraint 3           url: /*
[5/10/20 3:18:27:017 UTC] 000000a1 WebResourceCo >  matches Entry
                                 /CertLoginSample/servlet
                                 GET
                                 true
[5/10/20 3:18:27:018 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:27:018 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:27:019 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:27:019 UTC] 000000a1 WebResourceCo >  isStandardHTTPMethod Entry
                                 GET
[5/10/20 3:18:27:020 UTC] 000000a1 WebResourceCo <  isStandardHTTPMethod Exit
                                 true
[5/10/20 3:18:27:021 UTC] 000000a1 WebResourceCo 3    .... check if in http omission methods list
[5/10/20 3:18:27:021 UTC] 000000a1 WebResourceCo 3   methodName is not in methodList, returning false
[5/10/20 3:18:27:022 UTC] 000000a1 WebResourceCo 3   -- Checking methods -- 
 validateAllMethods: false existMethodsList :true memberOfMethodList :true isStandardHTTPMethod :true allowCustomHTTPMethods :true
 existOmissionMethodsList :false memberOfOmissionMethodList :false
[5/10/20 3:18:27:022 UTC] 000000a1 WebResourceCo 3    .... check if in http methods list
[5/10/20 3:18:27:023 UTC] 000000a1 WebResourceCo 3   memberOfList, methodName: GET methodList[0]: GET
[5/10/20 3:18:27:023 UTC] 000000a1 WebResourceCo 3   methodName is in methodList, returning true
[5/10/20 3:18:27:024 UTC] 000000a1 WebResourceCo 3   Checking URL: /*
[5/10/20 3:18:27:024 UTC] 000000a1 WebResourceCo <  matches (PathName) : /* Exit
[5/10/20 3:18:27:025 UTC] 000000a1 WebConstraint <  getConstraints not null Exit
[5/10/20 3:18:27:025 UTC] 000000a1 WebCollaborat >  unprotectedSpecialURI Entry
                                 webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
                                 /CertLoginSample/servlet
                                 GET
                                 REQUEST
[5/10/20 3:18:27:026 UTC] 000000a1 WebCollaborat <  unprotectedSpecialURI Exit
                                 <null>
[5/10/20 3:18:27:027 UTC] 000000a1 WebCollaborat <  validSecAttrs Exit
                                 <null>
[5/10/20 3:18:27:027 UTC] 000000a1 WebCollaborat 3    List of required roles for uri /CertLoginSample/servlet is: 
[5/10/20 3:18:27:028 UTC] 000000a1 WebCollaborat 3    required role: Manager
[5/10/20 3:18:27:028 UTC] 000000a1 WebRequestImp >  getAppContextRoot Entry
[5/10/20 3:18:27:029 UTC] 000000a1 WebRequestImp <  getAppContextRoot Exit
                                 appContextRoot=/
                                 isVHostAndContextRootSet=true
[5/10/20 3:18:27:030 UTC] 000000a1 WebRequestImp >  getAppVHost Entry
[5/10/20 3:18:27:030 UTC] 000000a1 WebRequestImp <  getAppVHost Exit
                                 appVHost=default_host
                                 isVHostAndContextRootSet=true
[5/10/20 3:18:27:031 UTC] 000000a1 WebCollaborat >  isURIBoundByConstraint Entry
                                 CertLoginSample_war
                                 /
                                 default_host
                                 /CertLoginSample/servlet
[5/10/20 3:18:27:031 UTC] 000000a1 WebAppCache   >  getWebAccessContext Entry
                                 CertLoginSample_war
                                 default_host:/
                                 false
[5/10/20 3:18:27:032 UTC] 000000a1 WebAppCache   3   Okay, I found the entry for [CertLoginSample_war:default_host:/]
[5/10/20 3:18:27:032 UTC] 000000a1 WebAppCache   <  getWebAccessContext Exit
[5/10/20 3:18:27:033 UTC] 000000a1 WebAccessCont >  WebAccessContext with ServletMap Entry
[5/10/20 3:18:27:034 UTC] 000000a1 WebAccessCont <  WebAccessContext with ServletMap Exit
[5/10/20 3:18:27:034 UTC] 000000a1 WebConstraint >  existsExactMatchURI Entry
                                 /CertLoginSample/servlet
[5/10/20 3:18:27:035 UTC] 000000a1 WebConstraint 3   webConstraintsTable.length = 1
[5/10/20 3:18:27:035 UTC] 000000a1 WebConstraint <  existsExactMatchURI : no match, returning false Exit
[5/10/20 3:18:27:036 UTC] 000000a1 WebCollaborat <  isURIBoundByConstraint Exit
                                 false
[5/10/20 3:18:27:037 UTC] 000000a1 WebCollaborat 3   isURIBound for uri: /CertLoginSample/servlet: false
[5/10/20 3:18:27:037 UTC] 000000a1 WebCollaborat 3   securityConstraints for uri /CertLoginSample/servlet are: com.ibm.ws.security.web.WebResourceCollectionConstraints@bf2cc04c
[5/10/20 3:18:27:038 UTC] 000000a1 WebCollaborat 3   URI -  /CertLoginSample/servlet.GET is protected
[5/10/20 3:18:27:038 UTC] 000000a1 ContextManage >  getCallerSubject Entry
[5/10/20 3:18:27:039 UTC] 000000a1 ContextManage <  getCallerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:039 UTC] 000000a1 WebCollaborat 3   Saving previous subject Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:040 UTC] 000000a1 WebCollaborat >  checkAuthStatus Entry
                                 AuthenticationResult.SUCCESS
                                 webAppName[Hello Servlet]
isProtected[true]
realm[Default Realm]
challengeType[CLIENT_CERT]
authMechanism[LTPA]
SSLEnabled[false]
SSOEnabled[true]
secureSSO[false]
defaultToBasic[false]
LTPACookieName[LtpaToken]
loginCookieName[null]
CookieSuffix[null]
[5/10/20 3:18:27:041 UTC] 000000a1 WebCollaborat <  checkAuthStatus Exit
                                 <null>
[5/10/20 3:18:27:041 UTC] 000000a1 WSCredentialI >  getSecurityName Entry
[5/10/20 3:18:27:042 UTC] 000000a1 WSCredentialI <  getSecurityName Exit
                                 wsadmin
[5/10/20 3:18:27:043 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:27:043 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:27:044 UTC] 000000a1 WebCollaborat >  checkAuthorization Entry
[5/10/20 3:18:27:044 UTC] 000000a1 WebCollaborat 3   isSetDenyUncoveredHttpMethods: false
[5/10/20 3:18:27:045 UTC] 000000a1 WebCollaborat 3   required roles: Manager
[5/10/20 3:18:27:046 UTC] 000000a1 WebCollaborat 3   http method: GET
[5/10/20 3:18:27:047 UTC] 000000a1 WebCollaborat 3   http method: PUT
[5/10/20 3:18:27:047 UTC] 000000a1 WebCollaborat >  getAuthorizer Entry
[5/10/20 3:18:27:048 UTC] 000000a1 WebCollaborat <  getAuthorizer (default) Exit
[5/10/20 3:18:27:049 UTC] 000000a1 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@510d77c7
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:049 UTC] 000000a1 PluggableAuth >  getAuthorizationTableProxy Entry
[5/10/20 3:18:27:050 UTC] 000000a1 WSAccessManag >  isGrantedAnyRole Entry
                                 com.ibm.ws.security.web.WebAccessContext@510d77c7
                                 <null>
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:051 UTC] 000000a1 WSAccessManag >  getAuthenticatedSubject Entry
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:051 UTC] 000000a1 WSCredentialI >  isUnauthenticated Entry
[5/10/20 3:18:27:052 UTC] 000000a1 WSCredentialI <  isUnauthenticated Exit
                                 false
[5/10/20 3:18:27:053 UTC] 000000a1 WSCredentialI >  isBasicAuth Entry
[5/10/20 3:18:27:053 UTC] 000000a1 WSCredentialI <  isBasicAuth Exit
                                 false
[5/10/20 3:18:27:054 UTC] 000000a1 WSAccessManag <  getAuthenticatedSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:054 UTC] 000000a1 BaseAccessMan >  isStarstar Entry
[5/10/20 3:18:27:055 UTC] 000000a1 BaseAccessMan <  isStarstar Exit
                                 false
[5/10/20 3:18:27:055 UTC] 000000a1 WSCredentialI >  getRealmName Entry
[5/10/20 3:18:27:056 UTC] 000000a1 WSCredentialI <  getRealmName Exit
                                 defaultWIMFileBasedRealm
[5/10/20 3:18:27:057 UTC] 000000a1 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 <null>
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AllAuthenticatedUsersImpl@9abaee7a ]
            Name      [ AllAuthenticatedUsers ]
            Access ID [ AllAuthenticatedUsers ]

[5/10/20 3:18:27:057 UTC] 000000a1 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:18:27:058 UTC] 000000a1 WSAccessManag >  isSpecialSubjectGrantedAnyRole Entry
                                 <null>
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                           Subject     [ com.ibm.ejs.models.base.bindings.applicationbnd.impl.AllAuthenticatedInTrustedRealmsImpl@644f0468 ]
            Name      [ AllAuthenticatedInTrustedRealms ]
            Access ID [ AllAuthenticatedInTrustedRealms ]

[5/10/20 3:18:27:058 UTC] 000000a1 WSAccessManag <  isSpecialSubjectGrantedAnyRole Exit
                                 false
[5/10/20 3:18:27:059 UTC] 000000a1 WSAccessManag >  getAccessId Entry
[5/10/20 3:18:27:060 UTC] 000000a1 WSCredentialI >  getAccessId Entry
[5/10/20 3:18:27:060 UTC] 000000a1 WSCredentialI <  getAccessId Exit
                                 user:defaultWIMFileBasedRealm/uid=wsadmin,o=defaultWIMFileBasedRealm
[5/10/20 3:18:27:061 UTC] 000000a1 WSAccessManag <  getAccessId Exit
                                 user:defaultwimfilebasedrealm/uid=wsadmin,o=defaultwimfilebasedrealm
[5/10/20 3:18:27:061 UTC] 000000a1 WSAccessManag >  isGrantedAnyRole Entry
                                 <null>
                                 [Lorg.eclipse.jst.j2ee.common.SecurityRole;@24cbb3a0
                                 com.ibm.ws.security.auth.WSCredentialImpl@b54050af
[5/10/20 3:18:27:062 UTC] 000000a1 WSAccessManag <  isGrantedAnyRole Exit
                                 false
[5/10/20 3:18:27:062 UTC] 000000a1 WSAccessManag <  isGrantedAnyRole Exit
                                 false
[5/10/20 3:18:27:063 UTC] 000000a1 WSAccessManag <  isGrantedAnyRole Exit
                                 false
[5/10/20 3:18:27:064 UTC] 000000a1 WebCollaborat <  checkAuthorization: throw AccessException Exit
[5/10/20 3:18:27:069 UTC] 000000a1 WebCollaborat 3   checkAuthorization() failed, here is the message in the exception: Authorization failed, Not granted any of the required roles: Manager 
[5/10/20 3:18:27:069 UTC] 000000a1 WebCollaborat A   SECJ0129E: Authorization failed for user wsadmin:defaultWIMFileBasedRealm while invoking GET on default_host://CertLoginSample/servlet, Authorization failed, Not granted any of the required roles: Manager 
[5/10/20 3:18:27:071 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:27:072 UTC] 000000a1 ContextManage 3   Setting caller subject: Subject:
	Principal: defaultWIMFileBasedRealm/wsadmin
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@b54050af
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@ec40e41
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@323a39c9
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@91fc485f

[5/10/20 3:18:27:072 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:27:073 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:27:073 UTC] 000000a1 ContextManage >  getPropagationToken Entry
                                 com.ibm.ws.security.token.PropagationTokenImpl:1
[5/10/20 3:18:27:074 UTC] 000000a1 PropagationTo >  hashCode Entry
[5/10/20 3:18:27:075 UTC] 000000a1 PropagationTo <  hashCode -> -1160550034 Exit
[5/10/20 3:18:27:074 UTC] 000000a1 ContextManage <  getPropagationToken Exit
                                 com.ibm.ws.security.token.PropagationTokenImpl@bad3696e
[5/10/20 3:18:27:071 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:18:27:076 UTC] 000000af ContextManage >  getServerSubject Entry
[5/10/20 3:18:27:076 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: propagation token already exists and propagateFirstCallerOnly is true. Exit
[5/10/20 3:18:27:078 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:078 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:27:079 UTC] 000000a1 SecurityConfi >  getPropertyBool id=com.ibm.ws.security.addHttpOnlyAttributeToCookies default=false  (admin)  Entry
[5/10/20 3:18:27:077 UTC] 000000af ContextManage 3   AdminContext.peek() = null _domainId: admin initialized: true serverSubject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:27:080 UTC] 000000af ContextManage 3   serverSubject again: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:27:080 UTC] 000000af ContextManage >  getServerSubjectInternal Entry
[5/10/20 3:18:27:081 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:082 UTC] 000000af ContextManage >  getRegistryObject Entry
[5/10/20 3:18:27:079 UTC] 000000a1 SecurityConfi <  getPropertyBool id=com.ibm.ws.security.addHttpOnlyAttributeToCookies  (admin)  val=true Exit
[5/10/20 3:18:27:083 UTC] 000000a1 WebAttributes 3   Setting httpOnly cookie
[5/10/20 3:18:27:083 UTC] 000000a1 WebAttributes 3   Setting cookie into response.
[5/10/20 3:18:27:084 UTC] 000000a1 WebAttributes 3   Cookie will be sent over both http and https protocol
[5/10/20 3:18:27:082 UTC] 000000af ContextManage <  getRegistryObject Exit
                                 com.ibm.ws.security.registry.UserRegistryImpl@806ec68;impl=com.ibm.ws.wim.registry.WIMUserRegistry@91a5bbe6{domainName=admin, useGlobalTransaction=true};realm=defaultWIMFileBasedRealm
[5/10/20 3:18:27:085 UTC] 000000af WSCredentialI >  isDestroyed Entry
[5/10/20 3:18:27:086 UTC] 000000af WSCredentialI <  isDestroyed Exit
                                 false
[5/10/20 3:18:27:086 UTC] 000000af WSCredentialI >  getExpiration Entry
[5/10/20 3:18:27:087 UTC] 000000af WSCredentialI <  getExpiration Exit
                                 1589087460000
[5/10/20 3:18:27:087 UTC] 000000af AuthCache     >  getCushion Entry
[5/10/20 3:18:27:088 UTC] 000000af AuthCache     <  getCushion Exit
                                 600000
[5/10/20 3:18:27:088 UTC] 000000af ContextManage 3   Is server subject valid? true
[5/10/20 3:18:27:089 UTC] 000000af ContextManage <  getServerSubjectInternal: Server Subject returned with sufficient time left. Exit
[5/10/20 3:18:27:085 UTC] 000000a1 WebCollaborat 3   Authorization check for uri: /CertLoginSample/servlet failed. 
[5/10/20 3:18:27:089 UTC] 000000af ContextManage <  getServerSubject Exit
                                 Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:27:090 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:18:27:091 UTC] 000000af ContextManage >  getInvocationSubject Entry
[5/10/20 3:18:27:091 UTC] 000000af ContextManage <  getInvocationSubject Exit
[5/10/20 3:18:27:092 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:27:090 UTC] 000000a1 WebCollaborat <  createReply Exit
                                 com.ibm.ws.security.web.DenyReply@7d668db2
[5/10/20 3:18:27:093 UTC] 000000a1 WebCollaborat <  authorize Exit
                                 com.ibm.ws.security.web.DenyReply@7d668db2
[5/10/20 3:18:27:094 UTC] 000000a1 SecurityAutho 3   SecurityAuthorizationModule received an onWebAuthTime event
[5/10/20 3:18:27:092 UTC] 000000af ContextManage 3   Setting invocation subject: Subject:
	Principal: defaultWIMFileBasedRealm/server:DefaultCell01_DefaultNode01_server1
	Public Credential: com.ibm.ws.security.auth.WSCredentialImpl@eae89400
	Private Credential: com.ibm.ws.security.token.SingleSignonTokenImpl@21c1b37a
	Private Credential: com.ibm.ws.security.token.AuthenticationTokenImpl@1d4ccce0
	Private Credential: com.ibm.ws.security.token.AuthorizationTokenImpl@c4edc649

[5/10/20 3:18:27:095 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:096 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:27:094 UTC] 000000a1 EJSWebCollabo >  handleException Entry
                                 com.ibm.ws.webcontainer.srt.SRTServletRequest@5ad19e3f
                                 com.ibm.ws.webcontainer.srt.SRTServletResponse@aaab542f
                                 com.ibm.ws.security.web.WebSecurityException: AuthorizationFailed
	at com.ibm.ws.security.web.EJSWebCollaborator.preInvoke(EJSWebCollaborator.java:451)
	at com.ibm.ws.webcontainer.collaborator.WebAppSecurityCollaboratorImpl.preInvoke(WebAppSecurityCollaboratorImpl.java:230)
	at com.ibm.wsspi.webcontainer.collaborator.CollaboratorHelper.preInvokeCollaborators(CollaboratorHelper.java:436)
	at com.ibm.ws.webcontainer.filter.WebAppFilterManager.invokeFilters(WebAppFilterManager.java:1091)
	at com.ibm.ws.webcontainer.webapp.WebApp.handleRequest(WebApp.java:4219)
	at com.ibm.ws.webcontainer.webapp.WebAppImpl.handleRequest(WebAppImpl.java:2208)
	at com.ibm.ws.webcontainer.webapp.WebGroup.handleRequest(WebGroup.java:304)
	at com.ibm.ws.webcontainer.WebContainer.handleRequest(WebContainer.java:1030)
	at com.ibm.ws.webcontainer.WSWebContainer.handleRequest(WSWebContainer.java:1817)
	at com.ibm.ws.webcontainer.channel.WCChannelLink.ready(WCChannelLink.java:382)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleDiscrimination(HttpInboundLink.java:465)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.handleNewRequest(HttpInboundLink.java:532)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.processRequest(HttpInboundLink.java:318)
	at com.ibm.ws.http.channel.inbound.impl.HttpInboundLink.ready(HttpInboundLink.java:289)
	at com.ibm.ws.ssl.channel.impl.SSLConnectionLink.determineNextChannel(SSLConnectionLink.java:1187)
	at com.ibm.ws.ssl.channel.impl.SSLConnectionLink.readyInboundPostHandshake(SSLConnectionLink.java:768)
	at com.ibm.ws.ssl.channel.impl.SSLConnectionLink$MyHandshakeCompletedCallback.complete(SSLConnectionLink.java:464)
	at com.ibm.ws.ssl.channel.impl.SSLUtils.handleHandshake(SSLUtils.java:1137)
	at com.ibm.ws.ssl.channel.impl.SSLHandshakeIOCallback.complete(SSLHandshakeIOCallback.java:87)
	at com.ibm.ws.tcp.channel.impl.AioReadCompletionListener.futureCompleted(AioReadCompletionListener.java:175)
	at com.ibm.io.async.AbstractAsyncFuture.invokeCallback(AbstractAsyncFuture.java:217)
	at com.ibm.io.async.AsyncChannelFuture.fireCompletionActions(AsyncChannelFuture.java:161)
	at com.ibm.io.async.AsyncFuture.completed(AsyncFuture.java:138)
	at com.ibm.io.async.ResultHandler.complete(ResultHandler.java:204)
	at com.ibm.io.async.ResultHandler.runEventProcessingLoop(ResultHandler.java:775)
	at com.ibm.io.async.ResultHandler$2.run(ResultHandler.java:905)
	at com.ibm.ws.util.ThreadPool$Worker.run(ThreadPool.java:1909)

[5/10/20 3:18:27:097 UTC] 000000af ContextManage >  getInstance Entry
[5/10/20 3:18:27:098 UTC] 000000af ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:27:098 UTC] 000000af ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:18:27:099 UTC] 000000af ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:099 UTC] 000000af ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:27:097 UTC] 000000a1 EJSWebCollabo 3   Response not committed
[5/10/20 3:18:27:101 UTC] 000000a1 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:27:102 UTC] 000000a1 EJSWebCollabo 3   handleException popped resource CertLoginSample_war of type Application
[5/10/20 3:18:27:102 UTC] 000000a1 WebSecurityCo 3   Getting pushed admin value "false" for: com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:27:105 UTC] 000000a1 EJSWebCollabo <  handleException Exit
[5/10/20 3:18:27:106 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:27:106 UTC] 000000a1 EJSWebCollabo 3   Resetting invoked: null and received: nullsubjects
[5/10/20 3:18:27:107 UTC] 000000a1 ContextManage >  setInvocationSubject Entry
[5/10/20 3:18:27:108 UTC] 000000a1 ContextManage 3   Setting invocation subject to NULL.
[5/10/20 3:18:27:108 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:109 UTC] 000000a1 ContextManage <  setInvocationSubject Exit
[5/10/20 3:18:27:110 UTC] 000000a1 ContextManage >  setCallerSubject Entry
[5/10/20 3:18:27:111 UTC] 000000a1 ContextManage 3   Setting caller subject to NULL.
[5/10/20 3:18:27:111 UTC] 000000a1 SubjectHelper >  updatePropagationTokenWithSubjectChange Entry
[5/10/20 3:18:27:112 UTC] 000000a1 ContextManage >  getInstance Entry
[5/10/20 3:18:27:112 UTC] 000000a1 SubjectHelper <  updatePropagationTokenWithSubjectChange: Subject is null. Exit
[5/10/20 3:18:27:113 UTC] 000000a1 ServerStatusH 3   isRunningInServerMode=true
[5/10/20 3:18:27:114 UTC] 000000a1 ContextManage <  setCallerSubject Exit
[5/10/20 3:18:27:115 UTC] 000000a1 WebSecurityCo 3   Getting pushed security value "true" for: com.ibm.ws.security.web.WebSecurityContext@82d4f4ba
[5/10/20 3:18:27:116 UTC] 000000a1 EJSWebCollabo 3   postInvoke popped null resource
[5/10/20 3:18:27:117 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
[5/10/20 3:18:27:118 UTC] 000000a1 EJSWebCollabo >  postInvoke Entry
                                 <null>
[5/10/20 3:18:27:119 UTC] 000000a1 EJSWebCollabo <  postInvoke Exit
